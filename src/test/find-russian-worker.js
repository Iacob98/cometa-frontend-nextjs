// –ü–æ–∏—Å–∫ —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ —Å –Ω–∞–≤—ã–∫–æ–º "god"

const API_BASE = 'http://localhost:3001/api';

async function findRussianWorker() {
  console.log('üîç –ü–æ–∏—Å–∫ —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ —Å –Ω–∞–≤—ã–∫–æ–º "god"');
  console.log('================================================');

  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const response = await fetch(`${API_BASE}/users?page=1&per_page=50`);
    const data = await response.json();

    if (response.ok) {
      console.log(`‚úÖ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: ${data.total}`);
      console.log('');

      // –§–∏–ª—å—Ç—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ (crew, worker, foreman)
      const availableWorkers = data.items.filter(user =>
        ["crew", "worker", "foreman"].includes(user.role)
      );

      console.log(`üë∑ –î–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤: ${availableWorkers.length}`);
      console.log('');

      // –ò—â–µ–º —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤
      const russianWorkers = availableWorkers.filter(user =>
        user.lang_pref === 'ru'
      );

      console.log(`üá∑üá∫ –†—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤: ${russianWorkers.length}`);
      russianWorkers.forEach((user, index) => {
        console.log(`   ${index + 1}. ${user.full_name} (${user.email || '–ë–µ–∑ email'})`);
        console.log(`      üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${user.phone || '–ù–µ—Ç'}`);
        console.log(`      üéØ –†–æ–ª—å: ${user.role}`);
        console.log(`      üí° –ù–∞–≤—ã–∫–∏: [${user.skills?.join(', ') || '–ù–µ—Ç –Ω–∞–≤—ã–∫–æ–≤'}]`);
        console.log(`      ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω: ${user.is_active ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log('');
      });

      // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–∞–≤—ã–∫–æ–º "god"
      const godSkillUsers = availableWorkers.filter(user =>
        user.skills?.includes('god')
      );

      console.log(`üë®‚Äçüíº –†–∞–±–æ—Ç–Ω–∏–∫–æ–≤ —Å –Ω–∞–≤—ã–∫–æ–º "god": ${godSkillUsers.length}`);
      godSkillUsers.forEach((user, index) => {
        console.log(`   ${index + 1}. üåü ${user.full_name} (${user.email || '–ë–µ–∑ email'})`);
        console.log(`      üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${user.phone || '–ù–µ—Ç'}`);
        console.log(`      üéØ –†–æ–ª—å: ${user.role}`);
        console.log(`      üåç –Ø–∑—ã–∫: ${user.lang_pref}`);
        console.log(`      üí° –ù–∞–≤—ã–∫–∏: [${user.skills?.join(', ') || '–ù–µ—Ç –Ω–∞–≤—ã–∫–æ–≤'}]`);
        console.log(`      üîë PIN: ${user.pin_code || '–ù–µ—Ç'}`);
        console.log(`      ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω: ${user.is_active ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log('');
      });

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "–µ—É—ã–µ –µ—É—É—É—É"
      const targetUser = data.items.find(user =>
        user.full_name.includes('–µ—É—ã–µ') || user.email === 'dddd@ff.com'
      );

      if (targetUser) {
        console.log('üéØ –ù–ê–ô–î–ï–ù –¶–ï–õ–ï–í–û–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨:');
        console.log('==============================');
        console.log(`üë§ –ò–º—è: ${targetUser.full_name}`);
        console.log(`üìß Email: ${targetUser.email}`);
        console.log(`üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${targetUser.phone || '–ù–µ—Ç'}`);
        console.log(`üéØ –†–æ–ª—å: ${targetUser.role}`);
        console.log(`üåç –Ø–∑—ã–∫: ${targetUser.lang_pref}`);
        console.log(`üí° –ù–∞–≤—ã–∫–∏: [${targetUser.skills?.join(', ') || '–ù–µ—Ç –Ω–∞–≤—ã–∫–æ–≤'}]`);
        console.log(`üîë PIN: ${targetUser.pin_code || '–ù–µ—Ç'}`);
        console.log(`‚úÖ –ê–∫—Ç–∏–≤–µ–Ω: ${targetUser.is_active ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log(`üìÖ –°–æ–∑–¥–∞–Ω: ${new Date(targetUser.created_at).toLocaleString('ru')}`);
        console.log('');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ø–∞–¥–∞–µ—Ç –ª–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "Available Workers"
        const isAvailableWorker = ["crew", "worker", "foreman"].includes(targetUser.role);
        console.log(`üîç –°—Ç–∞—Ç—É—Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:`);
        console.log(`   ‚úÖ –í–æ –≤–∫–ª–∞–¥–∫–µ "All Users": –î–ê (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ—Ö)`);
        console.log(`   ${isAvailableWorker ? '‚úÖ' : '‚ùå'} –í–æ –≤–∫–ª–∞–¥–∫–µ "Available Workers": ${isAvailableWorker ? '–î–ê' : '–ù–ï–¢'} (—Ä–æ–ª—å: ${targetUser.role})`);

        if (isAvailableWorker) {
          console.log('');
          console.log('üéâ –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê!');
          console.log('–í–∞—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –≤–∏–¥–µ–Ω –≤–æ –≤–∫–ª–∞–¥–∫–µ "Available Workers"');
        }
      } else {
        console.log('‚ùå –¶–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }

    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ API: ${response.status}`);
      console.log(`üìÑ –û—à–∏–±–∫–∞: ${JSON.stringify(data)}`);
    }

  } catch (error) {
    console.error('‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

findRussianWorker().catch(console.error);