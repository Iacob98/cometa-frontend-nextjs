{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/project-preparation/houses.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { AlertCircle, Home, MapPin, Calendar, Phone, Mail, FileText, Upload, Edit, Trash2, Plus, BarChart3, PieChart, Users, Building, CloudRain, Construction, CheckCircle, ClipboardList, Camera, Paperclip, Eye, Download, X } from 'lucide-react';\nimport { useProjectHouses, useCreateHouse, useUpdateHouse, useDeleteHouse } from '@/hooks/use-houses';\nimport { useCabinets } from '@/hooks/use-zone-layout';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'sonner';\n\ninterface HousesProps {\n  projectId: string;\n}\n\ninterface CreateHouseForm {\n  address: string;\n  house_number?: string;\n  cabinet_id?: string;\n  apartment_count: number;\n  floor_count: number;\n  connection_type: string;\n  method: string;\n  house_type: string;\n  planned_connection_date?: string;\n  contact_name?: string;\n  contact_phone?: string;\n  contact_email?: string;\n  coordinates_lat?: number;\n  coordinates_lng?: number;\n  notes?: string;\n}\n\ninterface EditHouseForm {\n  address: string;\n  house_number?: string;\n  connection_type: string;\n  method: string;\n  status: string;\n  planned_connection_date?: string;\n  work_started_at?: string;\n  work_completed_at?: string;\n  contact_name?: string;\n  contact_phone?: string;\n  notes?: string;\n}\n\nconst CONNECTION_TYPES = [\n  { value: 'full', label: 'Vollständiger Anschluss', icon: Home },\n  { value: 'property', label: 'Bis Grundstück', icon: Building },\n  { value: 'in_home', label: 'bis Hauswand', icon: Home },\n  { value: 'other', label: 'Sonstiges', icon: AlertCircle },\n];\n\nconst INSTALLATION_METHODS = [\n  { value: 'trench', label: 'Graben', icon: Construction },\n  { value: 'aerial', label: 'Luftleitung', icon: CloudRain },\n  { value: 'underground', label: 'Unterirdisch', icon: Construction },\n  { value: 'building', label: 'Gebäudeverlegung', icon: Construction },\n];\n\nconst HOUSE_TYPES = [\n  { value: 'residential', label: 'Wohngebäude', icon: Home },\n  { value: 'commercial', label: 'Geschäftsgebäude', icon: Building },\n  { value: 'mixed', label: 'Gemischte Nutzung', icon: Building },\n  { value: 'industrial', label: 'Industriegebäude', icon: Building },\n];\n\nconst CONNECTION_STATUSES = [\n  { value: 'created', label: 'Erstellt', color: 'bg-gray-100 text-gray-800' },\n  { value: 'planned', label: 'Geplant', color: 'bg-blue-100 text-blue-800' },\n  { value: 'started', label: 'Begonnen', color: 'bg-yellow-100 text-yellow-800' },\n  { value: 'finished', label: 'Fertiggestellt', color: 'bg-green-100 text-green-800' },\n];\n\nconst DOCUMENT_TYPES = [\n  { value: 'plan', label: 'Bauplan', icon: ClipboardList },\n  { value: 'permit', label: 'Genehmigung', icon: FileText },\n  { value: 'contract', label: 'Vertrag', icon: FileText },\n  { value: 'photo_before', label: 'Foto vorher', icon: Camera },\n  { value: 'photo_during', label: 'Foto während', icon: Camera },\n  { value: 'photo_after', label: 'Foto nachher', icon: Camera },\n  { value: 'other', label: 'Sonstiges', icon: Paperclip },\n];\n\nexport default function Houses({ projectId }: HousesProps) {\n  const [activeTab, setActiveTab] = useState('houses');\n  const [editingHouse, setEditingHouse] = useState<string | null>(null);\n  const [selectedHouseForDocs, setSelectedHouseForDocs] = useState<string | null>(null);\n  const [selectedDocumentFile, setSelectedDocumentFile] = useState<File | null>(null);\n  const [viewingDocument, setViewingDocument] = useState<{\n    url: string;\n    filename: string;\n    fileType: string;\n  } | null>(null);\n  const [houseDocuments, setHouseDocuments] = useState<any[]>([]);\n  const [loadingDocs, setLoadingDocs] = useState(false);\n\n  const { data: housesData, isLoading, error, refetch } = useProjectHouses(projectId);\n  const { data: cabinets, isLoading: cabinetsLoading } = useCabinets(projectId);\n  const createHouse = useCreateHouse();\n  const updateHouse = useUpdateHouse();\n  const deleteHouse = useDeleteHouse();\n  const uploadDocument = { mutate: () => {}, isPending: false }; // TODO: Implement useUploadHouseDocument hook\n\n  const createForm = useForm<CreateHouseForm>();\n  const editForm = useForm<EditHouseForm>();\n\n  // Load documents when house is selected\n  const loadHouseDocuments = async (houseId: string) => {\n    setLoadingDocs(true);\n    try {\n      const response = await fetch(`/api/houses/${houseId}/documents`);\n      if (response.ok) {\n        const data = await response.json();\n        setHouseDocuments(data.items || []);\n      } else {\n        setHouseDocuments([]);\n        toast.error('Failed to load documents');\n      }\n    } catch (error) {\n      console.error('Error loading documents:', error);\n      setHouseDocuments([]);\n      toast.error('Error loading documents');\n    } finally {\n      setLoadingDocs(false);\n    }\n  };\n\n  // Load documents when house selection changes\n  const handleHouseSelectForDocs = (houseId: string) => {\n    setSelectedHouseForDocs(houseId);\n    loadHouseDocuments(houseId);\n  };\n\n  // View document handler\n  const handleViewDocument = (doc: any) => {\n    setViewingDocument({\n      url: doc.download_url,\n      filename: doc.filename,\n      fileType: doc.file_type,\n    });\n  };\n\n  // Delete document handler\n  const handleDeleteDocument = async (documentId: string) => {\n    if (!selectedHouseForDocs) return;\n\n    if (!window.confirm('Are you sure you want to delete this document?')) return;\n\n    try {\n      const response = await fetch(`/api/houses/${selectedHouseForDocs}/documents/${documentId}`, {\n        method: 'DELETE',\n      });\n\n      if (response.ok) {\n        toast.success('Document deleted successfully');\n        loadHouseDocuments(selectedHouseForDocs);\n      } else {\n        toast.error('Failed to delete document');\n      }\n    } catch (error) {\n      console.error('Error deleting document:', error);\n      toast.error('Error deleting document');\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <Skeleton className=\"h-8 w-1/3\" />\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <Skeleton className=\"h-24\" />\n          <Skeleton className=\"h-24\" />\n          <Skeleton className=\"h-24\" />\n          <Skeleton className=\"h-24\" />\n        </div>\n        <Skeleton className=\"h-96\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"text-center\">\n            <AlertCircle className=\"mx-auto h-12 w-12 text-red-500 mb-4\" />\n            <h3 className=\"text-lg font-medium mb-2\">Error Loading Houses</h3>\n            <p className=\"text-gray-600 mb-4\">{error.message}</p>\n            <Button onClick={() => refetch()}>Try Again</Button>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const handleCreateHouse = async (data: CreateHouseForm) => {\n    try {\n      const result = await createHouse.mutateAsync({\n        ...data,\n        project_id: projectId,\n      });\n\n      // Upload document if one was selected\n      if (selectedDocumentFile && result.id) {\n        try {\n          const formData = new FormData();\n          formData.append('file', selectedDocumentFile);\n          formData.append('document_type', 'connection_plan');\n          formData.append('description', 'Connection plan uploaded during house creation');\n\n          const response = await fetch(`/api/houses/${result.id}/documents`, {\n            method: 'POST',\n            body: formData,\n          });\n\n          if (!response.ok) {\n            throw new Error('Document upload failed');\n          }\n\n          toast.success('House and document added successfully');\n        } catch (docError) {\n          console.error('Document upload error:', docError);\n          toast.warning('House added but document upload failed');\n        }\n      } else {\n        toast.success('House added successfully');\n      }\n\n      createForm.reset();\n      setSelectedDocumentFile(null);\n      refetch();\n    } catch (error) {\n      console.error('Create house error:', error);\n      toast.error('Failed to add house');\n    }\n  };\n\n  const handleUpdateHouse = async (houseId: string, data: EditHouseForm) => {\n    try {\n      await updateHouse.mutateAsync({\n        id: houseId,\n        data: data,\n      });\n      editForm.reset();\n      setEditingHouse(null);\n      refetch();\n      toast.success('House updated successfully');\n    } catch (error) {\n      toast.error('Failed to update house');\n    }\n  };\n\n  const handleDeleteHouse = async (houseId: string) => {\n    if (window.confirm('Are you sure you want to delete this house?')) {\n      try {\n        await deleteHouse.mutateAsync(houseId);\n        refetch();\n        toast.success('House deleted successfully');\n      } catch (error) {\n        toast.error('Failed to delete house');\n      }\n    }\n  };\n\n  const totalHouses = housesData?.houses?.length || 0;\n  const finishedCount = housesData?.houses?.filter(h => h.status === 'finished')?.length || 0;\n  const startedCount = housesData?.houses?.filter(h => h.status === 'started')?.length || 0;\n  const totalApartments = housesData?.houses?.reduce((sum, h) => sum + (h.apartment_count || 1), 0) || 0;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h3 className=\"text-2xl font-bold\">🏠 HA & HP+</h3>\n          <p className=\"text-gray-600\">House management, connection status, and documentation</p>\n        </div>\n      </div>\n\n      {/* Houses Summary */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Home className=\"w-5 h-5 text-blue-500\" />\n              <div>\n                <p className=\"text-sm font-medium\">Häuser gesamt</p>\n                <p className=\"text-2xl font-bold\">{totalHouses}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Users className=\"w-5 h-5 text-green-500\" />\n              <div>\n                <p className=\"text-sm font-medium\">Fertiggestellt</p>\n                <p className=\"text-2xl font-bold\">{finishedCount}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Calendar className=\"w-5 h-5 text-orange-500\" />\n              <div>\n                <p className=\"text-sm font-medium\">Begonnen</p>\n                <p className=\"text-2xl font-bold\">{startedCount}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Home className=\"w-5 h-5 text-purple-500\" />\n              <div>\n                <p className=\"text-sm font-medium\">Einheiten gesamt</p>\n                <p className=\"text-2xl font-bold\">{totalApartments}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Houses Management Tabs */}\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"houses\">Projekthäuser</TabsTrigger>\n          <TabsTrigger value=\"add\">Haus hinzufügen</TabsTrigger>\n          <TabsTrigger value=\"status\">Anschlussstatus</TabsTrigger>\n          <TabsTrigger value=\"documents\">Hausdokumente</TabsTrigger>\n        </TabsList>\n\n        {/* Project Houses Tab */}\n        <TabsContent value=\"houses\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Liste der Projekthäuser</CardTitle>\n              <CardDescription>\n                Houses assigned to this project with connection details\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {totalHouses > 0 ? (\n                <div className=\"space-y-4\">\n                  {housesData?.houses?.map((house) => (\n                    <Card key={house.id} className=\"border-l-4 border-l-blue-500\">\n                      <CardContent className=\"p-4\">\n                        {editingHouse === house.id ? (\n                          <form onSubmit={editForm.handleSubmit((data) => handleUpdateHouse(house.id, data))} className=\"space-y-4\">\n                            <div className=\"grid grid-cols-2 gap-4\">\n                              <div>\n                                <Label htmlFor=\"address\">Address</Label>\n                                <Input\n                                  defaultValue={house.address}\n                                  {...editForm.register('address', { required: true })}\n                                />\n                              </div>\n                              <div>\n                                <Label htmlFor=\"house_number\">House Number</Label>\n                                <Input\n                                  defaultValue={house.house_number || ''}\n                                  {...editForm.register('house_number')}\n                                />\n                              </div>\n                            </div>\n\n                            <div className=\"grid grid-cols-2 gap-4\">\n                              <div>\n                                <Label htmlFor=\"connection_type\">Connection Type</Label>\n                                <Select onValueChange={(value) => editForm.setValue('connection_type', value)} defaultValue={house.connection_type}>\n                                  <SelectTrigger>\n                                    <SelectValue />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                    {CONNECTION_TYPES.map(type => (\n                                      <SelectItem key={type.value} value={type.value}>\n                                        {type.label}\n                                      </SelectItem>\n                                    ))}\n                                  </SelectContent>\n                                </Select>\n                              </div>\n                              <div>\n                                <Label htmlFor=\"method\">Installation Method</Label>\n                                <Select onValueChange={(value) => editForm.setValue('method', value)} defaultValue={house.method}>\n                                  <SelectTrigger>\n                                    <SelectValue />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                    {INSTALLATION_METHODS.map(method => (\n                                      <SelectItem key={method.value} value={method.value}>\n                                        {method.label}\n                                      </SelectItem>\n                                    ))}\n                                  </SelectContent>\n                                </Select>\n                              </div>\n                            </div>\n\n                            <div className=\"grid grid-cols-2 gap-4\">\n                              <div>\n                                <Label htmlFor=\"status\">Status</Label>\n                                <Select onValueChange={(value) => editForm.setValue('status', value)} defaultValue={house.status}>\n                                  <SelectTrigger>\n                                    <SelectValue />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                    {CONNECTION_STATUSES.map(status => (\n                                      <SelectItem key={status.value} value={status.value}>\n                                        {status.label}\n                                      </SelectItem>\n                                    ))}\n                                  </SelectContent>\n                                </Select>\n                              </div>\n                              <div>\n                                <Label htmlFor=\"planned_connection_date\">Planned Date</Label>\n                                <Input\n                                  type=\"date\"\n                                  defaultValue={house.planned_connection_date || ''}\n                                  {...editForm.register('planned_connection_date')}\n                                />\n                              </div>\n                            </div>\n\n                            <div className=\"grid grid-cols-2 gap-4\">\n                              <div>\n                                <Label htmlFor=\"work_started_at\">Work Start Time</Label>\n                                <Input\n                                  type=\"datetime-local\"\n                                  defaultValue={house.work_started_at ? new Date(house.work_started_at).toISOString().slice(0, 16) : ''}\n                                  {...editForm.register('work_started_at')}\n                                />\n                                <p className=\"text-xs text-gray-500 mt-1\">When work began on this connection</p>\n                              </div>\n                              <div>\n                                <Label htmlFor=\"work_completed_at\">Work Completion Time</Label>\n                                <Input\n                                  type=\"datetime-local\"\n                                  defaultValue={house.work_completed_at ? new Date(house.work_completed_at).toISOString().slice(0, 16) : ''}\n                                  {...editForm.register('work_completed_at')}\n                                />\n                                <p className=\"text-xs text-gray-500 mt-1\">When work was completed</p>\n                              </div>\n                            </div>\n\n                            <div>\n                              <Label htmlFor=\"notes\">Notes</Label>\n                              <Textarea\n                                defaultValue={house.notes || ''}\n                                {...editForm.register('notes')}\n                              />\n                            </div>\n\n                            <div className=\"flex space-x-2\">\n                              <Button type=\"submit\" disabled={updateHouse.isPending}>\n                                {updateHouse.isPending ? 'Updating...' : 'Update'}\n                              </Button>\n                              <Button type=\"button\" variant=\"outline\" onClick={() => setEditingHouse(null)}>\n                                Cancel\n                              </Button>\n                            </div>\n                          </form>\n                        ) : (\n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex-1\">\n                              <div className=\"flex items-center space-x-2 mb-2\">\n                                <Badge className={CONNECTION_STATUSES.find(s => s.value === house.status)?.color || 'bg-gray-100 text-gray-800'}>\n                                  {CONNECTION_STATUSES.find(s => s.value === house.status)?.label || house.status}\n                                </Badge>\n                                <Badge variant=\"outline\">\n                                  {(() => {\n                                    const type = CONNECTION_TYPES.find(t => t.value === house.connection_type);\n                                    const Icon = type?.icon;\n                                    return Icon ? <Icon className=\"w-4 h-4 mr-1\" /> : null;\n                                  })()}\n                                  {house.connection_type}\n                                </Badge>\n                                <Badge variant=\"outline\">\n                                  {(() => {\n                                    const method = INSTALLATION_METHODS.find(m => m.value === house.method);\n                                    const Icon = method?.icon;\n                                    return Icon ? <Icon className=\"w-4 h-4 mr-1\" /> : null;\n                                  })()}\n                                  {house.method}\n                                </Badge>\n                              </div>\n                              <h5 className=\"font-semibold\">{house.address}</h5>\n                              {house.house_number && (\n                                <p className=\"text-sm text-gray-600\">House Number: {house.house_number}</p>\n                              )}\n                              <div className=\"flex items-center space-x-4 mt-2 text-sm\">\n                                <span className=\"flex items-center\">\n                                  <Home className=\"w-4 h-4 mr-1\" />\n                                  {house.apartment_count} Units\n                                </span>\n                                {house.planned_connection_date && (\n                                  <span className=\"flex items-center\">\n                                    <Calendar className=\"w-4 h-4 mr-1\" />\n                                    {house.planned_connection_date}\n                                  </span>\n                                )}\n                                {house.contact_name && (\n                                  <span className=\"flex items-center\">\n                                    <Phone className=\"w-4 h-4 mr-1\" />\n                                    {house.contact_name}\n                                  </span>\n                                )}\n                              </div>\n                              {house.notes && (\n                                <p className=\"text-sm text-gray-500 mt-1\">Note: {house.notes}</p>\n                              )}\n                            </div>\n                            <div className=\"flex space-x-2\">\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => setEditingHouse(house.id)}\n                              >\n                                <Edit className=\"w-4 h-4\" />\n                              </Button>\n                              <Button\n                                size=\"sm\"\n                                variant=\"destructive\"\n                                onClick={() => handleDeleteHouse(house.id)}\n                                disabled={deleteHouse.isPending}\n                              >\n                                <Trash2 className=\"w-4 h-4\" />\n                              </Button>\n                            </div>\n                          </div>\n                        )}\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <Home className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n                  <h3 className=\"text-lg font-medium mb-2\">Keine Häuser dem Projekt hinzugefügt</h3>\n                  <p className=\"text-gray-600 mb-4\">\n                    Add houses to start tracking connections for this project.\n                  </p>\n                  <Button onClick={() => setActiveTab('add')}>\n                    <Plus className=\"w-4 h-4 mr-2\" />\n                    Haus hinzufügen\n                  </Button>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Add House Tab */}\n        <TabsContent value=\"add\">\n          <Card>\n            <CardHeader>\n              <CardTitle>🏠 Haus zum Projekt hinzufügen</CardTitle>\n              <CardDescription>\n                Add a new house to this project with connection details\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={createForm.handleSubmit(handleCreateHouse)} className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"address\">Address *</Label>\n                    <Input\n                      placeholder=\"Hauptstraße 15, 10115 Berlin\"\n                      {...createForm.register('address', { required: true })}\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"house_number\">House Number</Label>\n                    <Input\n                      placeholder=\"123A\"\n                      {...createForm.register('house_number')}\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"cabinet_id\">NVP Point (Cabinet)</Label>\n                  <Select onValueChange={(value) => createForm.setValue('cabinet_id', value)}>\n                    <SelectTrigger>\n                      <SelectValue placeholder={cabinetsLoading ? \"Loading cabinets...\" : \"Select NVP point\"} />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {cabinets && cabinets.length > 0 ? (\n                        cabinets.map((cabinet: any) => (\n                          <SelectItem key={cabinet.id} value={cabinet.id}>\n                            {cabinet.code} - {cabinet.name} {cabinet.address ? `(${cabinet.address})` : ''}\n                          </SelectItem>\n                        ))\n                      ) : (\n                        <SelectItem value=\"none\" disabled>No cabinets available</SelectItem>\n                      )}\n                    </SelectContent>\n                  </Select>\n                  <p className=\"text-xs text-gray-500 mt-1\">Link this house to a network distribution point</p>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"apartment_count\">Number of Apartments</Label>\n                    <Input\n                      type=\"number\"\n                      min=\"1\"\n                      defaultValue=\"1\"\n                      {...createForm.register('apartment_count', { required: true, valueAsNumber: true })}\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"floor_count\">Number of Floors</Label>\n                    <Input\n                      type=\"number\"\n                      min=\"1\"\n                      defaultValue=\"1\"\n                      {...createForm.register('floor_count', { required: true, valueAsNumber: true })}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"connection_type\">Connection Type</Label>\n                    <Select onValueChange={(value) => createForm.setValue('connection_type', value)}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select connection type\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {CONNECTION_TYPES.map(type => (\n                          <SelectItem key={type.value} value={type.value}>\n                            {type.label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"method\">Installation Method</Label>\n                    <Select onValueChange={(value) => createForm.setValue('method', value)}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select installation method\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {INSTALLATION_METHODS.map(method => (\n                          <SelectItem key={method.value} value={method.value}>\n                            {method.label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"house_type\">Building Type</Label>\n                    <Select onValueChange={(value) => createForm.setValue('house_type', value)}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select building type\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {HOUSE_TYPES.map(type => (\n                          <SelectItem key={type.value} value={type.value}>\n                            {type.label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"planned_connection_date\">Planned Connection Date</Label>\n                    <Input\n                      type=\"date\"\n                      {...createForm.register('planned_connection_date')}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"contact_name\">Contact Person</Label>\n                    <Input\n                      placeholder=\"Max Mustermann\"\n                      {...createForm.register('contact_name')}\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"contact_phone\">Phone</Label>\n                    <Input\n                      placeholder=\"+49 30 12345678\"\n                      {...createForm.register('contact_phone')}\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"contact_email\">Email</Label>\n                  <Input\n                    type=\"email\"\n                    placeholder=\"max.mustermann@example.com\"\n                    {...createForm.register('contact_email')}\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"notes\">Notes</Label>\n                  <Textarea\n                    placeholder=\"Besonderheiten beim Anschluss, Zugangshinweise...\"\n                    {...createForm.register('notes')}\n                  />\n                </div>\n\n                <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 bg-gray-50\">\n                  <Label className=\"text-base font-semibold flex items-center mb-3\">\n                    <Paperclip className=\"w-5 h-5 mr-2\" />\n                    Connection Plan Document (Optional)\n                  </Label>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center gap-2\">\n                      <Input\n                        type=\"file\"\n                        accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx,.xls,.xlsx\"\n                        onChange={(e) => setSelectedDocumentFile(e.target.files?.[0] || null)}\n                        className=\"flex-1\"\n                      />\n                      {selectedDocumentFile && (\n                        <Button\n                          type=\"button\"\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => setSelectedDocumentFile(null)}\n                        >\n                          <Trash2 className=\"w-4 h-4\" />\n                        </Button>\n                      )}\n                    </div>\n                    {selectedDocumentFile && (\n                      <div className=\"flex items-center gap-2 text-sm text-green-600\">\n                        <CheckCircle className=\"w-4 h-4\" />\n                        <span>{selectedDocumentFile.name} ({(selectedDocumentFile.size / 1024 / 1024).toFixed(2)} MB)</span>\n                      </div>\n                    )}\n                    <p className=\"text-xs text-gray-500\">\n                      Upload connection plans, permits, or other documents (max 10MB). PDF, images, or Office documents accepted.\n                    </p>\n                  </div>\n                </div>\n\n                <Button\n                  type=\"submit\"\n                  className=\"w-full\"\n                  disabled={createHouse.isPending}\n                >\n                  {createHouse.isPending ? 'Adding...' : 'Haus hinzufügen'}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Connection Status Tab */}\n        <TabsContent value=\"status\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Übersicht Anschlussstatus</CardTitle>\n              <CardDescription>\n                Connection status overview with statistics\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {totalHouses > 0 ? (\n                <div className=\"space-y-6\">\n                  {/* Status Distribution */}\n                  <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n                    {CONNECTION_STATUSES.map(status => {\n                      const count = housesData?.houses?.filter(h => h.status === status.value)?.length || 0;\n                      const percentage = totalHouses > 0 ? Math.round((count / totalHouses) * 100) : 0;\n\n                      return (\n                        <Card key={status.value}>\n                          <CardContent className=\"p-4 text-center\">\n                            <div className={`inline-flex items-center px-2 py-1 rounded-full text-sm font-medium ${status.color} mb-2`}>\n                              {status.label}\n                            </div>\n                            <p className=\"text-2xl font-bold\">{count}</p>\n                            <p className=\"text-sm text-gray-600\">{percentage}% of houses</p>\n                          </CardContent>\n                        </Card>\n                      );\n                    })}\n                  </div>\n\n                  {/* Progress Indicators */}\n                  <div className=\"space-y-4\">\n                    <h4 className=\"text-lg font-semibold\">Connection Progress</h4>\n                    {CONNECTION_STATUSES.map(status => {\n                      const count = housesData?.houses?.filter(h => h.status === status.value)?.length || 0;\n                      const percentage = totalHouses > 0 ? (count / totalHouses) * 100 : 0;\n\n                      return (\n                        <div key={status.value} className=\"space-y-2\">\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-sm font-medium\">{status.label}</span>\n                            <span className=\"text-sm\">{count} houses ({percentage.toFixed(1)}%)</span>\n                          </div>\n                          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                            <div\n                              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                              style={{ width: `${percentage}%` }}\n                            />\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <BarChart3 className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n                  <h3 className=\"text-lg font-medium mb-2\">No Status Data</h3>\n                  <p className=\"text-gray-600\">Add houses to view connection status statistics.</p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Documents Tab */}\n        <TabsContent value=\"documents\">\n          <Card>\n            <CardHeader>\n              <CardTitle>📎 Verwaltung der Hausdokumente</CardTitle>\n              <CardDescription>\n                Manage documents for project houses\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {totalHouses > 0 ? (\n                <div className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"house_select\">Select House</Label>\n                    <Select onValueChange={handleHouseSelectForDocs}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select house for document management\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {housesData?.houses?.map(house => (\n                          <SelectItem key={house.id} value={house.id}>\n                            {house.address} {house.house_number && `(${house.house_number})`}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  {selectedHouseForDocs && (\n                    <div className=\"space-y-4\">\n                      {/* Document Upload */}\n                      <Card>\n                        <CardHeader>\n                          <CardTitle className=\"text-lg\">Upload Document</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                          <div className=\"grid grid-cols-2 gap-4\">\n                            <div>\n                              <Label htmlFor=\"doc_type\">Document Type</Label>\n                              <Select>\n                                <SelectTrigger>\n                                  <SelectValue placeholder=\"Select document type\" />\n                                </SelectTrigger>\n                                <SelectContent>\n                                  {DOCUMENT_TYPES.map(type => (\n                                    <SelectItem key={type.value} value={type.value}>\n                                      {type.label}\n                                    </SelectItem>\n                                  ))}\n                                </SelectContent>\n                              </Select>\n                            </div>\n                            <div>\n                              <Label htmlFor=\"file\">File</Label>\n                              <div className=\"flex items-center space-x-2\">\n                                <Input type=\"file\" accept=\".pdf,.doc,.docx,.jpg,.jpeg,.png,.xls,.xlsx\" />\n                                <Button type=\"button\" disabled={uploadDocument.isPending}>\n                                  <Upload className=\"w-4 h-4 mr-2\" />\n                                  {uploadDocument.isPending ? 'Uploading...' : 'Upload'}\n                                </Button>\n                              </div>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n\n                      {/* Existing Documents */}\n                      {loadingDocs ? (\n                        <Card>\n                          <CardContent className=\"p-6\">\n                            <div className=\"flex items-center justify-center\">\n                              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900\"></div>\n                              <span className=\"ml-3\">Loading documents...</span>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      ) : houseDocuments && houseDocuments.length > 0 ? (\n                        <Card>\n                          <CardHeader>\n                            <CardTitle className=\"text-lg\">Existing Documents ({houseDocuments.length})</CardTitle>\n                          </CardHeader>\n                          <CardContent>\n                            <div className=\"space-y-2\">\n                              {houseDocuments.map((doc) => (\n                                <div key={doc.id} className=\"flex items-center justify-between p-3 border rounded-lg hover:bg-gray-50\">\n                                  <div className=\"flex items-center space-x-3 flex-1\">\n                                    {doc.file_type?.includes('image') ? (\n                                      <Camera className=\"w-5 h-5 text-blue-500\" />\n                                    ) : doc.file_type?.includes('pdf') ? (\n                                      <FileText className=\"w-5 h-5 text-red-500\" />\n                                    ) : (\n                                      <Paperclip className=\"w-5 h-5 text-gray-500\" />\n                                    )}\n                                    <div className=\"flex-1 min-w-0\">\n                                      <p className=\"font-medium truncate\">{doc.filename}</p>\n                                      <p className=\"text-sm text-gray-600\">\n                                        {DOCUMENT_TYPES.find(t => t.value === doc.document_type)?.label || doc.document_type}\n                                        {doc.file_size && ` • ${(doc.file_size / 1024).toFixed(1)} KB`}\n                                        {doc.upload_date && ` • ${new Date(doc.upload_date).toLocaleDateString()}`}\n                                      </p>\n                                    </div>\n                                  </div>\n                                  <div className=\"flex space-x-2\">\n                                    <Button\n                                      size=\"sm\"\n                                      variant=\"outline\"\n                                      onClick={() => handleViewDocument(doc)}\n                                      className=\"gap-1\"\n                                    >\n                                      <Eye className=\"w-4 h-4\" />\n                                      View\n                                    </Button>\n                                    <Button\n                                      size=\"sm\"\n                                      variant=\"destructive\"\n                                      onClick={() => handleDeleteDocument(doc.id)}\n                                    >\n                                      <Trash2 className=\"w-4 h-4\" />\n                                    </Button>\n                                  </div>\n                                </div>\n                              ))}\n                            </div>\n                          </CardContent>\n                        </Card>\n                      ) : (\n                        <div className=\"text-center py-8 border-2 border-dashed border-gray-300 rounded-lg bg-gray-50\">\n                          <FileText className=\"mx-auto h-8 w-8 text-gray-400 mb-2\" />\n                          <p className=\"text-gray-600\">No documents uploaded for this house</p>\n                          <p className=\"text-sm text-gray-500 mt-1\">Upload connection plans, photos, or permits above</p>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <FileText className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n                  <h3 className=\"text-lg font-medium mb-2\">No Houses Available</h3>\n                  <p className=\"text-gray-600\">Add houses to manage documents.</p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Document Viewer Dialog */}\n      <Dialog open={!!viewingDocument} onOpenChange={(open) => !open && setViewingDocument(null)}>\n        <DialogContent className=\"max-w-4xl h-[80vh] flex flex-col\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center justify-between\">\n              <span className=\"truncate flex-1\">{viewingDocument?.filename}</span>\n              <div className=\"flex gap-2 ml-4\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => {\n                    if (viewingDocument?.url) {\n                      window.open(viewingDocument.url, '_blank');\n                    }\n                  }}\n                >\n                  <Download className=\"w-4 h-4 mr-2\" />\n                  Download\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setViewingDocument(null)}\n                >\n                  <X className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </DialogTitle>\n            <DialogDescription>\n              {viewingDocument?.fileType && (\n                <span className=\"text-sm text-gray-500\">\n                  Type: {viewingDocument.fileType}\n                </span>\n              )}\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"flex-1 overflow-hidden\">\n            {viewingDocument?.fileType?.includes('pdf') ? (\n              <iframe\n                src={viewingDocument.url}\n                className=\"w-full h-full border-0 rounded-lg\"\n                title={viewingDocument.filename}\n              />\n            ) : viewingDocument?.fileType?.includes('image') ? (\n              <div className=\"w-full h-full flex items-center justify-center bg-gray-100 rounded-lg overflow-auto\">\n                <img\n                  src={viewingDocument.url}\n                  alt={viewingDocument.filename}\n                  className=\"max-w-full max-h-full object-contain\"\n                />\n              </div>\n            ) : (\n              <div className=\"w-full h-full flex flex-col items-center justify-center bg-gray-50 rounded-lg border-2 border-dashed\">\n                <FileText className=\"w-16 h-16 text-gray-400 mb-4\" />\n                <p className=\"text-lg font-medium text-gray-700 mb-2\">\n                  Preview not available\n                </p>\n                <p className=\"text-sm text-gray-500 mb-4\">\n                  This file type cannot be previewed in the browser\n                </p>\n                <Button\n                  onClick={() => {\n                    if (viewingDocument?.url) {\n                      window.open(viewingDocument.url, '_blank');\n                    }\n                  }}\n                  className=\"gap-2\"\n                >\n                  <Download className=\"w-4 h-4\" />\n                  Download to view\n                </Button>\n              </div>\n            )}\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;AAjBA;;;;;;;;;;;;;;;;;AAuDA,MAAM,mBAAmB;IACvB;QAAE,OAAO;QAAQ,OAAO;QAA2B,MAAM,8MAAI;IAAC;IAC9D;QAAE,OAAO;QAAY,OAAO;QAAkB,MAAM,yNAAQ;IAAC;IAC7D;QAAE,OAAO;QAAW,OAAO;QAAgB,MAAM,8MAAI;IAAC;IACtD;QAAE,OAAO;QAAS,OAAO;QAAa,MAAM,sOAAW;IAAC;CACzD;AAED,MAAM,uBAAuB;IAC3B;QAAE,OAAO;QAAU,OAAO;QAAU,MAAM,qOAAY;IAAC;IACvD;QAAE,OAAO;QAAU,OAAO;QAAe,MAAM,gOAAS;IAAC;IACzD;QAAE,OAAO;QAAe,OAAO;QAAgB,MAAM,qOAAY;IAAC;IAClE;QAAE,OAAO;QAAY,OAAO;QAAoB,MAAM,qOAAY;IAAC;CACpE;AAED,MAAM,cAAc;IAClB;QAAE,OAAO;QAAe,OAAO;QAAe,MAAM,8MAAI;IAAC;IACzD;QAAE,OAAO;QAAc,OAAO;QAAoB,MAAM,yNAAQ;IAAC;IACjE;QAAE,OAAO;QAAS,OAAO;QAAqB,MAAM,yNAAQ;IAAC;IAC7D;QAAE,OAAO;QAAc,OAAO;QAAoB,MAAM,yNAAQ;IAAC;CAClE;AAED,MAAM,sBAAsB;IAC1B;QAAE,OAAO;QAAW,OAAO;QAAY,OAAO;IAA4B;IAC1E;QAAE,OAAO;QAAW,OAAO;QAAW,OAAO;IAA4B;IACzE;QAAE,OAAO;QAAW,OAAO;QAAY,OAAO;IAAgC;IAC9E;QAAE,OAAO;QAAY,OAAO;QAAkB,OAAO;IAA8B;CACpF;AAED,MAAM,iBAAiB;IACrB;QAAE,OAAO;QAAQ,OAAO;QAAW,MAAM,4OAAa;IAAC;IACvD;QAAE,OAAO;QAAU,OAAO;QAAe,MAAM,6NAAQ;IAAC;IACxD;QAAE,OAAO;QAAY,OAAO;QAAW,MAAM,6NAAQ;IAAC;IACtD;QAAE,OAAO;QAAgB,OAAO;QAAe,MAAM,mNAAM;IAAC;IAC5D;QAAE,OAAO;QAAgB,OAAO;QAAgB,MAAM,mNAAM;IAAC;IAC7D;QAAE,OAAO;QAAe,OAAO;QAAgB,MAAM,mNAAM;IAAC;IAC5D;QAAE,OAAO;QAAS,OAAO;QAAa,MAAM,4NAAS;IAAC;CACvD;AAEc,SAAS,OAAO,KAA0B;QAA1B,EAAE,SAAS,EAAe,GAA1B;QAqLT,oBACE,2BAAA,qBACD,4BAAA,qBACG,qBAmFP,qBAyfM,qBAsKZ,2BAMG;;IA/6Bd,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAC;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,yKAAQ,EAAgB;IAChE,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,IAAA,yKAAQ,EAAgB;IAChF,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,IAAA,yKAAQ,EAAc;IAC9E,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,yKAAQ,EAI5C;IACV,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,yKAAQ,EAAQ,EAAE;IAC9D,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,yKAAQ,EAAC;IAE/C,MAAM,EAAE,MAAM,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAA,oJAAgB,EAAC;IACzE,MAAM,EAAE,MAAM,QAAQ,EAAE,WAAW,eAAe,EAAE,GAAG,IAAA,uJAAW,EAAC;IACnE,MAAM,cAAc,IAAA,kJAAc;IAClC,MAAM,cAAc,IAAA,kJAAc;IAClC,MAAM,cAAc,IAAA,kJAAc;IAClC,MAAM,iBAAiB;QAAE,QAAQ,KAAO;QAAG,WAAW;IAAM,GAAG,8CAA8C;IAE7G,MAAM,aAAa,IAAA,4KAAO;IAC1B,MAAM,WAAW,IAAA,4KAAO;IAExB,wCAAwC;IACxC,MAAM,qBAAqB,OAAO;QAChC,eAAe;QACf,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,AAAC,eAAsB,OAAR,SAAQ;YACpD,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,kBAAkB,KAAK,KAAK,IAAI,EAAE;YACpC,OAAO;gBACL,kBAAkB,EAAE;gBACpB,oJAAK,CAAC,KAAK,CAAC;YACd;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,kBAAkB,EAAE;YACpB,oJAAK,CAAC,KAAK,CAAC;QACd,SAAU;YACR,eAAe;QACjB;IACF;IAEA,8CAA8C;IAC9C,MAAM,2BAA2B,CAAC;QAChC,wBAAwB;QACxB,mBAAmB;IACrB;IAEA,wBAAwB;IACxB,MAAM,qBAAqB,CAAC;QAC1B,mBAAmB;YACjB,KAAK,IAAI,YAAY;YACrB,UAAU,IAAI,QAAQ;YACtB,UAAU,IAAI,SAAS;QACzB;IACF;IAEA,0BAA0B;IAC1B,MAAM,uBAAuB,OAAO;QAClC,IAAI,CAAC,sBAAsB;QAE3B,IAAI,CAAC,OAAO,OAAO,CAAC,mDAAmD;QAEvE,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,AAAC,eAAgD,OAAlC,sBAAqB,eAAwB,OAAX,aAAc;gBAC1F,QAAQ;YACV;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,oJAAK,CAAC,OAAO,CAAC;gBACd,mBAAmB;YACrB,OAAO;gBACL,oJAAK,CAAC,KAAK,CAAC;YACd;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,oJAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,IAAI,WAAW;QACb,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC,mJAAQ;oBAAC,WAAU;;;;;;8BACpB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,mJAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC,mJAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC,mJAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC,mJAAQ;4BAAC,WAAU;;;;;;;;;;;;8BAEtB,6LAAC,mJAAQ;oBAAC,WAAU;;;;;;;;;;;;IAG1B;IAEA,IAAI,OAAO;QACT,qBACE,6LAAC,2IAAI;sBACH,cAAA,6LAAC,kJAAW;gBAAC,WAAU;0BACrB,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,sOAAW;4BAAC,WAAU;;;;;;sCACvB,6LAAC;4BAAG,WAAU;sCAA2B;;;;;;sCACzC,6LAAC;4BAAE,WAAU;sCAAsB,MAAM,OAAO;;;;;;sCAChD,6LAAC,+IAAM;4BAAC,SAAS,IAAM;sCAAW;;;;;;;;;;;;;;;;;;;;;;IAK5C;IAEA,MAAM,oBAAoB,OAAO;QAC/B,IAAI;YACF,MAAM,SAAS,MAAM,YAAY,WAAW,CAAC;gBAC3C,GAAG,IAAI;gBACP,YAAY;YACd;YAEA,sCAAsC;YACtC,IAAI,wBAAwB,OAAO,EAAE,EAAE;gBACrC,IAAI;oBACF,MAAM,WAAW,IAAI;oBACrB,SAAS,MAAM,CAAC,QAAQ;oBACxB,SAAS,MAAM,CAAC,iBAAiB;oBACjC,SAAS,MAAM,CAAC,eAAe;oBAE/B,MAAM,WAAW,MAAM,MAAM,AAAC,eAAwB,OAAV,OAAO,EAAE,EAAC,eAAa;wBACjE,QAAQ;wBACR,MAAM;oBACR;oBAEA,IAAI,CAAC,SAAS,EAAE,EAAE;wBAChB,MAAM,IAAI,MAAM;oBAClB;oBAEA,oJAAK,CAAC,OAAO,CAAC;gBAChB,EAAE,OAAO,UAAU;oBACjB,QAAQ,KAAK,CAAC,0BAA0B;oBACxC,oJAAK,CAAC,OAAO,CAAC;gBAChB;YACF,OAAO;gBACL,oJAAK,CAAC,OAAO,CAAC;YAChB;YAEA,WAAW,KAAK;YAChB,wBAAwB;YACxB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;YACrC,oJAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,MAAM,oBAAoB,OAAO,SAAiB;QAChD,IAAI;YACF,MAAM,YAAY,WAAW,CAAC;gBAC5B,IAAI;gBACJ,MAAM;YACR;YACA,SAAS,KAAK;YACd,gBAAgB;YAChB;YACA,oJAAK,CAAC,OAAO,CAAC;QAChB,EAAE,OAAO,OAAO;YACd,oJAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,MAAM,oBAAoB,OAAO;QAC/B,IAAI,OAAO,OAAO,CAAC,gDAAgD;YACjE,IAAI;gBACF,MAAM,YAAY,WAAW,CAAC;gBAC9B;gBACA,oJAAK,CAAC,OAAO,CAAC;YAChB,EAAE,OAAO,OAAO;gBACd,oJAAK,CAAC,KAAK,CAAC;YACd;QACF;IACF;IAEA,MAAM,cAAc,CAAA,uBAAA,kCAAA,qBAAA,WAAY,MAAM,cAAlB,yCAAA,mBAAoB,MAAM,KAAI;IAClD,MAAM,gBAAgB,CAAA,uBAAA,kCAAA,sBAAA,WAAY,MAAM,cAAlB,2CAAA,4BAAA,oBAAoB,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,yBAA7C,gDAAA,0BAA0D,MAAM,KAAI;IAC1F,MAAM,eAAe,CAAA,uBAAA,kCAAA,sBAAA,WAAY,MAAM,cAAlB,2CAAA,6BAAA,oBAAoB,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,wBAA7C,iDAAA,2BAAyD,MAAM,KAAI;IACxF,MAAM,kBAAkB,CAAA,uBAAA,kCAAA,sBAAA,WAAY,MAAM,cAAlB,0CAAA,oBAAoB,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,CAAC,EAAE,eAAe,IAAI,CAAC,GAAG,OAAM;IAErG,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;;sCACC,6LAAC;4BAAG,WAAU;sCAAqB;;;;;;sCACnC,6LAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;;;;;;;0BAKjC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,2IAAI;kCACH,cAAA,6LAAC,kJAAW;4BAAC,WAAU;sCACrB,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,8MAAI;wCAAC,WAAU;;;;;;kDAChB,6LAAC;;0DACC,6LAAC;gDAAE,WAAU;0DAAsB;;;;;;0DACnC,6LAAC;gDAAE,WAAU;0DAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAM3C,6LAAC,2IAAI;kCACH,cAAA,6LAAC,kJAAW;4BAAC,WAAU;sCACrB,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,gNAAK;wCAAC,WAAU;;;;;;kDACjB,6LAAC;;0DACC,6LAAC;gDAAE,WAAU;0DAAsB;;;;;;0DACnC,6LAAC;gDAAE,WAAU;0DAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAM3C,6LAAC,2IAAI;kCACH,cAAA,6LAAC,kJAAW;4BAAC,WAAU;sCACrB,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,yNAAQ;wCAAC,WAAU;;;;;;kDACpB,6LAAC;;0DACC,6LAAC;gDAAE,WAAU;0DAAsB;;;;;;0DACnC,6LAAC;gDAAE,WAAU;0DAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAM3C,6LAAC,2IAAI;kCACH,cAAA,6LAAC,kJAAW;4BAAC,WAAU;sCACrB,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,8MAAI;wCAAC,WAAU;;;;;;kDAChB,6LAAC;;0DACC,6LAAC;gDAAE,WAAU;0DAAsB;;;;;;0DACnC,6LAAC;gDAAE,WAAU;0DAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQ7C,6LAAC,2IAAI;gBAAC,OAAO;gBAAW,eAAe;;kCACrC,6LAAC,+IAAQ;wBAAC,WAAU;;0CAClB,6LAAC,kJAAW;gCAAC,OAAM;0CAAS;;;;;;0CAC5B,6LAAC,kJAAW;gCAAC,OAAM;0CAAM;;;;;;0CACzB,6LAAC,kJAAW;gCAAC,OAAM;0CAAS;;;;;;0CAC5B,6LAAC,kJAAW;gCAAC,OAAM;0CAAY;;;;;;;;;;;;kCAIjC,6LAAC,kJAAW;wBAAC,OAAM;wBAAS,WAAU;kCACpC,cAAA,6LAAC,2IAAI;;8CACH,6LAAC,iJAAU;;sDACT,6LAAC,gJAAS;sDAAC;;;;;;sDACX,6LAAC,sJAAe;sDAAC;;;;;;;;;;;;8CAInB,6LAAC,kJAAW;8CACT,cAAc,kBACb,6LAAC;wCAAI,WAAU;kDACZ,uBAAA,kCAAA,sBAAA,WAAY,MAAM,cAAlB,0CAAA,oBAAoB,GAAG,CAAC,CAAC;gDA2HM,2BACf;iEA3Hf,6LAAC,2IAAI;gDAAgB,WAAU;0DAC7B,cAAA,6LAAC,kJAAW;oDAAC,WAAU;8DACpB,iBAAiB,MAAM,EAAE,iBACxB,6LAAC;wDAAK,UAAU,SAAS,YAAY,CAAC,CAAC,OAAS,kBAAkB,MAAM,EAAE,EAAE;wDAAQ,WAAU;;0EAC5F,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;;0FACC,6LAAC,6IAAK;gFAAC,SAAQ;0FAAU;;;;;;0FACzB,6LAAC,6IAAK;gFACJ,cAAc,MAAM,OAAO;gFAC1B,GAAG,SAAS,QAAQ,CAAC,WAAW;oFAAE,UAAU;gFAAK,EAAE;;;;;;;;;;;;kFAGxD,6LAAC;;0FACC,6LAAC,6IAAK;gFAAC,SAAQ;0FAAe;;;;;;0FAC9B,6LAAC,6IAAK;gFACJ,cAAc,MAAM,YAAY,IAAI;gFACnC,GAAG,SAAS,QAAQ,CAAC,eAAe;;;;;;;;;;;;;;;;;;0EAK3C,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;;0FACC,6LAAC,6IAAK;gFAAC,SAAQ;0FAAkB;;;;;;0FACjC,6LAAC,+IAAM;gFAAC,eAAe,CAAC,QAAU,SAAS,QAAQ,CAAC,mBAAmB;gFAAQ,cAAc,MAAM,eAAe;;kGAChH,6LAAC,sJAAa;kGACZ,cAAA,6LAAC,oJAAW;;;;;;;;;;kGAEd,6LAAC,sJAAa;kGACX,iBAAiB,GAAG,CAAC,CAAA,qBACpB,6LAAC,mJAAU;gGAAkB,OAAO,KAAK,KAAK;0GAC3C,KAAK,KAAK;+FADI,KAAK,KAAK;;;;;;;;;;;;;;;;;;;;;;kFAOnC,6LAAC;;0FACC,6LAAC,6IAAK;gFAAC,SAAQ;0FAAS;;;;;;0FACxB,6LAAC,+IAAM;gFAAC,eAAe,CAAC,QAAU,SAAS,QAAQ,CAAC,UAAU;gFAAQ,cAAc,MAAM,MAAM;;kGAC9F,6LAAC,sJAAa;kGACZ,cAAA,6LAAC,oJAAW;;;;;;;;;;kGAEd,6LAAC,sJAAa;kGACX,qBAAqB,GAAG,CAAC,CAAA,uBACxB,6LAAC,mJAAU;gGAAoB,OAAO,OAAO,KAAK;0GAC/C,OAAO,KAAK;+FADE,OAAO,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;0EASvC,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;;0FACC,6LAAC,6IAAK;gFAAC,SAAQ;0FAAS;;;;;;0FACxB,6LAAC,+IAAM;gFAAC,eAAe,CAAC,QAAU,SAAS,QAAQ,CAAC,UAAU;gFAAQ,cAAc,MAAM,MAAM;;kGAC9F,6LAAC,sJAAa;kGACZ,cAAA,6LAAC,oJAAW;;;;;;;;;;kGAEd,6LAAC,sJAAa;kGACX,oBAAoB,GAAG,CAAC,CAAA,uBACvB,6LAAC,mJAAU;gGAAoB,OAAO,OAAO,KAAK;0GAC/C,OAAO,KAAK;+FADE,OAAO,KAAK;;;;;;;;;;;;;;;;;;;;;;kFAOrC,6LAAC;;0FACC,6LAAC,6IAAK;gFAAC,SAAQ;0FAA0B;;;;;;0FACzC,6LAAC,6IAAK;gFACJ,MAAK;gFACL,cAAc,MAAM,uBAAuB,IAAI;gFAC9C,GAAG,SAAS,QAAQ,CAAC,0BAA0B;;;;;;;;;;;;;;;;;;0EAKtD,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;;0FACC,6LAAC,6IAAK;gFAAC,SAAQ;0FAAkB;;;;;;0FACjC,6LAAC,6IAAK;gFACJ,MAAK;gFACL,cAAc,MAAM,eAAe,GAAG,IAAI,KAAK,MAAM,eAAe,EAAE,WAAW,GAAG,KAAK,CAAC,GAAG,MAAM;gFAClG,GAAG,SAAS,QAAQ,CAAC,kBAAkB;;;;;;0FAE1C,6LAAC;gFAAE,WAAU;0FAA6B;;;;;;;;;;;;kFAE5C,6LAAC;;0FACC,6LAAC,6IAAK;gFAAC,SAAQ;0FAAoB;;;;;;0FACnC,6LAAC,6IAAK;gFACJ,MAAK;gFACL,cAAc,MAAM,iBAAiB,GAAG,IAAI,KAAK,MAAM,iBAAiB,EAAE,WAAW,GAAG,KAAK,CAAC,GAAG,MAAM;gFACtG,GAAG,SAAS,QAAQ,CAAC,oBAAoB;;;;;;0FAE5C,6LAAC;gFAAE,WAAU;0FAA6B;;;;;;;;;;;;;;;;;;0EAI9C,6LAAC;;kFACC,6LAAC,6IAAK;wEAAC,SAAQ;kFAAQ;;;;;;kFACvB,6LAAC,mJAAQ;wEACP,cAAc,MAAM,KAAK,IAAI;wEAC5B,GAAG,SAAS,QAAQ,CAAC,QAAQ;;;;;;;;;;;;0EAIlC,6LAAC;gEAAI,WAAU;;kFACb,6LAAC,+IAAM;wEAAC,MAAK;wEAAS,UAAU,YAAY,SAAS;kFAClD,YAAY,SAAS,GAAG,gBAAgB;;;;;;kFAE3C,6LAAC,+IAAM;wEAAC,MAAK;wEAAS,SAAQ;wEAAU,SAAS,IAAM,gBAAgB;kFAAO;;;;;;;;;;;;;;;;;6EAMlF,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAI,WAAU;;0FACb,6LAAC,6IAAK;gFAAC,WAAW,EAAA,4BAAA,oBAAoB,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,MAAM,MAAM,eAAtD,gDAAA,0BAAyD,KAAK,KAAI;0FACjF,EAAA,6BAAA,oBAAoB,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,MAAM,MAAM,eAAtD,iDAAA,2BAAyD,KAAK,KAAI,MAAM,MAAM;;;;;;0FAEjF,6LAAC,6IAAK;gFAAC,SAAQ;;oFACZ,CAAC;wFACA,MAAM,OAAO,iBAAiB,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,MAAM,eAAe;wFACzE,MAAM,OAAO,iBAAA,2BAAA,KAAM,IAAI;wFACvB,OAAO,qBAAO,6LAAC;4FAAK,WAAU;;;;;mGAAoB;oFACpD,CAAC;oFACA,MAAM,eAAe;;;;;;;0FAExB,6LAAC,6IAAK;gFAAC,SAAQ;;oFACZ,CAAC;wFACA,MAAM,SAAS,qBAAqB,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,MAAM,MAAM;wFACtE,MAAM,OAAO,mBAAA,6BAAA,OAAQ,IAAI;wFACzB,OAAO,qBAAO,6LAAC;4FAAK,WAAU;;;;;mGAAoB;oFACpD,CAAC;oFACA,MAAM,MAAM;;;;;;;;;;;;;kFAGjB,6LAAC;wEAAG,WAAU;kFAAiB,MAAM,OAAO;;;;;;oEAC3C,MAAM,YAAY,kBACjB,6LAAC;wEAAE,WAAU;;4EAAwB;4EAAe,MAAM,YAAY;;;;;;;kFAExE,6LAAC;wEAAI,WAAU;;0FACb,6LAAC;gFAAK,WAAU;;kGACd,6LAAC,8MAAI;wFAAC,WAAU;;;;;;oFACf,MAAM,eAAe;oFAAC;;;;;;;4EAExB,MAAM,uBAAuB,kBAC5B,6LAAC;gFAAK,WAAU;;kGACd,6LAAC,yNAAQ;wFAAC,WAAU;;;;;;oFACnB,MAAM,uBAAuB;;;;;;;4EAGjC,MAAM,YAAY,kBACjB,6LAAC;gFAAK,WAAU;;kGACd,6LAAC,gNAAK;wFAAC,WAAU;;;;;;oFAChB,MAAM,YAAY;;;;;;;;;;;;;oEAIxB,MAAM,KAAK,kBACV,6LAAC;wEAAE,WAAU;;4EAA6B;4EAAO,MAAM,KAAK;;;;;;;;;;;;;0EAGhE,6LAAC;gEAAI,WAAU;;kFACb,6LAAC,+IAAM;wEACL,MAAK;wEACL,SAAQ;wEACR,SAAS,IAAM,gBAAgB,MAAM,EAAE;kFAEvC,cAAA,6LAAC,sNAAI;4EAAC,WAAU;;;;;;;;;;;kFAElB,6LAAC,+IAAM;wEACL,MAAK;wEACL,SAAQ;wEACR,SAAS,IAAM,kBAAkB,MAAM,EAAE;wEACzC,UAAU,YAAY,SAAS;kFAE/B,cAAA,6LAAC,uNAAM;4EAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;+CAtLnB,MAAM,EAAE;;;;;;;;;;6DAgMvB,6LAAC;wCAAI,WAAU;;0DACb,6LAAC,8MAAI;gDAAC,WAAU;;;;;;0DAChB,6LAAC;gDAAG,WAAU;0DAA2B;;;;;;0DACzC,6LAAC;gDAAE,WAAU;0DAAqB;;;;;;0DAGlC,6LAAC,+IAAM;gDAAC,SAAS,IAAM,aAAa;;kEAClC,6LAAC,6MAAI;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAU7C,6LAAC,kJAAW;wBAAC,OAAM;kCACjB,cAAA,6LAAC,2IAAI;;8CACH,6LAAC,iJAAU;;sDACT,6LAAC,gJAAS;sDAAC;;;;;;sDACX,6LAAC,sJAAe;sDAAC;;;;;;;;;;;;8CAInB,6LAAC,kJAAW;8CACV,cAAA,6LAAC;wCAAK,UAAU,WAAW,YAAY,CAAC;wCAAoB,WAAU;;0DACpE,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;;0EACC,6LAAC,6IAAK;gEAAC,SAAQ;0EAAU;;;;;;0EACzB,6LAAC,6IAAK;gEACJ,aAAY;gEACX,GAAG,WAAW,QAAQ,CAAC,WAAW;oEAAE,UAAU;gEAAK,EAAE;;;;;;;;;;;;kEAG1D,6LAAC;;0EACC,6LAAC,6IAAK;gEAAC,SAAQ;0EAAe;;;;;;0EAC9B,6LAAC,6IAAK;gEACJ,aAAY;gEACX,GAAG,WAAW,QAAQ,CAAC,eAAe;;;;;;;;;;;;;;;;;;0DAK7C,6LAAC;;kEACC,6LAAC,6IAAK;wDAAC,SAAQ;kEAAa;;;;;;kEAC5B,6LAAC,+IAAM;wDAAC,eAAe,CAAC,QAAU,WAAW,QAAQ,CAAC,cAAc;;0EAClE,6LAAC,sJAAa;0EACZ,cAAA,6LAAC,oJAAW;oEAAC,aAAa,kBAAkB,wBAAwB;;;;;;;;;;;0EAEtE,6LAAC,sJAAa;0EACX,YAAY,SAAS,MAAM,GAAG,IAC7B,SAAS,GAAG,CAAC,CAAC,wBACZ,6LAAC,mJAAU;wEAAkB,OAAO,QAAQ,EAAE;;4EAC3C,QAAQ,IAAI;4EAAC;4EAAI,QAAQ,IAAI;4EAAC;4EAAE,QAAQ,OAAO,GAAG,AAAC,IAAmB,OAAhB,QAAQ,OAAO,EAAC,OAAK;;uEAD7D,QAAQ,EAAE;;;;8FAK7B,6LAAC,mJAAU;oEAAC,OAAM;oEAAO,QAAQ;8EAAC;;;;;;;;;;;;;;;;;kEAIxC,6LAAC;wDAAE,WAAU;kEAA6B;;;;;;;;;;;;0DAG5C,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;;0EACC,6LAAC,6IAAK;gEAAC,SAAQ;0EAAkB;;;;;;0EACjC,6LAAC,6IAAK;gEACJ,MAAK;gEACL,KAAI;gEACJ,cAAa;gEACZ,GAAG,WAAW,QAAQ,CAAC,mBAAmB;oEAAE,UAAU;oEAAM,eAAe;gEAAK,EAAE;;;;;;;;;;;;kEAGvF,6LAAC;;0EACC,6LAAC,6IAAK;gEAAC,SAAQ;0EAAc;;;;;;0EAC7B,6LAAC,6IAAK;gEACJ,MAAK;gEACL,KAAI;gEACJ,cAAa;gEACZ,GAAG,WAAW,QAAQ,CAAC,eAAe;oEAAE,UAAU;oEAAM,eAAe;gEAAK,EAAE;;;;;;;;;;;;;;;;;;0DAKrF,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;;0EACC,6LAAC,6IAAK;gEAAC,SAAQ;0EAAkB;;;;;;0EACjC,6LAAC,+IAAM;gEAAC,eAAe,CAAC,QAAU,WAAW,QAAQ,CAAC,mBAAmB;;kFACvE,6LAAC,sJAAa;kFACZ,cAAA,6LAAC,oJAAW;4EAAC,aAAY;;;;;;;;;;;kFAE3B,6LAAC,sJAAa;kFACX,iBAAiB,GAAG,CAAC,CAAA,qBACpB,6LAAC,mJAAU;gFAAkB,OAAO,KAAK,KAAK;0FAC3C,KAAK,KAAK;+EADI,KAAK,KAAK;;;;;;;;;;;;;;;;;;;;;;kEAOnC,6LAAC;;0EACC,6LAAC,6IAAK;gEAAC,SAAQ;0EAAS;;;;;;0EACxB,6LAAC,+IAAM;gEAAC,eAAe,CAAC,QAAU,WAAW,QAAQ,CAAC,UAAU;;kFAC9D,6LAAC,sJAAa;kFACZ,cAAA,6LAAC,oJAAW;4EAAC,aAAY;;;;;;;;;;;kFAE3B,6LAAC,sJAAa;kFACX,qBAAqB,GAAG,CAAC,CAAA,uBACxB,6LAAC,mJAAU;gFAAoB,OAAO,OAAO,KAAK;0FAC/C,OAAO,KAAK;+EADE,OAAO,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;0DASvC,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;;0EACC,6LAAC,6IAAK;gEAAC,SAAQ;0EAAa;;;;;;0EAC5B,6LAAC,+IAAM;gEAAC,eAAe,CAAC,QAAU,WAAW,QAAQ,CAAC,cAAc;;kFAClE,6LAAC,sJAAa;kFACZ,cAAA,6LAAC,oJAAW;4EAAC,aAAY;;;;;;;;;;;kFAE3B,6LAAC,sJAAa;kFACX,YAAY,GAAG,CAAC,CAAA,qBACf,6LAAC,mJAAU;gFAAkB,OAAO,KAAK,KAAK;0FAC3C,KAAK,KAAK;+EADI,KAAK,KAAK;;;;;;;;;;;;;;;;;;;;;;kEAOnC,6LAAC;;0EACC,6LAAC,6IAAK;gEAAC,SAAQ;0EAA0B;;;;;;0EACzC,6LAAC,6IAAK;gEACJ,MAAK;gEACJ,GAAG,WAAW,QAAQ,CAAC,0BAA0B;;;;;;;;;;;;;;;;;;0DAKxD,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;;0EACC,6LAAC,6IAAK;gEAAC,SAAQ;0EAAe;;;;;;0EAC9B,6LAAC,6IAAK;gEACJ,aAAY;gEACX,GAAG,WAAW,QAAQ,CAAC,eAAe;;;;;;;;;;;;kEAG3C,6LAAC;;0EACC,6LAAC,6IAAK;gEAAC,SAAQ;0EAAgB;;;;;;0EAC/B,6LAAC,6IAAK;gEACJ,aAAY;gEACX,GAAG,WAAW,QAAQ,CAAC,gBAAgB;;;;;;;;;;;;;;;;;;0DAK9C,6LAAC;;kEACC,6LAAC,6IAAK;wDAAC,SAAQ;kEAAgB;;;;;;kEAC/B,6LAAC,6IAAK;wDACJ,MAAK;wDACL,aAAY;wDACX,GAAG,WAAW,QAAQ,CAAC,gBAAgB;;;;;;;;;;;;0DAI5C,6LAAC;;kEACC,6LAAC,6IAAK;wDAAC,SAAQ;kEAAQ;;;;;;kEACvB,6LAAC,mJAAQ;wDACP,aAAY;wDACX,GAAG,WAAW,QAAQ,CAAC,QAAQ;;;;;;;;;;;;0DAIpC,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,6IAAK;wDAAC,WAAU;;0EACf,6LAAC,4NAAS;gEAAC,WAAU;;;;;;4DAAiB;;;;;;;kEAGxC,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAI,WAAU;;kFACb,6LAAC,6IAAK;wEACJ,MAAK;wEACL,QAAO;wEACP,UAAU,CAAC;gFAA8B;mFAAxB,wBAAwB,EAAA,kBAAA,EAAE,MAAM,CAAC,KAAK,cAAd,sCAAA,eAAgB,CAAC,EAAE,KAAI;;wEAChE,WAAU;;;;;;oEAEX,sCACC,6LAAC,+IAAM;wEACL,MAAK;wEACL,SAAQ;wEACR,MAAK;wEACL,SAAS,IAAM,wBAAwB;kFAEvC,cAAA,6LAAC,uNAAM;4EAAC,WAAU;;;;;;;;;;;;;;;;;4DAIvB,sCACC,6LAAC;gEAAI,WAAU;;kFACb,6LAAC,6OAAW;wEAAC,WAAU;;;;;;kFACvB,6LAAC;;4EAAM,qBAAqB,IAAI;4EAAC;4EAAG,CAAC,qBAAqB,IAAI,GAAG,OAAO,IAAI,EAAE,OAAO,CAAC;4EAAG;;;;;;;;;;;;;0EAG7F,6LAAC;gEAAE,WAAU;0EAAwB;;;;;;;;;;;;;;;;;;0DAMzC,6LAAC,+IAAM;gDACL,MAAK;gDACL,WAAU;gDACV,UAAU,YAAY,SAAS;0DAE9B,YAAY,SAAS,GAAG,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAQjD,6LAAC,kJAAW;wBAAC,OAAM;kCACjB,cAAA,6LAAC,2IAAI;;8CACH,6LAAC,iJAAU;;sDACT,6LAAC,gJAAS;sDAAC;;;;;;sDACX,6LAAC,sJAAe;sDAAC;;;;;;;;;;;;8CAInB,6LAAC,kJAAW;8CACT,cAAc,kBACb,6LAAC;wCAAI,WAAU;;0DAEb,6LAAC;gDAAI,WAAU;0DACZ,oBAAoB,GAAG,CAAC,CAAA;wDACT,2BAAA;oDAAd,MAAM,QAAQ,CAAA,uBAAA,kCAAA,qBAAA,WAAY,MAAM,cAAlB,0CAAA,4BAAA,mBAAoB,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,OAAO,KAAK,eAAzD,gDAAA,0BAA4D,MAAM,KAAI;oDACpF,MAAM,aAAa,cAAc,IAAI,KAAK,KAAK,CAAC,AAAC,QAAQ,cAAe,OAAO;oDAE/E,qBACE,6LAAC,2IAAI;kEACH,cAAA,6LAAC,kJAAW;4DAAC,WAAU;;8EACrB,6LAAC;oEAAI,WAAW,AAAC,uEAAmF,OAAb,OAAO,KAAK,EAAC;8EACjG,OAAO,KAAK;;;;;;8EAEf,6LAAC;oEAAE,WAAU;8EAAsB;;;;;;8EACnC,6LAAC;oEAAE,WAAU;;wEAAyB;wEAAW;;;;;;;;;;;;;uDAN1C,OAAO,KAAK;;;;;gDAU3B;;;;;;0DAIF,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAG,WAAU;kEAAwB;;;;;;oDACrC,oBAAoB,GAAG,CAAC,CAAA;4DACT,2BAAA;wDAAd,MAAM,QAAQ,CAAA,uBAAA,kCAAA,qBAAA,WAAY,MAAM,cAAlB,0CAAA,4BAAA,mBAAoB,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,OAAO,KAAK,eAAzD,gDAAA,0BAA4D,MAAM,KAAI;wDACpF,MAAM,aAAa,cAAc,IAAI,AAAC,QAAQ,cAAe,MAAM;wDAEnE,qBACE,6LAAC;4DAAuB,WAAU;;8EAChC,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EAAK,WAAU;sFAAuB,OAAO,KAAK;;;;;;sFACnD,6LAAC;4EAAK,WAAU;;gFAAW;gFAAM;gFAAU,WAAW,OAAO,CAAC;gFAAG;;;;;;;;;;;;;8EAEnE,6LAAC;oEAAI,WAAU;8EACb,cAAA,6LAAC;wEACC,WAAU;wEACV,OAAO;4EAAE,OAAO,AAAC,GAAa,OAAX,YAAW;wEAAG;;;;;;;;;;;;2DAR7B,OAAO,KAAK;;;;;oDAa1B;;;;;;;;;;;;6DAIJ,6LAAC;wCAAI,WAAU;;0DACb,6LAAC,kOAAS;gDAAC,WAAU;;;;;;0DACrB,6LAAC;gDAAG,WAAU;0DAA2B;;;;;;0DACzC,6LAAC;gDAAE,WAAU;0DAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAQvC,6LAAC,kJAAW;wBAAC,OAAM;kCACjB,cAAA,6LAAC,2IAAI;;8CACH,6LAAC,iJAAU;;sDACT,6LAAC,gJAAS;sDAAC;;;;;;sDACX,6LAAC,sJAAe;sDAAC;;;;;;;;;;;;8CAInB,6LAAC,kJAAW;8CACT,cAAc,kBACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;;kEACC,6LAAC,6IAAK;wDAAC,SAAQ;kEAAe;;;;;;kEAC9B,6LAAC,+IAAM;wDAAC,eAAe;;0EACrB,6LAAC,sJAAa;0EACZ,cAAA,6LAAC,oJAAW;oEAAC,aAAY;;;;;;;;;;;0EAE3B,6LAAC,sJAAa;0EACX,uBAAA,kCAAA,sBAAA,WAAY,MAAM,cAAlB,0CAAA,oBAAoB,GAAG,CAAC,CAAA,sBACvB,6LAAC,mJAAU;wEAAgB,OAAO,MAAM,EAAE;;4EACvC,MAAM,OAAO;4EAAC;4EAAE,MAAM,YAAY,IAAI,AAAC,IAAsB,OAAnB,MAAM,YAAY,EAAC;;uEAD/C,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;4CAQhC,sCACC,6LAAC;gDAAI,WAAU;;kEAEb,6LAAC,2IAAI;;0EACH,6LAAC,iJAAU;0EACT,cAAA,6LAAC,gJAAS;oEAAC,WAAU;8EAAU;;;;;;;;;;;0EAEjC,6LAAC,kJAAW;0EACV,cAAA,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;;8FACC,6LAAC,6IAAK;oFAAC,SAAQ;8FAAW;;;;;;8FAC1B,6LAAC,+IAAM;;sGACL,6LAAC,sJAAa;sGACZ,cAAA,6LAAC,oJAAW;gGAAC,aAAY;;;;;;;;;;;sGAE3B,6LAAC,sJAAa;sGACX,eAAe,GAAG,CAAC,CAAA,qBAClB,6LAAC,mJAAU;oGAAkB,OAAO,KAAK,KAAK;8GAC3C,KAAK,KAAK;mGADI,KAAK,KAAK;;;;;;;;;;;;;;;;;;;;;;sFAOnC,6LAAC;;8FACC,6LAAC,6IAAK;oFAAC,SAAQ;8FAAO;;;;;;8FACtB,6LAAC;oFAAI,WAAU;;sGACb,6LAAC,6IAAK;4FAAC,MAAK;4FAAO,QAAO;;;;;;sGAC1B,6LAAC,+IAAM;4FAAC,MAAK;4FAAS,UAAU,eAAe,SAAS;;8GACtD,6LAAC,mNAAM;oGAAC,WAAU;;;;;;gGACjB,eAAe,SAAS,GAAG,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oDASxD,4BACC,6LAAC,2IAAI;kEACH,cAAA,6LAAC,kJAAW;4DAAC,WAAU;sEACrB,cAAA,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAI,WAAU;;;;;;kFACf,6LAAC;wEAAK,WAAU;kFAAO;;;;;;;;;;;;;;;;;;;;;+DAI3B,kBAAkB,eAAe,MAAM,GAAG,kBAC5C,6LAAC,2IAAI;;0EACH,6LAAC,iJAAU;0EACT,cAAA,6LAAC,gJAAS;oEAAC,WAAU;;wEAAU;wEAAqB,eAAe,MAAM;wEAAC;;;;;;;;;;;;0EAE5E,6LAAC,kJAAW;0EACV,cAAA,6LAAC;oEAAI,WAAU;8EACZ,eAAe,GAAG,CAAC,CAAC;4EAGd,gBAEG,iBAQC;6FAZT,6LAAC;4EAAiB,WAAU;;8FAC1B,6LAAC;oFAAI,WAAU;;wFACZ,EAAA,iBAAA,IAAI,SAAS,cAAb,qCAAA,eAAe,QAAQ,CAAC,0BACvB,6LAAC,mNAAM;4FAAC,WAAU;;;;;mGAChB,EAAA,kBAAA,IAAI,SAAS,cAAb,sCAAA,gBAAe,QAAQ,CAAC,wBAC1B,6LAAC,6NAAQ;4FAAC,WAAU;;;;;iHAEpB,6LAAC,4NAAS;4FAAC,WAAU;;;;;;sGAEvB,6LAAC;4FAAI,WAAU;;8GACb,6LAAC;oGAAE,WAAU;8GAAwB,IAAI,QAAQ;;;;;;8GACjD,6LAAC;oGAAE,WAAU;;wGACV,EAAA,uBAAA,eAAe,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,IAAI,aAAa,eAAtD,2CAAA,qBAAyD,KAAK,KAAI,IAAI,aAAa;wGACnF,IAAI,SAAS,IAAI,AAAC,MAAuC,OAAlC,CAAC,IAAI,SAAS,GAAG,IAAI,EAAE,OAAO,CAAC,IAAG;wGACzD,IAAI,WAAW,IAAI,AAAC,MAAoD,OAA/C,IAAI,KAAK,IAAI,WAAW,EAAE,kBAAkB;;;;;;;;;;;;;;;;;;;8FAI5E,6LAAC;oFAAI,WAAU;;sGACb,6LAAC,+IAAM;4FACL,MAAK;4FACL,SAAQ;4FACR,SAAS,IAAM,mBAAmB;4FAClC,WAAU;;8GAEV,6LAAC,0MAAG;oGAAC,WAAU;;;;;;gGAAY;;;;;;;sGAG7B,6LAAC,+IAAM;4FACL,MAAK;4FACL,SAAQ;4FACR,SAAS,IAAM,qBAAqB,IAAI,EAAE;sGAE1C,cAAA,6LAAC,uNAAM;gGAAC,WAAU;;;;;;;;;;;;;;;;;;2EAjCd,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;6EA0CxB,6LAAC;wDAAI,WAAU;;0EACb,6LAAC,6NAAQ;gEAAC,WAAU;;;;;;0EACpB,6LAAC;gEAAE,WAAU;0EAAgB;;;;;;0EAC7B,6LAAC;gEAAE,WAAU;0EAA6B;;;;;;;;;;;;;;;;;;;;;;;6DAOpD,6LAAC;wCAAI,WAAU;;0DACb,6LAAC,6NAAQ;gDAAC,WAAU;;;;;;0DACpB,6LAAC;gDAAG,WAAU;0DAA2B;;;;;;0DACzC,6LAAC;gDAAE,WAAU;0DAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BASzC,6LAAC,+IAAM;gBAAC,MAAM,CAAC,CAAC;gBAAiB,cAAc,CAAC,OAAS,CAAC,QAAQ,mBAAmB;0BACnF,cAAA,6LAAC,sJAAa;oBAAC,WAAU;;sCACvB,6LAAC,qJAAY;;8CACX,6LAAC,oJAAW;oCAAC,WAAU;;sDACrB,6LAAC;4CAAK,WAAU;sDAAmB,4BAAA,sCAAA,gBAAiB,QAAQ;;;;;;sDAC5D,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,+IAAM;oDACL,SAAQ;oDACR,MAAK;oDACL,SAAS;wDACP,IAAI,4BAAA,sCAAA,gBAAiB,GAAG,EAAE;4DACxB,OAAO,IAAI,CAAC,gBAAgB,GAAG,EAAE;wDACnC;oDACF;;sEAEA,6LAAC,yNAAQ;4DAAC,WAAU;;;;;;wDAAiB;;;;;;;8DAGvC,6LAAC,+IAAM;oDACL,SAAQ;oDACR,MAAK;oDACL,SAAS,IAAM,mBAAmB;8DAElC,cAAA,6LAAC,oMAAC;wDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;8CAInB,6LAAC,0JAAiB;8CACf,CAAA,4BAAA,sCAAA,gBAAiB,QAAQ,mBACxB,6LAAC;wCAAK,WAAU;;4CAAwB;4CAC/B,gBAAgB,QAAQ;;;;;;;;;;;;;;;;;;sCAMvC,6LAAC;4BAAI,WAAU;sCACZ,CAAA,4BAAA,uCAAA,4BAAA,gBAAiB,QAAQ,cAAzB,gDAAA,0BAA2B,QAAQ,CAAC,wBACnC,6LAAC;gCACC,KAAK,gBAAgB,GAAG;gCACxB,WAAU;gCACV,OAAO,gBAAgB,QAAQ;;;;;uCAE/B,CAAA,4BAAA,uCAAA,6BAAA,gBAAiB,QAAQ,cAAzB,iDAAA,2BAA2B,QAAQ,CAAC,0BACtC,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCACC,KAAK,gBAAgB,GAAG;oCACxB,KAAK,gBAAgB,QAAQ;oCAC7B,WAAU;;;;;;;;;;qDAId,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,6NAAQ;wCAAC,WAAU;;;;;;kDACpB,6LAAC;wCAAE,WAAU;kDAAyC;;;;;;kDAGtD,6LAAC;wCAAE,WAAU;kDAA6B;;;;;;kDAG1C,6LAAC,+IAAM;wCACL,SAAS;4CACP,IAAI,4BAAA,sCAAA,gBAAiB,GAAG,EAAE;gDACxB,OAAO,IAAI,CAAC,gBAAgB,GAAG,EAAE;4CACnC;wCACF;wCACA,WAAU;;0DAEV,6LAAC,yNAAQ;gDAAC,WAAU;;;;;;4CAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUlD;GAn9BwB;;QAakC,oJAAgB;QACjB,uJAAW;QAC9C,kJAAc;QACd,kJAAc;QACd,kJAAc;QAGf,4KAAO;QACT,4KAAO;;;KArBF","debugId":null}}]
}