{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAOA,MAAM,UAAU;QAAC,EAAE,GAAG,OAAqB;;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,IAAA,+JAAQ;IAErC,qBACE,6LAAC,sJAAM;QACL,OAAO;QACP,WAAU;QACV,cAAc;YACZ,YAAY;gBACV,OACE;gBACF,aAAa;gBACb,cACE;gBACF,cACE;YACJ;QACF;QACC,GAAG,KAAK;;;;;;AAGf;GArBM;;QACyB,+JAAQ;;;KADjC","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/lib/api-client.ts"],"sourcesContent":["import type {\n  ApiResponse,\n  PaginatedResponse,\n  Project,\n  CreateProjectRequest,\n  UpdateProjectRequest,\n  ProjectFilters,\n  WorkEntry,\n  CreateWorkEntryRequest,\n  WorkEntryFilters,\n  User,\n  Crew,\n  LoginRequest,\n  TokenResponse,\n  Material,\n  MaterialFilters,\n  Supplier,\n  MaterialAllocation,\n  AllocationFilters,\n  AllocationRequest,\n  MaterialOrder,\n  MaterialOrderStatus,\n  MaterialOrderItem,\n  OrderFilters,\n  House,\n  HouseFilters,\n  CreateHouseRequest,\n  UpdateHouseRequest,\n  ScheduleAppointmentRequest,\n  StartConnectionRequest,\n  CompleteConnectionRequest,\n  HouseAppointment,\n  AppointmentFilters,\n  Notification,\n  NotificationFilters,\n  CreateNotificationRequest,\n  UpdateNotificationPreferencesRequest,\n  NotificationPreferences,\n  NotificationTemplate,\n  WebSocketMessage,\n  RealtimeEvent,\n  Document,\n  DocumentFilters,\n  CreateDocumentRequest,\n  UpdateDocumentRequest,\n  DocumentVersion,\n  DocumentAccess,\n  DocumentShare,\n  DocumentTemplate,\n  DocumentSearchRequest,\n  DocumentSearchResult,\n  DocumentClassificationRequest,\n  DocumentClassificationResult,\n  DocumentCategory,\n  DocumentCategoryCode,\n  GeospatialFeature,\n  GeospatialFilters,\n  CreateGeospatialFeatureRequest,\n  UpdateGeospatialFeatureRequest,\n  GeospatialSearchRequest,\n  GeoRoute,\n  CreateGeoRouteRequest,\n  GeoLayer,\n  CreateGeoLayerRequest,\n  GeoMeasurement,\n  CreateGeoMeasurementRequest,\n  GeoAnnotation,\n  CreateGeoAnnotationRequest,\n  MapTile,\n  GeoAnalysis,\n  CreateGeoAnalysisRequest,\n  GeoBounds,\n  GeoPoint,\n} from \"@/types\";\n\n// API Configuration\nconst getApiBaseUrl = () => {\n  if (typeof window !== 'undefined') {\n    return window.location.origin;\n  }\n  return process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3000\";\n};\n\nexport class ApiError extends Error {\n  constructor(\n    public status: number,\n    message: string,\n    public response?: any\n  ) {\n    super(message);\n    this.name = \"ApiError\";\n  }\n}\n\n// Base API client\nclass BaseApiClient {\n  private baseURL: string;\n  private authToken?: string;\n\n  constructor(baseURL: string) {\n    this.baseURL = baseURL;\n  }\n\n  setAuthToken(token: string) {\n    this.authToken = token;\n  }\n\n  clearAuthToken() {\n    this.authToken = undefined;\n  }\n\n  private getHeaders(): HeadersInit {\n    const headers: HeadersInit = {\n      \"Content-Type\": \"application/json\",\n    };\n\n    if (this.authToken) {\n      headers.Authorization = `Bearer ${this.authToken}`;\n    }\n\n    return headers;\n  }\n\n  async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<T> {\n    const url = `${this.baseURL}${endpoint}`;\n\n    const config: RequestInit = {\n      ...options,\n      headers: {\n        ...this.getHeaders(),\n        ...options.headers,\n      },\n    };\n\n    try {\n      const response = await fetch(url, config);\n\n      // Handle non-JSON responses\n      const contentType = response.headers.get(\"content-type\");\n      if (!contentType?.includes(\"application/json\")) {\n        if (!response.ok) {\n          throw new ApiError(\n            response.status,\n            `HTTP ${response.status}: ${response.statusText}`\n          );\n        }\n        return response.text() as T;\n      }\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new ApiError(\n          response.status,\n          data.message || data.detail || `HTTP ${response.status}`,\n          data\n        );\n      }\n\n      return data;\n    } catch (error) {\n      if (error instanceof ApiError) {\n        throw error;\n      }\n\n      // Network or other errors\n      throw new ApiError(\n        0,\n        error instanceof Error ? error.message : \"Network error\"\n      );\n    }\n  }\n\n  async get<T>(endpoint: string, params?: Record<string, any>): Promise<T> {\n    const url = new URL(`${this.baseURL}${endpoint}`);\n\n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          url.searchParams.append(key, String(value));\n        }\n      });\n    }\n\n    return this.request<T>(url.toString().replace(this.baseURL, \"\"));\n  }\n\n  async post<T>(endpoint: string, data?: any): Promise<T> {\n    return this.request<T>(endpoint, {\n      method: \"POST\",\n      body: data ? JSON.stringify(data) : undefined,\n    });\n  }\n\n  async put<T>(endpoint: string, data?: any): Promise<T> {\n    return this.request<T>(endpoint, {\n      method: \"PUT\",\n      body: data ? JSON.stringify(data) : undefined,\n    });\n  }\n\n  async patch<T>(endpoint: string, data?: any): Promise<T> {\n    return this.request<T>(endpoint, {\n      method: \"PATCH\",\n      body: data ? JSON.stringify(data) : undefined,\n    });\n  }\n\n  async delete<T>(endpoint: string): Promise<T> {\n    return this.request<T>(endpoint, {\n      method: \"DELETE\",\n    });\n  }\n}\n\n// Service clients\nexport class AuthApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/auth`);\n  }\n\n  async login(credentials: LoginRequest): Promise<TokenResponse> {\n    return this.post<TokenResponse>(\"/login\", credentials);\n  }\n\n  async refreshToken(refreshToken: string): Promise<TokenResponse> {\n    return this.post<TokenResponse>(\"/refresh\", { refresh_token: refreshToken });\n  }\n\n  async logout(): Promise<void> {\n    return this.post<void>(\"/logout\");\n  }\n\n  async me(): Promise<User> {\n    return this.get<User>(\"/me\");\n  }\n}\n\nexport class ProjectsApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/projects`);\n  }\n\n  async getProjects(filters?: ProjectFilters): Promise<PaginatedResponse<Project>> {\n    return this.get<PaginatedResponse<Project>>(\"/\", filters);\n  }\n\n  async getProject(id: string): Promise<Project> {\n    return this.get<Project>(`/${id}`);\n  }\n\n  async createProject(data: CreateProjectRequest): Promise<Project> {\n    return this.post<Project>(\"/\", data);\n  }\n\n  async updateProject(id: string, data: UpdateProjectRequest): Promise<Project> {\n    return this.patch<Project>(`/${id}`, data);\n  }\n\n  async deleteProject(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n}\n\n\nexport class WorkEntriesApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/work-entries`);\n  }\n\n  async getWorkEntries(filters?: WorkEntryFilters): Promise<PaginatedResponse<WorkEntry>> {\n    return this.get<PaginatedResponse<WorkEntry>>(\"/\", filters);\n  }\n\n  async getWorkEntry(id: string): Promise<WorkEntry> {\n    return this.get<WorkEntry>(`/${id}`);\n  }\n\n  async createWorkEntry(data: CreateWorkEntryRequest): Promise<WorkEntry> {\n    return this.post<WorkEntry>(\"/\", data);\n  }\n\n  async updateWorkEntry(id: string, data: Partial<CreateWorkEntryRequest>): Promise<WorkEntry> {\n    return this.patch<WorkEntry>(`/${id}`, data);\n  }\n\n  async deleteWorkEntry(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n\n  async approveWorkEntry(id: string): Promise<WorkEntry> {\n    return this.post<WorkEntry>(`/${id}/approve`);\n  }\n}\n\nexport class UsersApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/users`);\n  }\n\n  async getUsers(filters?: { role?: string; is_active?: string; page?: number; per_page?: number }): Promise<PaginatedResponse<User>> {\n    return this.get<PaginatedResponse<User>>(\"/\", filters);\n  }\n\n  async getUser(id: string): Promise<User> {\n    return this.get<User>(`/${id}`);\n  }\n\n  async createUser(data: Partial<User>): Promise<User> {\n    return this.post<User>(\"/\", data);\n  }\n\n  async updateUser(id: string, data: Partial<User>): Promise<User> {\n    return this.patch<User>(`/${id}`, data);\n  }\n\n  async deleteUser(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n}\n\nexport class TeamsApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/teams`);\n  }\n\n  async getCrews(): Promise<Crew[]> {\n    return this.get<Crew[]>(\"/crews\");\n  }\n\n  async getCrew(id: string): Promise<Crew> {\n    return this.get<Crew>(`/crews/${id}`);\n  }\n\n  async createCrew(data: Partial<Crew>): Promise<Crew> {\n    return this.post<Crew>(\"/crews\", data);\n  }\n\n  async updateCrew(id: string, data: Partial<Crew>): Promise<Crew> {\n    return this.patch<Crew>(`/crews/${id}`, data);\n  }\n\n  async deleteCrew(id: string): Promise<void> {\n    return this.delete<void>(`/crews/${id}`);\n  }\n}\n\nexport class MaterialsApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/materials`);\n  }\n\n  async getMaterials(filters?: MaterialFilters): Promise<PaginatedResponse<Material>> {\n    return this.get<PaginatedResponse<Material>>(\"/\", filters);\n  }\n\n  async getMaterial(id: string): Promise<Material> {\n    return this.get<Material>(`/${id}`);\n  }\n\n  async createMaterial(data: Partial<Material>): Promise<Material> {\n    return this.post<Material>(\"/\", data);\n  }\n\n  async updateMaterial(id: string, data: Partial<Material>): Promise<Material> {\n    return this.patch<Material>(`/${id}`, data);\n  }\n\n  async deleteMaterial(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n\n  async getLowStockMaterials(): Promise<Material[]> {\n    return this.get<Material[]>(\"/low-stock\");\n  }\n\n  async adjustStock(id: string, adjustment: { quantity: number; reason: string }): Promise<Material> {\n    return this.post<Material>(`/${id}/adjust-stock`, adjustment);\n  }\n}\n\nexport class SuppliersApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/suppliers`);\n  }\n\n  async getSuppliers(): Promise<PaginatedResponse<Supplier>> {\n    return this.get<PaginatedResponse<Supplier>>(\"/\");\n  }\n\n  async getSupplier(id: string): Promise<Supplier> {\n    return this.get<Supplier>(`/${id}`);\n  }\n\n  async createSupplier(data: Partial<Supplier>): Promise<Supplier> {\n    return this.post<Supplier>(\"/\", data);\n  }\n\n  async updateSupplier(id: string, data: Partial<Supplier>): Promise<Supplier> {\n    return this.patch<Supplier>(`/${id}`, data);\n  }\n\n  async deleteSupplier(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n}\n\nexport class MaterialAllocationsApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/materials/allocations`);\n  }\n\n  async getAllocations(filters?: AllocationFilters): Promise<PaginatedResponse<MaterialAllocation>> {\n    return this.get<PaginatedResponse<MaterialAllocation>>(\"/\", filters);\n  }\n\n  async getAllocation(id: string): Promise<MaterialAllocation> {\n    return this.get<MaterialAllocation>(`/${id}`);\n  }\n\n  async createAllocation(data: AllocationRequest): Promise<MaterialAllocation> {\n    return this.post<MaterialAllocation>(\"/\", data);\n  }\n\n  async updateAllocation(id: string, data: Partial<MaterialAllocation>): Promise<MaterialAllocation> {\n    return this.patch<MaterialAllocation>(`/${id}`, data);\n  }\n\n  async deleteAllocation(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n\n  async recordUsage(id: string, usage: { used_qty: number; notes?: string }): Promise<MaterialAllocation> {\n    return this.post<MaterialAllocation>(`/${id}/usage`, usage);\n  }\n}\n\nexport class MaterialOrdersApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/materials/orders`);\n  }\n\n  async getOrders(filters?: OrderFilters): Promise<PaginatedResponse<MaterialOrder>> {\n    return this.get<PaginatedResponse<MaterialOrder>>(\"/\", filters);\n  }\n\n  async getOrder(id: string): Promise<MaterialOrder> {\n    return this.get<MaterialOrder>(`/${id}`);\n  }\n\n  async createOrder(data: Partial<MaterialOrder>): Promise<MaterialOrder> {\n    return this.post<MaterialOrder>(\"/\", data);\n  }\n\n  async updateOrder(id: string, data: Partial<MaterialOrder>): Promise<MaterialOrder> {\n    return this.put<MaterialOrder>(`/${id}`, data);\n  }\n\n  async deleteOrder(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n\n  async updateOrderStatus(id: string, status: MaterialOrderStatus): Promise<MaterialOrder> {\n    return this.patch<MaterialOrder>(`/${id}/status`, { status });\n  }\n\n  async addOrderItem(orderId: string, item: Partial<MaterialOrderItem>): Promise<MaterialOrderItem> {\n    return this.post<MaterialOrderItem>(`/${orderId}/items`, item);\n  }\n\n  async removeOrderItem(orderId: string, itemId: string): Promise<void> {\n    return this.delete<void>(`/${orderId}/items/${itemId}`);\n  }\n}\n\nexport class HousesApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/houses`);\n  }\n\n  async getHouses(filters?: HouseFilters): Promise<PaginatedResponse<House>> {\n    return this.get<PaginatedResponse<House>>(\"/\", filters);\n  }\n\n  async getHouse(id: string): Promise<House> {\n    return this.get<House>(`/${id}`);\n  }\n\n  async createHouse(data: CreateHouseRequest): Promise<House> {\n    return this.post<House>(\"/\", data);\n  }\n\n  async updateHouse(id: string, data: UpdateHouseRequest): Promise<House> {\n    return this.patch<House>(`/${id}`, data);\n  }\n\n  async deleteHouse(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n\n  async scheduleAppointment(data: ScheduleAppointmentRequest): Promise<HouseAppointment> {\n    return this.post<HouseAppointment>(\"/appointments\", data);\n  }\n\n  async startConnection(data: StartConnectionRequest): Promise<House> {\n    const formData = new FormData();\n    formData.append(\"house_id\", data.house_id);\n    formData.append(\"worker_id\", data.worker_id);\n    formData.append(\"before_photo\", data.before_photo);\n    formData.append(\"gps_location\", JSON.stringify(data.gps_location));\n    if (data.notes) formData.append(\"notes\", data.notes);\n\n    return this.request<House>(\"/start-connection\", {\n      method: \"POST\",\n      body: formData,\n      headers: {\n        ...this.getHeaders(),\n      },\n    });\n  }\n\n  async completeConnection(data: CompleteConnectionRequest): Promise<House> {\n    const formData = new FormData();\n    formData.append(\"house_id\", data.house_id);\n    formData.append(\"connection_type\", data.connection_type);\n    data.after_photos.forEach((photo, index) => {\n      formData.append(`after_photos`, photo);\n    });\n    formData.append(\"measurements\", JSON.stringify(data.measurements));\n    formData.append(\"quality_checks\", JSON.stringify(data.quality_checks));\n    if (data.customer_signature) formData.append(\"customer_signature\", data.customer_signature);\n    if (data.notes) formData.append(\"notes\", data.notes);\n\n    return this.request<House>(\"/complete-connection\", {\n      method: \"POST\",\n      body: formData,\n      headers: {\n        ...this.getHeaders(),\n      },\n    });\n  }\n\n  async getProjectHouses(projectId: string): Promise<House[]> {\n    // Use housing-units API instead of houses/project API\n    const response = await fetch(`/api/housing-units?project_id=${projectId}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch project houses');\n    }\n    const data = await response.json();\n    return data.items || [];\n  }\n\n  async getTeamHouses(teamId: string): Promise<House[]> {\n    return this.get<House[]>(`/team/${teamId}`);\n  }\n}\n\nexport class AppointmentsApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/appointments`);\n  }\n\n  async getAppointments(filters?: AppointmentFilters): Promise<PaginatedResponse<HouseAppointment>> {\n    return this.get<PaginatedResponse<HouseAppointment>>(\"/\", filters);\n  }\n\n  async getAppointment(id: string): Promise<HouseAppointment> {\n    return this.get<HouseAppointment>(`/${id}`);\n  }\n\n  async updateAppointment(id: string, data: Partial<HouseAppointment>): Promise<HouseAppointment> {\n    return this.patch<HouseAppointment>(`/${id}`, data);\n  }\n\n  async cancelAppointment(id: string, reason: string): Promise<HouseAppointment> {\n    return this.patch<HouseAppointment>(`/${id}/cancel`, { reason });\n  }\n\n  async rescheduleAppointment(id: string, newDate: string): Promise<HouseAppointment> {\n    return this.patch<HouseAppointment>(`/${id}/reschedule`, { scheduled_date: newDate });\n  }\n\n  async confirmAppointment(id: string): Promise<HouseAppointment> {\n    return this.patch<HouseAppointment>(`/${id}/confirm`);\n  }\n\n  async startAppointment(id: string): Promise<HouseAppointment> {\n    return this.patch<HouseAppointment>(`/${id}/start`);\n  }\n\n  async completeAppointment(id: string, notes?: string): Promise<HouseAppointment> {\n    return this.patch<HouseAppointment>(`/${id}/complete`, { notes });\n  }\n}\n\nexport class NotificationsApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/notifications`);\n  }\n\n  async getNotifications(filters?: NotificationFilters): Promise<PaginatedResponse<Notification>> {\n    return this.get<PaginatedResponse<Notification>>(\"/\", filters);\n  }\n\n  async getNotification(id: string): Promise<Notification> {\n    return this.get<Notification>(`/${id}`);\n  }\n\n  async createNotification(data: CreateNotificationRequest): Promise<Notification> {\n    return this.post<Notification>(\"/\", data);\n  }\n\n  async markAsRead(id: string): Promise<Notification> {\n    return this.patch<Notification>(`/${id}/read`);\n  }\n\n  async markAllAsRead(userId: string): Promise<void> {\n    return this.patch<void>(`/user/${userId}/read-all`);\n  }\n\n  async deleteNotification(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n\n  async getUnreadCount(userId: string): Promise<{ count: number }> {\n    return this.get<{ count: number }>(`/user/${userId}/unread-count`);\n  }\n}\n\nexport class NotificationPreferencesApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/notification-preferences`);\n  }\n\n  async getPreferences(userId: string): Promise<NotificationPreferences> {\n    return this.get<NotificationPreferences>(`/user/${userId}`);\n  }\n\n  async updatePreferences(userId: string, data: UpdateNotificationPreferencesRequest): Promise<NotificationPreferences> {\n    return this.patch<NotificationPreferences>(`/user/${userId}`, data);\n  }\n}\n\nexport class NotificationTemplatesApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/notification-templates`);\n  }\n\n  async getTemplates(): Promise<NotificationTemplate[]> {\n    return this.get<NotificationTemplate[]>(\"/\");\n  }\n\n  async getTemplate(id: string): Promise<NotificationTemplate> {\n    return this.get<NotificationTemplate>(`/${id}`);\n  }\n\n  async updateTemplate(id: string, data: Partial<NotificationTemplate>): Promise<NotificationTemplate> {\n    return this.patch<NotificationTemplate>(`/${id}`, data);\n  }\n}\n\nexport class WebSocketApiClient {\n  private ws?: WebSocket;\n  private reconnectAttempts = 0;\n  private maxReconnectAttempts = 5;\n  private reconnectInterval = 3000;\n  private messageHandlers: Map<string, ((data: any) => void)[]> = new Map();\n\n  constructor(private authToken?: string) {}\n\n  connect(userId: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const wsBaseUrl = typeof window !== 'undefined'\n        ? window.location.origin.replace(/^http/, 'ws')\n        : process.env.NEXT_PUBLIC_WS_URL || \"ws://localhost:8080\";\n      const wsUrl = `${wsBaseUrl}/ws/${userId}`;\n\n      this.ws = new WebSocket(wsUrl);\n\n      this.ws.onopen = () => {\n        console.log(\"WebSocket connected\");\n        this.reconnectAttempts = 0;\n\n        // Send auth token if available\n        if (this.authToken) {\n          this.send(\"auth\", { token: this.authToken });\n        }\n\n        resolve();\n      };\n\n      this.ws.onmessage = (event) => {\n        try {\n          const message: WebSocketMessage = JSON.parse(event.data);\n          this.handleMessage(message);\n        } catch (error) {\n          console.error(\"Failed to parse WebSocket message:\", error);\n        }\n      };\n\n      this.ws.onclose = () => {\n        console.log(\"WebSocket disconnected\");\n        this.reconnect(userId);\n      };\n\n      this.ws.onerror = (error) => {\n        console.error(\"WebSocket error:\", error);\n        reject(error);\n      };\n    });\n  }\n\n  private reconnect(userId: string) {\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      console.log(`Attempting to reconnect... (${this.reconnectAttempts}/${this.maxReconnectAttempts})`);\n\n      setTimeout(() => {\n        this.connect(userId).catch(console.error);\n      }, this.reconnectInterval);\n    }\n  }\n\n  private handleMessage(message: WebSocketMessage) {\n    const handlers = this.messageHandlers.get(message.type) || [];\n    handlers.forEach(handler => handler(message.data));\n  }\n\n  send(type: string, data: any) {\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      const message: WebSocketMessage = {\n        type,\n        data,\n        timestamp: new Date().toISOString()\n      };\n      this.ws.send(JSON.stringify(message));\n    }\n  }\n\n  subscribe(messageType: string, handler: (data: any) => void) {\n    if (!this.messageHandlers.has(messageType)) {\n      this.messageHandlers.set(messageType, []);\n    }\n    this.messageHandlers.get(messageType)!.push(handler);\n  }\n\n  unsubscribe(messageType: string, handler: (data: any) => void) {\n    const handlers = this.messageHandlers.get(messageType);\n    if (handlers) {\n      const index = handlers.indexOf(handler);\n      if (index > -1) {\n        handlers.splice(index, 1);\n      }\n    }\n  }\n\n  disconnect() {\n    if (this.ws) {\n      this.ws.close();\n      this.ws = undefined;\n    }\n    this.messageHandlers.clear();\n  }\n\n  setAuthToken(token: string) {\n    this.authToken = token;\n  }\n}\n\nexport class DocumentsApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/documents`);\n  }\n\n  async getDocuments(filters?: DocumentFilters): Promise<PaginatedResponse<Document>> {\n    return this.get<PaginatedResponse<Document>>(\"/\", filters);\n  }\n\n  async getDocument(id: string): Promise<Document> {\n    return this.get<Document>(`/${id}`);\n  }\n\n  async uploadDocument(data: CreateDocumentRequest): Promise<Document> {\n    const formData = new FormData();\n    formData.append(\"file\", data.file);\n\n    if (data.category) formData.append(\"category\", data.category);\n    if (data.tags) formData.append(\"tags\", JSON.stringify(data.tags));\n    if (data.project_id) formData.append(\"project_id\", data.project_id);\n    if (data.house_id) formData.append(\"house_id\", data.house_id);\n    if (data.work_entry_id) formData.append(\"work_entry_id\", data.work_entry_id);\n    if (data.team_id) formData.append(\"team_id\", data.team_id);\n    if (data.access_level) formData.append(\"access_level\", data.access_level);\n    if (data.description) formData.append(\"description\", data.description);\n    if (data.custom_fields) formData.append(\"custom_fields\", JSON.stringify(data.custom_fields));\n\n    return this.request<Document>(\"/upload\", {\n      method: \"POST\",\n      body: formData,\n      headers: {\n        Authorization: this.getHeaders().Authorization,\n      } as HeadersInit,\n    });\n  }\n\n  async updateDocument(id: string, data: UpdateDocumentRequest): Promise<Document> {\n    return this.patch<Document>(`/${id}`, data);\n  }\n\n  async deleteDocument(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n\n  async downloadDocument(id: string): Promise<Blob> {\n    const response = await fetch(`${this.baseURL}/${id}/download`, {\n      headers: this.getHeaders(),\n    });\n\n    if (!response.ok) {\n      throw new ApiError(response.status, `Download failed: ${response.statusText}`);\n    }\n\n    return response.blob();\n  }\n\n  async getDocumentVersions(id: string): Promise<DocumentVersion[]> {\n    return this.get<DocumentVersion[]>(`/${id}/versions`);\n  }\n\n  async createNewVersion(id: string, file: File, comment?: string): Promise<DocumentVersion> {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    if (comment) formData.append(\"comment\", comment);\n\n    return this.request<DocumentVersion>(`/${id}/versions`, {\n      method: \"POST\",\n      body: formData,\n      headers: {\n        Authorization: this.getHeaders().Authorization,\n      } as HeadersInit,\n    });\n  }\n\n  async revertToVersion(id: string, versionId: string): Promise<Document> {\n    return this.post<Document>(`/${id}/versions/${versionId}/revert`);\n  }\n\n  async searchDocuments(searchRequest: DocumentSearchRequest): Promise<{\n    results: DocumentSearchResult[];\n    total: number;\n  }> {\n    return this.post<{\n      results: DocumentSearchResult[];\n      total: number;\n    }>(\"/search\", searchRequest);\n  }\n\n  async classifyDocument(data: DocumentClassificationRequest): Promise<DocumentClassificationResult> {\n    return this.post<DocumentClassificationResult>(\"/classify\", data);\n  }\n\n  async getOCRResult(id: string): Promise<any> {\n    return this.get<any>(`/${id}/ocr`);\n  }\n\n  async triggerOCR(id: string): Promise<{ job_id: string }> {\n    return this.post<{ job_id: string }>(`/${id}/ocr`);\n  }\n}\n\nexport class DocumentCategoriesApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/document-categories`);\n  }\n\n  async getCategories(): Promise<DocumentCategory[]> {\n    return this.get<DocumentCategory[]>(\"/\");\n  }\n\n  async getCategory(code: string): Promise<DocumentCategory> {\n    return this.get<DocumentCategory>(`/${code}`);\n  }\n\n  async createCategory(data: Partial<DocumentCategory>): Promise<DocumentCategory> {\n    return this.post<DocumentCategory>(\"/\", data);\n  }\n\n  async updateCategory(code: string, data: Partial<DocumentCategory>): Promise<DocumentCategory> {\n    return this.patch<DocumentCategory>(`/${code}`, data);\n  }\n\n  async deleteCategory(code: string): Promise<void> {\n    return this.delete<void>(`/${code}`);\n  }\n}\n\nexport class DocumentAccessApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/document-access`);\n  }\n\n  async getDocumentAccess(documentId: string): Promise<DocumentAccess[]> {\n    return this.get<DocumentAccess[]>(`/document/${documentId}`);\n  }\n\n  async grantAccess(data: Omit<DocumentAccess, 'id' | 'granted_at'>): Promise<DocumentAccess> {\n    return this.post<DocumentAccess>(\"/grant\", data);\n  }\n\n  async revokeAccess(accessId: string): Promise<void> {\n    return this.delete<void>(`/${accessId}`);\n  }\n\n  async updateAccess(accessId: string, data: Partial<DocumentAccess>): Promise<DocumentAccess> {\n    return this.patch<DocumentAccess>(`/${accessId}`, data);\n  }\n}\n\nexport class DocumentSharesApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/document-shares`);\n  }\n\n  async createShare(data: Omit<DocumentShare, 'id' | 'share_token' | 'access_count' | 'created_at' | 'last_accessed_at'>): Promise<DocumentShare> {\n    return this.post<DocumentShare>(\"/\", data);\n  }\n\n  async getShare(token: string): Promise<DocumentShare> {\n    return this.get<DocumentShare>(`/token/${token}`);\n  }\n\n  async getDocumentShares(documentId: string): Promise<DocumentShare[]> {\n    return this.get<DocumentShare[]>(`/document/${documentId}`);\n  }\n\n  async updateShare(shareId: string, data: Partial<DocumentShare>): Promise<DocumentShare> {\n    return this.patch<DocumentShare>(`/${shareId}`, data);\n  }\n\n  async deleteShare(shareId: string): Promise<void> {\n    return this.delete<void>(`/${shareId}`);\n  }\n\n  async accessSharedDocument(token: string, password?: string): Promise<Document> {\n    return this.post<Document>(`/access/${token}`, { password });\n  }\n}\n\nexport class DocumentTemplatesApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/document-templates`);\n  }\n\n  async getTemplates(): Promise<DocumentTemplate[]> {\n    return this.get<DocumentTemplate[]>(\"/\");\n  }\n\n  async getTemplate(id: string): Promise<DocumentTemplate> {\n    return this.get<DocumentTemplate>(`/${id}`);\n  }\n\n  async createTemplate(data: Omit<DocumentTemplate, 'id' | 'created_at' | 'updated_at'>): Promise<DocumentTemplate> {\n    return this.post<DocumentTemplate>(\"/\", data);\n  }\n\n  async updateTemplate(id: string, data: Partial<DocumentTemplate>): Promise<DocumentTemplate> {\n    return this.patch<DocumentTemplate>(`/${id}`, data);\n  }\n\n  async deleteTemplate(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n\n  async createDocumentFromTemplate(templateId: string, data: Record<string, any>): Promise<Document> {\n    return this.post<Document>(`/${templateId}/create-document`, data);\n  }\n}\n\nexport class GeospatialApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/geospatial`);\n  }\n\n  async getFeatures(filters?: GeospatialFilters): Promise<PaginatedResponse<GeospatialFeature>> {\n    return this.get<PaginatedResponse<GeospatialFeature>>(\"/features\", filters);\n  }\n\n  async getFeature(id: string): Promise<GeospatialFeature> {\n    return this.get<GeospatialFeature>(`/features/${id}`);\n  }\n\n  async createFeature(data: CreateGeospatialFeatureRequest): Promise<GeospatialFeature> {\n    return this.post<GeospatialFeature>(\"/features\", data);\n  }\n\n  async updateFeature(id: string, data: UpdateGeospatialFeatureRequest): Promise<GeospatialFeature> {\n    return this.patch<GeospatialFeature>(`/features/${id}`, data);\n  }\n\n  async deleteFeature(id: string): Promise<void> {\n    return this.delete<void>(`/features/${id}`);\n  }\n\n  async searchNearby(searchRequest: GeospatialSearchRequest): Promise<GeospatialFeature[]> {\n    return this.post<GeospatialFeature[]>(\"/features/search/nearby\", searchRequest);\n  }\n\n  async getProjectBounds(projectId: string): Promise<GeoBounds> {\n    return this.get<GeoBounds>(`/projects/${projectId}/bounds`);\n  }\n\n  async calculateSegmentLength(segmentId: string): Promise<{ length_meters: number }> {\n    return this.get<{ length_meters: number }>(`/segments/${segmentId}/length`);\n  }\n\n  async getProjectFeatures(projectId: string): Promise<GeospatialFeature[]> {\n    return this.get<GeospatialFeature[]>(`/projects/${projectId}/features`);\n  }\n}\n\nexport class GeoRoutesApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/geo-routes`);\n  }\n\n  async getRoutes(projectId?: string): Promise<GeoRoute[]> {\n    return this.get<GeoRoute[]>(\"/\", projectId ? { project_id: projectId } : undefined);\n  }\n\n  async getRoute(id: string): Promise<GeoRoute> {\n    return this.get<GeoRoute>(`/${id}`);\n  }\n\n  async createRoute(data: CreateGeoRouteRequest): Promise<GeoRoute> {\n    return this.post<GeoRoute>(\"/\", data);\n  }\n\n  async updateRoute(id: string, data: Partial<CreateGeoRouteRequest>): Promise<GeoRoute> {\n    return this.patch<GeoRoute>(`/${id}`, data);\n  }\n\n  async deleteRoute(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n\n  async optimizeRoute(id: string, parameters?: Record<string, any>): Promise<GeoRoute> {\n    return this.post<GeoRoute>(`/${id}/optimize`, parameters || {});\n  }\n\n  async calculateRoute(waypoints: GeoPoint[], routeType: string): Promise<{\n    distance_meters: number;\n    duration_minutes: number;\n    route_geometry: any;\n  }> {\n    return this.post<{\n      distance_meters: number;\n      duration_minutes: number;\n      route_geometry: any;\n    }>(\"/calculate\", { waypoints, route_type: routeType });\n  }\n}\n\nexport class GeoLayersApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/geo-layers`);\n  }\n\n  async getLayers(projectId?: string): Promise<GeoLayer[]> {\n    return this.get<GeoLayer[]>(\"/\", projectId ? { project_id: projectId } : undefined);\n  }\n\n  async getLayer(id: string): Promise<GeoLayer> {\n    return this.get<GeoLayer>(`/${id}`);\n  }\n\n  async createLayer(data: CreateGeoLayerRequest): Promise<GeoLayer> {\n    return this.post<GeoLayer>(\"/\", data);\n  }\n\n  async updateLayer(id: string, data: Partial<CreateGeoLayerRequest>): Promise<GeoLayer> {\n    return this.patch<GeoLayer>(`/${id}`, data);\n  }\n\n  async deleteLayer(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n\n  async toggleLayerVisibility(id: string, visible: boolean): Promise<GeoLayer> {\n    return this.patch<GeoLayer>(`/${id}/visibility`, { is_visible: visible });\n  }\n\n  async updateLayerOpacity(id: string, opacity: number): Promise<GeoLayer> {\n    return this.patch<GeoLayer>(`/${id}/opacity`, { opacity });\n  }\n\n  async reorderLayers(layerIds: string[]): Promise<GeoLayer[]> {\n    return this.post<GeoLayer[]>(\"/reorder\", { layer_ids: layerIds });\n  }\n}\n\nexport class GeoMeasurementsApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/geo-measurements`);\n  }\n\n  async getMeasurements(projectId?: string): Promise<GeoMeasurement[]> {\n    return this.get<GeoMeasurement[]>(\"/\", projectId ? { project_id: projectId } : undefined);\n  }\n\n  async getMeasurement(id: string): Promise<GeoMeasurement> {\n    return this.get<GeoMeasurement>(`/${id}`);\n  }\n\n  async createMeasurement(data: CreateGeoMeasurementRequest): Promise<GeoMeasurement> {\n    return this.post<GeoMeasurement>(\"/\", data);\n  }\n\n  async updateMeasurement(id: string, data: Partial<CreateGeoMeasurementRequest>): Promise<GeoMeasurement> {\n    return this.patch<GeoMeasurement>(`/${id}`, data);\n  }\n\n  async deleteMeasurement(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n\n  async calculateDistance(coordinates: [number, number][]): Promise<{ distance_meters: number }> {\n    return this.post<{ distance_meters: number }>(\"/calculate/distance\", { coordinates });\n  }\n\n  async calculateArea(coordinates: [number, number][][]): Promise<{ area_square_meters: number }> {\n    return this.post<{ area_square_meters: number }>(\"/calculate/area\", { coordinates });\n  }\n}\n\nexport class GeoAnnotationsApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/geo-annotations`);\n  }\n\n  async getAnnotations(projectId?: string): Promise<GeoAnnotation[]> {\n    return this.get<GeoAnnotation[]>(\"/\", projectId ? { project_id: projectId } : undefined);\n  }\n\n  async getAnnotation(id: string): Promise<GeoAnnotation> {\n    return this.get<GeoAnnotation>(`/${id}`);\n  }\n\n  async createAnnotation(data: CreateGeoAnnotationRequest): Promise<GeoAnnotation> {\n    return this.post<GeoAnnotation>(\"/\", data);\n  }\n\n  async updateAnnotation(id: string, data: Partial<CreateGeoAnnotationRequest>): Promise<GeoAnnotation> {\n    return this.patch<GeoAnnotation>(`/${id}`, data);\n  }\n\n  async deleteAnnotation(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n}\n\nexport class MapTilesApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/map-tiles`);\n  }\n\n  async getTiles(): Promise<MapTile[]> {\n    return this.get<MapTile[]>(\"/\");\n  }\n\n  async getTile(id: string): Promise<MapTile> {\n    return this.get<MapTile>(`/${id}`);\n  }\n\n  async createTile(data: Omit<MapTile, 'id' | 'created_at' | 'updated_at'>): Promise<MapTile> {\n    return this.post<MapTile>(\"/\", data);\n  }\n\n  async updateTile(id: string, data: Partial<MapTile>): Promise<MapTile> {\n    return this.patch<MapTile>(`/${id}`, data);\n  }\n\n  async deleteTile(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n\n  async setActiveTile(id: string): Promise<MapTile> {\n    return this.post<MapTile>(`/${id}/activate`);\n  }\n}\n\nexport class GeoAnalysisApiClient extends BaseApiClient {\n  constructor() {\n    super(`${getApiBaseUrl()}/api/geo-analysis`);\n  }\n\n  async getAnalyses(projectId?: string): Promise<GeoAnalysis[]> {\n    return this.get<GeoAnalysis[]>(\"/\", projectId ? { project_id: projectId } : undefined);\n  }\n\n  async getAnalysis(id: string): Promise<GeoAnalysis> {\n    return this.get<GeoAnalysis>(`/${id}`);\n  }\n\n  async createAnalysis(data: CreateGeoAnalysisRequest): Promise<GeoAnalysis> {\n    return this.post<GeoAnalysis>(\"/\", data);\n  }\n\n  async deleteAnalysis(id: string): Promise<void> {\n    return this.delete<void>(`/${id}`);\n  }\n\n  async getAnalysisResult(id: string): Promise<any> {\n    return this.get<any>(`/${id}/result`);\n  }\n\n  async runBufferAnalysis(featureIds: string[], bufferDistance: number, unit: string): Promise<GeoAnalysis> {\n    return this.post<GeoAnalysis>(\"/buffer\", {\n      input_features: featureIds,\n      parameters: { buffer_distance: bufferDistance, unit }\n    });\n  }\n\n  async runIntersectionAnalysis(featureIds: string[]): Promise<GeoAnalysis> {\n    return this.post<GeoAnalysis>(\"/intersection\", {\n      input_features: featureIds,\n      parameters: {}\n    });\n  }\n\n  async runRouteOptimization(waypointIds: string[], parameters: Record<string, any>): Promise<GeoAnalysis> {\n    return this.post<GeoAnalysis>(\"/route-optimization\", {\n      input_features: waypointIds,\n      parameters\n    });\n  }\n}\n\n// API client instances\nexport const authApi = new AuthApiClient();\nexport const projectsApi = new ProjectsApiClient();\nexport const workEntriesApi = new WorkEntriesApiClient();\nexport const usersApi = new UsersApiClient();\nexport const teamsApi = new TeamsApiClient();\nexport const materialsApi = new MaterialsApiClient();\nexport const suppliersApi = new SuppliersApiClient();\nexport const materialAllocationsApi = new MaterialAllocationsApiClient();\nexport const materialOrdersApi = new MaterialOrdersApiClient();\nexport const housesApi = new HousesApiClient();\nexport const appointmentsApi = new AppointmentsApiClient();\nexport const notificationsApi = new NotificationsApiClient();\nexport const notificationPreferencesApi = new NotificationPreferencesApiClient();\nexport const notificationTemplatesApi = new NotificationTemplatesApiClient();\nexport const wsApi = new WebSocketApiClient();\nexport const documentsApi = new DocumentsApiClient();\nexport const documentCategoriesApi = new DocumentCategoriesApiClient();\nexport const documentAccessApi = new DocumentAccessApiClient();\nexport const documentSharesApi = new DocumentSharesApiClient();\nexport const documentTemplatesApi = new DocumentTemplatesApiClient();\nexport const geospatialApi = new GeospatialApiClient();\nexport const geoRoutesApi = new GeoRoutesApiClient();\nexport const geoLayersApi = new GeoLayersApiClient();\nexport const geoMeasurementsApi = new GeoMeasurementsApiClient();\nexport const geoAnnotationsApi = new GeoAnnotationsApiClient();\nexport const mapTilesApi = new MapTilesApiClient();\nexport const geoAnalysisApi = new GeoAnalysisApiClient();\n\n// Set auth token for all clients\nexport function setAuthTokenForAllClients(token: string) {\n  authApi.setAuthToken(token);\n  projectsApi.setAuthToken(token);\n  workEntriesApi.setAuthToken(token);\n  usersApi.setAuthToken(token);\n  teamsApi.setAuthToken(token);\n  materialsApi.setAuthToken(token);\n  suppliersApi.setAuthToken(token);\n  materialAllocationsApi.setAuthToken(token);\n  materialOrdersApi.setAuthToken(token);\n  housesApi.setAuthToken(token);\n  appointmentsApi.setAuthToken(token);\n  notificationsApi.setAuthToken(token);\n  notificationPreferencesApi.setAuthToken(token);\n  notificationTemplatesApi.setAuthToken(token);\n  wsApi.setAuthToken(token);\n  documentsApi.setAuthToken(token);\n  documentCategoriesApi.setAuthToken(token);\n  documentAccessApi.setAuthToken(token);\n  documentSharesApi.setAuthToken(token);\n  documentTemplatesApi.setAuthToken(token);\n  geospatialApi.setAuthToken(token);\n  geoRoutesApi.setAuthToken(token);\n  geoLayersApi.setAuthToken(token);\n  geoMeasurementsApi.setAuthToken(token);\n  geoAnnotationsApi.setAuthToken(token);\n  mapTilesApi.setAuthToken(token);\n  geoAnalysisApi.setAuthToken(token);\n}\n\n// Clear auth token for all clients\nexport function clearAuthTokenForAllClients() {\n  authApi.clearAuthToken();\n  projectsApi.clearAuthToken();\n  workEntriesApi.clearAuthToken();\n  usersApi.clearAuthToken();\n  teamsApi.clearAuthToken();\n  materialsApi.clearAuthToken();\n  suppliersApi.clearAuthToken();\n  materialAllocationsApi.clearAuthToken();\n  materialOrdersApi.clearAuthToken();\n  housesApi.clearAuthToken();\n  appointmentsApi.clearAuthToken();\n  notificationsApi.clearAuthToken();\n  notificationPreferencesApi.clearAuthToken();\n  notificationTemplatesApi.clearAuthToken();\n  documentsApi.clearAuthToken();\n  documentCategoriesApi.clearAuthToken();\n  documentAccessApi.clearAuthToken();\n  documentSharesApi.clearAuthToken();\n  documentTemplatesApi.clearAuthToken();\n  geospatialApi.clearAuthToken();\n  geoRoutesApi.clearAuthToken();\n  geoLayersApi.clearAuthToken();\n  geoMeasurementsApi.clearAuthToken();\n  geoAnnotationsApi.clearAuthToken();\n  mapTilesApi.clearAuthToken();\n  geoAnalysisApi.clearAuthToken();\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1203, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-auth.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport {\n  authApi,\n  setAuthTokenForAllClients,\n  clearAuthTokenForAllClients,\n  type LoginRequest,\n  type TokenResponse,\n  type AuthUser,\n} from \"@/lib/api-client\";\n\n// Query keys\nexport const authKeys = {\n  all: [\"auth\"] as const,\n  user: () => [...authKeys.all, \"user\"] as const,\n  token: () => [...authKeys.all, \"token\"] as const,\n};\n\n// Storage utilities\nconst TOKEN_STORAGE_KEY = \"cometa_auth_token\";\nconst REFRESH_TOKEN_STORAGE_KEY = \"cometa_refresh_token\";\nconst USER_STORAGE_KEY = \"cometa_user\";\n\nexport function getStoredToken(): string | null {\n  if (typeof window === \"undefined\") return null;\n  return localStorage.getItem(TOKEN_STORAGE_KEY);\n}\n\nexport function getStoredRefreshToken(): string | null {\n  if (typeof window === \"undefined\") return null;\n  return localStorage.getItem(REFRESH_TOKEN_STORAGE_KEY);\n}\n\nexport function getStoredUser(): AuthUser | null {\n  if (typeof window === \"undefined\") return null;\n  try {\n    const stored = localStorage.getItem(USER_STORAGE_KEY);\n    return stored ? JSON.parse(stored) : null;\n  } catch {\n    return null;\n  }\n}\n\nfunction storeAuthData(tokenResponse: TokenResponse) {\n  localStorage.setItem(TOKEN_STORAGE_KEY, tokenResponse.access_token);\n  localStorage.setItem(REFRESH_TOKEN_STORAGE_KEY, tokenResponse.refresh_token);\n  localStorage.setItem(\n    USER_STORAGE_KEY,\n    JSON.stringify({\n      ...tokenResponse.user,\n      permissions: tokenResponse.permissions,\n    })\n  );\n\n  // Set cookie for middleware\n  const expiryDate = new Date();\n  expiryDate.setTime(expiryDate.getTime() + (tokenResponse.expires_in * 1000));\n\n  // Only use secure flag in production\n  const isSecure = window.location.protocol === 'https:';\n  const secureFlag = isSecure ? '; secure' : '';\n\n  document.cookie = `cometa_auth_token=${tokenResponse.access_token}; expires=${expiryDate.toUTCString()}; path=/; samesite=strict${secureFlag}`;\n\n  // Set token for API clients\n  setAuthTokenForAllClients(tokenResponse.access_token);\n}\n\nfunction clearAuthData() {\n  localStorage.removeItem(TOKEN_STORAGE_KEY);\n  localStorage.removeItem(REFRESH_TOKEN_STORAGE_KEY);\n  localStorage.removeItem(USER_STORAGE_KEY);\n\n  // Clear cookie\n  document.cookie = \"cometa_auth_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n\n  // Clear tokens from API clients\n  clearAuthTokenForAllClients();\n}\n\n// Initialize auth state on app start\nexport function initializeAuth() {\n  const token = getStoredToken();\n  if (token) {\n    setAuthTokenForAllClients(token);\n  }\n}\n\n// Hooks\nexport function useAuth() {\n  return useQuery({\n    queryKey: authKeys.user(),\n    queryFn: () => {\n      const user = getStoredUser();\n      if (!user) throw new Error(\"Not authenticated\");\n      return user;\n    },\n    staleTime: Infinity,\n    retry: false,\n  });\n}\n\nexport function useLogin() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (credentials: LoginRequest) => authApi.login(credentials),\n    onSuccess: (tokenResponse) => {\n      // Store auth data\n      storeAuthData(tokenResponse);\n\n      // Update auth query cache\n      const authUser: AuthUser = {\n        ...tokenResponse.user,\n        permissions: tokenResponse.permissions,\n      };\n\n      queryClient.setQueryData(authKeys.user(), authUser);\n\n      toast.success(`Welcome back, ${tokenResponse.user.first_name}!`);\n\n      // Redirect to dashboard after successful login\n      if (typeof window !== \"undefined\") {\n        window.location.href = \"/dashboard\";\n      }\n    },\n    onError: (error) => {\n      toast.error(`Login failed: ${error.message}`);\n    },\n  });\n}\n\nexport function useLogout() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: () => authApi.logout(),\n    onSuccess: () => {\n      // Clear auth data\n      clearAuthData();\n\n      // Clear all auth-related queries\n      queryClient.removeQueries({ queryKey: authKeys.all });\n\n      // Clear all cached data to prevent data leaks\n      queryClient.clear();\n\n      toast.success(\"Logged out successfully\");\n    },\n    onError: (_error) => {\n      // Even if logout fails on server, clear local data\n      clearAuthData();\n      queryClient.removeQueries({ queryKey: authKeys.all });\n      queryClient.clear();\n\n      toast.error(\"Logout failed\");\n    },\n    onSettled: () => {\n      // Redirect to login page\n      if (typeof window !== \"undefined\") {\n        window.location.href = \"/login\";\n      }\n    },\n  });\n}\n\nexport function useRefreshToken() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: () => {\n      const refreshToken = getStoredRefreshToken();\n      if (!refreshToken) throw new Error(\"No refresh token available\");\n      return authApi.refreshToken(refreshToken);\n    },\n    onSuccess: (tokenResponse) => {\n      storeAuthData(tokenResponse);\n\n      const authUser: AuthUser = {\n        ...tokenResponse.user,\n        permissions: tokenResponse.permissions,\n      };\n\n      queryClient.setQueryData(authKeys.user(), authUser);\n    },\n    onError: (error) => {\n      // If refresh fails, logout user\n      clearAuthData();\n      queryClient.removeQueries({ queryKey: authKeys.all });\n\n      toast.error(\"Session expired. Please login again.\");\n\n      if (typeof window !== \"undefined\") {\n        window.location.href = \"/login\";\n      }\n    },\n  });\n}\n\n// Utility hook for checking permissions\nexport function usePermissions() {\n  const { data: user } = useAuth();\n\n  const hasPermission = (permission: string): boolean => {\n    return user?.permissions?.includes(permission) ?? false;\n  };\n\n  const hasRole = (role: string): boolean => {\n    return user?.role === role;\n  };\n\n  const hasAnyRole = (roles: string[]): boolean => {\n    return user?.role ? roles.includes(user.role) : false;\n  };\n\n  return {\n    user,\n    hasPermission,\n    hasRole,\n    hasAnyRole,\n    isAdmin: hasRole(\"admin\"),\n    isProjectManager: hasRole(\"pm\"),\n    isForeman: hasRole(\"foreman\"),\n    isWorker: hasAnyRole([\"crew\", \"worker\"]),\n    isViewer: hasRole(\"viewer\"),\n    canManageTeams: hasAnyRole([\"admin\", \"pm\", \"foreman\"]),\n    canApproveWork: hasAnyRole([\"admin\", \"pm\", \"foreman\"]),\n    canManageWork: hasAnyRole([\"admin\", \"pm\", \"foreman\", \"crew\", \"worker\"]),\n    canViewFinances: hasAnyRole([\"admin\", \"pm\", \"foreman\"]),\n    canManageFinances: hasAnyRole([\"admin\", \"pm\"]),\n    canManageInventory: hasAnyRole([\"admin\", \"pm\", \"foreman\"]),\n  };\n}\n\n// Hook for protecting routes\nexport function useRequireAuth() {\n  const { data: user, isLoading, error } = useAuth();\n\n  const isAuthenticated = !!user && !error;\n\n  return {\n    user,\n    isLoading,\n    isAuthenticated,\n    error,\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1539, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/lib/websocket-provider.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useEffect, useRef } from \"react\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { wsApi } from \"@/lib/api-client\";\nimport type { WebSocketMessage, RealtimeEvent, Notification } from \"@/types\";\n\ninterface WebSocketContextType {\n  isConnected: boolean;\n  send: (type: string, data: any) => void;\n  subscribe: (messageType: string, handler: (data: any) => void) => void;\n  unsubscribe: (messageType: string, handler: (data: any) => void) => void;\n}\n\nconst WebSocketContext = createContext<WebSocketContextType | null>(null);\n\ninterface WebSocketProviderProps {\n  children: React.ReactNode;\n}\n\nexport function WebSocketProvider({ children }: WebSocketProviderProps) {\n  const { user, token } = useAuth();\n  const queryClient = useQueryClient();\n  const isConnectedRef = useRef(false);\n  const connectionAttempts = useRef(0);\n  const maxConnectionAttempts = 5;\n\n  const handleNotification = React.useCallback((notification: Notification) => {\n    // Update notification-related queries\n    queryClient.invalidateQueries({ queryKey: [\"notifications\"] });\n\n    if (user?.id) {\n      queryClient.invalidateQueries({ queryKey: [\"notifications\", \"unread-count\", user.id] });\n    }\n\n    // Add notification to cache\n    queryClient.setQueryData([\"notifications\", \"detail\", notification.id], notification);\n\n    // Show toast for important notifications\n    if (notification.priority === \"high\" || notification.priority === \"urgent\") {\n      toast.info(notification.title, {\n        description: notification.body,\n        action: notification.priority === \"urgent\" ? {\n          label: \"View\",\n          onClick: () => {\n            // Could implement navigation to specific pages based on notification data\n            console.log(\"Navigate to notification:\", notification.id);\n          }\n        } : undefined,\n      });\n    }\n  }, [queryClient, user?.id]);\n\n  const handleRealtimeUpdate = React.useCallback((event: RealtimeEvent) => {\n    console.log(\"Realtime update received:\", event);\n\n    // Invalidate queries based on entity type\n    switch (event.entity_type) {\n      case \"project\":\n        queryClient.invalidateQueries({ queryKey: [\"projects\"] });\n        if (event.entity_id) {\n          queryClient.invalidateQueries({ queryKey: [\"projects\", \"detail\", event.entity_id] });\n        }\n        break;\n\n      case \"work_entry\":\n        queryClient.invalidateQueries({ queryKey: [\"work-entries\"] });\n        if (event.entity_id) {\n          queryClient.invalidateQueries({ queryKey: [\"work-entries\", \"detail\", event.entity_id] });\n        }\n        break;\n\n      case \"material\":\n        queryClient.invalidateQueries({ queryKey: [\"materials\"] });\n        if (event.entity_id) {\n          queryClient.invalidateQueries({ queryKey: [\"materials\", \"detail\", event.entity_id] });\n        }\n        break;\n\n      case \"material_allocation\":\n        queryClient.invalidateQueries({ queryKey: [\"material-allocations\"] });\n        break;\n\n      case \"house\":\n        queryClient.invalidateQueries({ queryKey: [\"houses\"] });\n        if (event.entity_id) {\n          queryClient.invalidateQueries({ queryKey: [\"houses\", \"detail\", event.entity_id] });\n        }\n        break;\n\n      case \"appointment\":\n        queryClient.invalidateQueries({ queryKey: [\"appointments\"] });\n        if (event.entity_id) {\n          queryClient.invalidateQueries({ queryKey: [\"appointments\", \"detail\", event.entity_id] });\n        }\n        break;\n\n      case \"crew\":\n        queryClient.invalidateQueries({ queryKey: [\"crews\"] });\n        if (event.entity_id) {\n          queryClient.invalidateQueries({ queryKey: [\"crews\", \"detail\", event.entity_id] });\n        }\n        break;\n\n      default:\n        // Generic cache invalidation for unknown entity types\n        console.log(\"Unknown entity type for realtime update:\", event.entity_type);\n        break;\n    }\n\n    // Show toast for critical status changes\n    if (event.type === \"status_changed\" && event.data?.status) {\n      const entityName = event.entity_type.replace(\"_\", \" \");\n      toast.info(`${entityName} status updated`, {\n        description: `Status changed to: ${event.data.status}`,\n      });\n    }\n\n    // Show toast for assignment changes\n    if (event.type === \"assignment_changed\" && user?.id && event.data?.assigned_to === user.id) {\n      const entityName = event.entity_type.replace(\"_\", \" \");\n      toast.info(`New ${entityName} assigned`, {\n        description: `You have been assigned to a ${entityName}`,\n      });\n    }\n  }, [queryClient, user?.id]);\n\n  const handleUserStatus = React.useCallback((data: any) => {\n    console.log(\"User status update:\", data);\n    // Could implement user presence indicators here\n  }, []);\n\n  const handleTypingIndicator = React.useCallback((data: any) => {\n    console.log(\"Typing indicator:\", data);\n    // Could implement typing indicators for chat/comments\n  }, []);\n\n  const connectWebSocket = React.useCallback(async () => {\n    if (!user?.id || !token) {\n      return;\n    }\n\n    try {\n      // Set auth token for WebSocket\n      wsApi.setAuthToken(token);\n\n      // Connect to WebSocket\n      await wsApi.connect(user.id);\n\n      isConnectedRef.current = true;\n      connectionAttempts.current = 0;\n\n      console.log(\"WebSocket connected successfully\");\n\n      // Subscribe to all message types\n      wsApi.subscribe(\"notification\", handleNotification);\n      wsApi.subscribe(\"realtime_update\", handleRealtimeUpdate);\n      wsApi.subscribe(\"user_status\", handleUserStatus);\n      wsApi.subscribe(\"typing_indicator\", handleTypingIndicator);\n\n      // Send initial presence update\n      wsApi.send(\"user_status\", {\n        status: \"online\",\n        timestamp: new Date().toISOString(),\n      });\n\n    } catch (error) {\n      console.error(\"WebSocket connection failed:\", error);\n      isConnectedRef.current = false;\n\n      // Implement exponential backoff for reconnection\n      if (connectionAttempts.current < maxConnectionAttempts) {\n        connectionAttempts.current++;\n        const delay = Math.pow(2, connectionAttempts.current) * 1000; // 2s, 4s, 8s, 16s, 32s\n\n        console.log(`Retrying WebSocket connection in ${delay}ms (attempt ${connectionAttempts.current}/${maxConnectionAttempts})`);\n\n        setTimeout(() => {\n          connectWebSocket();\n        }, delay);\n      } else {\n        console.error(\"Max WebSocket connection attempts reached\");\n        toast.error(\"Failed to establish real-time connection\", {\n          description: \"Some features may not work properly. Please refresh the page.\",\n        });\n      }\n    }\n  }, [user?.id, token, handleNotification, handleRealtimeUpdate, handleUserStatus, handleTypingIndicator]);\n\n  const disconnectWebSocket = React.useCallback(() => {\n    if (isConnectedRef.current) {\n      // Send offline status before disconnecting\n      wsApi.send(\"user_status\", {\n        status: \"offline\",\n        timestamp: new Date().toISOString(),\n      });\n\n      // Unsubscribe from all message types\n      wsApi.unsubscribe(\"notification\", handleNotification);\n      wsApi.unsubscribe(\"realtime_update\", handleRealtimeUpdate);\n      wsApi.unsubscribe(\"user_status\", handleUserStatus);\n      wsApi.unsubscribe(\"typing_indicator\", handleTypingIndicator);\n\n      // Disconnect\n      wsApi.disconnect();\n      isConnectedRef.current = false;\n      connectionAttempts.current = 0;\n\n      console.log(\"WebSocket disconnected\");\n    }\n  }, [handleNotification, handleRealtimeUpdate, handleUserStatus, handleTypingIndicator]);\n\n  // Connect when user and token are available\n  useEffect(() => {\n    if (user?.id && token) {\n      connectWebSocket();\n    } else {\n      disconnectWebSocket();\n    }\n\n    // Cleanup on unmount\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [user?.id, token, connectWebSocket, disconnectWebSocket]);\n\n  // Handle page visibility changes\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        // Page is hidden, send away status\n        if (isConnectedRef.current) {\n          wsApi.send(\"user_status\", {\n            status: \"away\",\n            timestamp: new Date().toISOString(),\n          });\n        }\n      } else {\n        // Page is visible, send online status and reconnect if needed\n        if (user?.id && token) {\n          if (!isConnectedRef.current) {\n            connectWebSocket();\n          } else {\n            wsApi.send(\"user_status\", {\n              status: \"online\",\n              timestamp: new Date().toISOString(),\n            });\n          }\n        }\n      }\n    };\n\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n\n    return () => {\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n    };\n  }, [user?.id, token, connectWebSocket]);\n\n  // Handle beforeunload to send offline status\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      if (isConnectedRef.current) {\n        wsApi.send(\"user_status\", {\n          status: \"offline\",\n          timestamp: new Date().toISOString(),\n        });\n      }\n    };\n\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, []);\n\n  const contextValue: WebSocketContextType = {\n    isConnected: isConnectedRef.current,\n    send: (type: string, data: any) => {\n      if (isConnectedRef.current) {\n        wsApi.send(type, data);\n      } else {\n        console.warn(\"WebSocket not connected, cannot send message:\", { type, data });\n      }\n    },\n    subscribe: (messageType: string, handler: (data: any) => void) => {\n      wsApi.subscribe(messageType, handler);\n    },\n    unsubscribe: (messageType: string, handler: (data: any) => void) => {\n      wsApi.unsubscribe(messageType, handler);\n    },\n  };\n\n  return (\n    <WebSocketContext.Provider value={contextValue}>\n      {children}\n    </WebSocketContext.Provider>\n  );\n}\n\nexport function useWebSocket() {\n  const context = useContext(WebSocketContext);\n  if (!context) {\n    throw new Error(\"useWebSocket must be used within a WebSocketProvider\");\n  }\n  return context;\n}\n\n// Hook for sending specific message types\nexport function useWebSocketSend() {\n  const { send, isConnected } = useWebSocket();\n\n  const sendNotification = (notification: Partial<Notification>) => {\n    send(\"create_notification\", notification);\n  };\n\n  const sendRealtimeEvent = (event: Partial<RealtimeEvent>) => {\n    send(\"realtime_event\", event);\n  };\n\n  const sendUserStatus = (status: \"online\" | \"away\" | \"offline\") => {\n    send(\"user_status\", {\n      status,\n      timestamp: new Date().toISOString(),\n    });\n  };\n\n  const sendTypingIndicator = (isTyping: boolean, context?: string) => {\n    send(\"typing_indicator\", {\n      typing: isTyping,\n      context,\n      timestamp: new Date().toISOString(),\n    });\n  };\n\n  return {\n    sendNotification,\n    sendRealtimeEvent,\n    sendUserStatus,\n    sendTypingIndicator,\n    isConnected,\n  };\n}"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAgBA,MAAM,iCAAmB,IAAA,8KAAa,EAA8B;AAM7D,SAAS,kBAAkB,KAAoC;QAApC,EAAE,QAAQ,EAA0B,GAApC;;IAChC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,IAAA,yIAAO;IAC/B,MAAM,cAAc,IAAA,2MAAc;IAClC,MAAM,iBAAiB,IAAA,uKAAM,EAAC;IAC9B,MAAM,qBAAqB,IAAA,uKAAM,EAAC;IAClC,MAAM,wBAAwB;IAE9B,MAAM,qBAAqB,wKAAK,CAAC,WAAW;6DAAC,CAAC;YAC5C,sCAAsC;YACtC,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAgB;YAAC;YAE5D,IAAI,iBAAA,2BAAA,KAAM,EAAE,EAAE;gBACZ,YAAY,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;wBAAiB;wBAAgB,KAAK,EAAE;qBAAC;gBAAC;YACvF;YAEA,4BAA4B;YAC5B,YAAY,YAAY,CAAC;gBAAC;gBAAiB;gBAAU,aAAa,EAAE;aAAC,EAAE;YAEvE,yCAAyC;YACzC,IAAI,aAAa,QAAQ,KAAK,UAAU,aAAa,QAAQ,KAAK,UAAU;gBAC1E,oJAAK,CAAC,IAAI,CAAC,aAAa,KAAK,EAAE;oBAC7B,aAAa,aAAa,IAAI;oBAC9B,QAAQ,aAAa,QAAQ,KAAK,WAAW;wBAC3C,OAAO;wBACP,OAAO;iFAAE;gCACP,0EAA0E;gCAC1E,QAAQ,GAAG,CAAC,6BAA6B,aAAa,EAAE;4BAC1D;;oBACF,IAAI;gBACN;YACF;QACF;4DAAG;QAAC;QAAa,iBAAA,2BAAA,KAAM,EAAE;KAAC;IAE1B,MAAM,uBAAuB,wKAAK,CAAC,WAAW;+DAAC,CAAC;gBA0DP,aAQgB;YAjEvD,QAAQ,GAAG,CAAC,6BAA6B;YAEzC,0CAA0C;YAC1C,OAAQ,MAAM,WAAW;gBACvB,KAAK;oBACH,YAAY,iBAAiB,CAAC;wBAAE,UAAU;4BAAC;yBAAW;oBAAC;oBACvD,IAAI,MAAM,SAAS,EAAE;wBACnB,YAAY,iBAAiB,CAAC;4BAAE,UAAU;gCAAC;gCAAY;gCAAU,MAAM,SAAS;6BAAC;wBAAC;oBACpF;oBACA;gBAEF,KAAK;oBACH,YAAY,iBAAiB,CAAC;wBAAE,UAAU;4BAAC;yBAAe;oBAAC;oBAC3D,IAAI,MAAM,SAAS,EAAE;wBACnB,YAAY,iBAAiB,CAAC;4BAAE,UAAU;gCAAC;gCAAgB;gCAAU,MAAM,SAAS;6BAAC;wBAAC;oBACxF;oBACA;gBAEF,KAAK;oBACH,YAAY,iBAAiB,CAAC;wBAAE,UAAU;4BAAC;yBAAY;oBAAC;oBACxD,IAAI,MAAM,SAAS,EAAE;wBACnB,YAAY,iBAAiB,CAAC;4BAAE,UAAU;gCAAC;gCAAa;gCAAU,MAAM,SAAS;6BAAC;wBAAC;oBACrF;oBACA;gBAEF,KAAK;oBACH,YAAY,iBAAiB,CAAC;wBAAE,UAAU;4BAAC;yBAAuB;oBAAC;oBACnE;gBAEF,KAAK;oBACH,YAAY,iBAAiB,CAAC;wBAAE,UAAU;4BAAC;yBAAS;oBAAC;oBACrD,IAAI,MAAM,SAAS,EAAE;wBACnB,YAAY,iBAAiB,CAAC;4BAAE,UAAU;gCAAC;gCAAU;gCAAU,MAAM,SAAS;6BAAC;wBAAC;oBAClF;oBACA;gBAEF,KAAK;oBACH,YAAY,iBAAiB,CAAC;wBAAE,UAAU;4BAAC;yBAAe;oBAAC;oBAC3D,IAAI,MAAM,SAAS,EAAE;wBACnB,YAAY,iBAAiB,CAAC;4BAAE,UAAU;gCAAC;gCAAgB;gCAAU,MAAM,SAAS;6BAAC;wBAAC;oBACxF;oBACA;gBAEF,KAAK;oBACH,YAAY,iBAAiB,CAAC;wBAAE,UAAU;4BAAC;yBAAQ;oBAAC;oBACpD,IAAI,MAAM,SAAS,EAAE;wBACnB,YAAY,iBAAiB,CAAC;4BAAE,UAAU;gCAAC;gCAAS;gCAAU,MAAM,SAAS;6BAAC;wBAAC;oBACjF;oBACA;gBAEF;oBACE,sDAAsD;oBACtD,QAAQ,GAAG,CAAC,4CAA4C,MAAM,WAAW;oBACzE;YACJ;YAEA,yCAAyC;YACzC,IAAI,MAAM,IAAI,KAAK,sBAAoB,cAAA,MAAM,IAAI,cAAV,kCAAA,YAAY,MAAM,GAAE;gBACzD,MAAM,aAAa,MAAM,WAAW,CAAC,OAAO,CAAC,KAAK;gBAClD,oJAAK,CAAC,IAAI,CAAC,AAAC,GAAa,OAAX,YAAW,oBAAkB;oBACzC,aAAa,AAAC,sBAAuC,OAAlB,MAAM,IAAI,CAAC,MAAM;gBACtD;YACF;YAEA,oCAAoC;YACpC,IAAI,MAAM,IAAI,KAAK,yBAAwB,iBAAA,2BAAA,KAAM,EAAE,KAAI,EAAA,eAAA,MAAM,IAAI,cAAV,mCAAA,aAAY,WAAW,MAAK,KAAK,EAAE,EAAE;gBAC1F,MAAM,aAAa,MAAM,WAAW,CAAC,OAAO,CAAC,KAAK;gBAClD,oJAAK,CAAC,IAAI,CAAC,AAAC,OAAiB,OAAX,YAAW,cAAY;oBACvC,aAAa,AAAC,+BAAyC,OAAX;gBAC9C;YACF;QACF;8DAAG;QAAC;QAAa,iBAAA,2BAAA,KAAM,EAAE;KAAC;IAE1B,MAAM,mBAAmB,wKAAK,CAAC,WAAW;2DAAC,CAAC;YAC1C,QAAQ,GAAG,CAAC,uBAAuB;QACnC,gDAAgD;QAClD;0DAAG,EAAE;IAEL,MAAM,wBAAwB,wKAAK,CAAC,WAAW;gEAAC,CAAC;YAC/C,QAAQ,GAAG,CAAC,qBAAqB;QACjC,sDAAsD;QACxD;+DAAG,EAAE;IAEL,MAAM,mBAAmB,wKAAK,CAAC,WAAW;2DAAC;YACzC,IAAI,EAAC,iBAAA,2BAAA,KAAM,EAAE,KAAI,CAAC,OAAO;gBACvB;YACF;YAEA,IAAI;gBACF,+BAA+B;gBAC/B,uIAAK,CAAC,YAAY,CAAC;gBAEnB,uBAAuB;gBACvB,MAAM,uIAAK,CAAC,OAAO,CAAC,KAAK,EAAE;gBAE3B,eAAe,OAAO,GAAG;gBACzB,mBAAmB,OAAO,GAAG;gBAE7B,QAAQ,GAAG,CAAC;gBAEZ,iCAAiC;gBACjC,uIAAK,CAAC,SAAS,CAAC,gBAAgB;gBAChC,uIAAK,CAAC,SAAS,CAAC,mBAAmB;gBACnC,uIAAK,CAAC,SAAS,CAAC,eAAe;gBAC/B,uIAAK,CAAC,SAAS,CAAC,oBAAoB;gBAEpC,+BAA+B;gBAC/B,uIAAK,CAAC,IAAI,CAAC,eAAe;oBACxB,QAAQ;oBACR,WAAW,IAAI,OAAO,WAAW;gBACnC;YAEF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,gCAAgC;gBAC9C,eAAe,OAAO,GAAG;gBAEzB,iDAAiD;gBACjD,IAAI,mBAAmB,OAAO,GAAG,uBAAuB;oBACtD,mBAAmB,OAAO;oBAC1B,MAAM,QAAQ,KAAK,GAAG,CAAC,GAAG,mBAAmB,OAAO,IAAI,MAAM,uBAAuB;oBAErF,QAAQ,GAAG,CAAC,AAAC,oCAAuD,OAApB,OAAM,gBAA4C,OAA9B,mBAAmB,OAAO,EAAC,KAAyB,OAAtB,uBAAsB;oBAExH;2EAAW;4BACT;wBACF;0EAAG;gBACL,OAAO;oBACL,QAAQ,KAAK,CAAC;oBACd,oJAAK,CAAC,KAAK,CAAC,4CAA4C;wBACtD,aAAa;oBACf;gBACF;YACF;QACF;0DAAG;QAAC,iBAAA,2BAAA,KAAM,EAAE;QAAE;QAAO;QAAoB;QAAsB;QAAkB;KAAsB;IAEvG,MAAM,sBAAsB,wKAAK,CAAC,WAAW;8DAAC;YAC5C,IAAI,eAAe,OAAO,EAAE;gBAC1B,2CAA2C;gBAC3C,uIAAK,CAAC,IAAI,CAAC,eAAe;oBACxB,QAAQ;oBACR,WAAW,IAAI,OAAO,WAAW;gBACnC;gBAEA,qCAAqC;gBACrC,uIAAK,CAAC,WAAW,CAAC,gBAAgB;gBAClC,uIAAK,CAAC,WAAW,CAAC,mBAAmB;gBACrC,uIAAK,CAAC,WAAW,CAAC,eAAe;gBACjC,uIAAK,CAAC,WAAW,CAAC,oBAAoB;gBAEtC,aAAa;gBACb,uIAAK,CAAC,UAAU;gBAChB,eAAe,OAAO,GAAG;gBACzB,mBAAmB,OAAO,GAAG;gBAE7B,QAAQ,GAAG,CAAC;YACd;QACF;6DAAG;QAAC;QAAoB;QAAsB;QAAkB;KAAsB;IAEtF,4CAA4C;IAC5C,IAAA,0KAAS;uCAAC;YACR,IAAI,CAAA,iBAAA,2BAAA,KAAM,EAAE,KAAI,OAAO;gBACrB;YACF,OAAO;gBACL;YACF;YAEA,qBAAqB;YACrB;+CAAO;oBACL;gBACF;;QACF;sCAAG;QAAC,iBAAA,2BAAA,KAAM,EAAE;QAAE;QAAO;QAAkB;KAAoB;IAE3D,iCAAiC;IACjC,IAAA,0KAAS;uCAAC;YACR,MAAM;sEAAyB;oBAC7B,IAAI,SAAS,MAAM,EAAE;wBACnB,mCAAmC;wBACnC,IAAI,eAAe,OAAO,EAAE;4BAC1B,uIAAK,CAAC,IAAI,CAAC,eAAe;gCACxB,QAAQ;gCACR,WAAW,IAAI,OAAO,WAAW;4BACnC;wBACF;oBACF,OAAO;wBACL,8DAA8D;wBAC9D,IAAI,CAAA,iBAAA,2BAAA,KAAM,EAAE,KAAI,OAAO;4BACrB,IAAI,CAAC,eAAe,OAAO,EAAE;gCAC3B;4BACF,OAAO;gCACL,uIAAK,CAAC,IAAI,CAAC,eAAe;oCACxB,QAAQ;oCACR,WAAW,IAAI,OAAO,WAAW;gCACnC;4BACF;wBACF;oBACF;gBACF;;YAEA,SAAS,gBAAgB,CAAC,oBAAoB;YAE9C;+CAAO;oBACL,SAAS,mBAAmB,CAAC,oBAAoB;gBACnD;;QACF;sCAAG;QAAC,iBAAA,2BAAA,KAAM,EAAE;QAAE;QAAO;KAAiB;IAEtC,6CAA6C;IAC7C,IAAA,0KAAS;uCAAC;YACR,MAAM;kEAAqB;oBACzB,IAAI,eAAe,OAAO,EAAE;wBAC1B,uIAAK,CAAC,IAAI,CAAC,eAAe;4BACxB,QAAQ;4BACR,WAAW,IAAI,OAAO,WAAW;wBACnC;oBACF;gBACF;;YAEA,OAAO,gBAAgB,CAAC,gBAAgB;YAExC;+CAAO;oBACL,OAAO,mBAAmB,CAAC,gBAAgB;gBAC7C;;QACF;sCAAG,EAAE;IAEL,MAAM,eAAqC;QACzC,aAAa,eAAe,OAAO;QACnC,MAAM,CAAC,MAAc;YACnB,IAAI,eAAe,OAAO,EAAE;gBAC1B,uIAAK,CAAC,IAAI,CAAC,MAAM;YACnB,OAAO;gBACL,QAAQ,IAAI,CAAC,iDAAiD;oBAAE;oBAAM;gBAAK;YAC7E;QACF;QACA,WAAW,CAAC,aAAqB;YAC/B,uIAAK,CAAC,SAAS,CAAC,aAAa;QAC/B;QACA,aAAa,CAAC,aAAqB;YACjC,uIAAK,CAAC,WAAW,CAAC,aAAa;QACjC;IACF;IAEA,qBACE,6LAAC,iBAAiB,QAAQ;QAAC,OAAO;kBAC/B;;;;;;AAGP;GAvRgB;;QACU,yIAAO;QACX,2MAAc;;;KAFpB;AAyRT,SAAS;;IACd,MAAM,UAAU,IAAA,2KAAU,EAAC;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB;AAST,SAAS;;IACd,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG;IAE9B,MAAM,mBAAmB,CAAC;QACxB,KAAK,uBAAuB;IAC9B;IAEA,MAAM,oBAAoB,CAAC;QACzB,KAAK,kBAAkB;IACzB;IAEA,MAAM,iBAAiB,CAAC;QACtB,KAAK,eAAe;YAClB;YACA,WAAW,IAAI,OAAO,WAAW;QACnC;IACF;IAEA,MAAM,sBAAsB,CAAC,UAAmB;QAC9C,KAAK,oBAAoB;YACvB,QAAQ;YACR;YACA,WAAW,IAAI,OAAO,WAAW;QACnC;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;IACF;AACF;IAjCgB;;QACgB","debugId":null}},
    {"offset": {"line": 2006, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/lib/providers.tsx"],"sourcesContent":["\"use client\";\n\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { ReactQueryDevtools } from \"@tanstack/react-query-devtools\";\nimport { useState, useEffect, type ReactNode } from \"react\";\nimport { Toaster } from \"@/components/ui/sonner\";\nimport { WebSocketProvider } from \"@/lib/websocket-provider\";\n\ninterface ProvidersProps {\n  children: ReactNode;\n}\n\nexport function Providers({ children }: ProvidersProps) {\n  const [queryClient] = useState(\n    () =>\n      new QueryClient({\n        defaultOptions: {\n          queries: {\n            // OPTIMIZATION: Enhanced cache configuration for better performance\n            staleTime: 5 * 60 * 1000, // 5 minutes - longer cache for better UX\n            gcTime: 10 * 60 * 1000, // 10 minutes garbage collection (v5 API)\n            refetchOnWindowFocus: false, // Prevent unnecessary refetches on window focus\n            refetchOnMount: true, // Ensure fresh data on mount\n            refetchOnReconnect: true, // Refetch when network reconnects\n\n            // OPTIMIZATION: Smart retry strategy based on error type\n            retry: (failureCount, error) => {\n              // Don't retry on 4xx client errors (except 408 timeout)\n              if (error instanceof Error && 'status' in error) {\n                const status = (error as any).status;\n                if (status >= 400 && status < 500) {\n                  return status === 408; // Only retry timeouts\n                }\n                // Don't retry on 5xx for critical operations (auth, payments)\n                if (status >= 500 && status < 600) {\n                  return failureCount < 2; // Reduced retries for server errors\n                }\n              }\n\n              // Network errors and other issues - retry with exponential backoff\n              return failureCount < 3;\n            },\n\n            // OPTIMIZATION: Exponential backoff with jitter\n            retryDelay: (attemptIndex) => {\n              const baseDelay = Math.min(1000 * 2 ** attemptIndex, 30000);\n              const jitter = Math.random() * 0.1 * baseDelay;\n              return baseDelay + jitter;\n            },\n\n            // OPTIMIZATION: Network-aware configurations\n            networkMode: 'online', // Only fetch when online\n          },\n          mutations: {\n            // OPTIMIZATION: Strategic mutation retry for critical operations\n            retry: (failureCount, error) => {\n              if (error instanceof Error && 'status' in error) {\n                const status = (error as any).status;\n                // Retry mutations only for network/server issues, not client errors\n                if (status >= 500 && status < 600) {\n                  return failureCount < 2;\n                }\n                // Retry timeouts\n                if (status === 408 || status === 504) {\n                  return failureCount < 3;\n                }\n              }\n              return false; // Don't retry other mutation failures\n            },\n            networkMode: 'online',\n          },\n        },\n      })\n  );\n\n  // OPTIMIZATION: Monitor cache size in development\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development') {\n      const monitorInterval = setInterval(() => {\n        const cache = queryClient.getQueryCache();\n        const queries = cache.getAll();\n        const cacheSize = queries.length;\n\n        console.log(`[React Query] Cache size: ${cacheSize} queries`);\n\n        if (cacheSize > 100) {\n          console.warn(\n            `⚠️ [React Query] Cache is growing large (${cacheSize} queries). ` +\n            `Consider more aggressive GC or refactoring query keys.`\n          );\n        }\n\n        // Log breakdown by query type\n        const queryTypes = queries.reduce((acc: Record<string, number>, query) => {\n          const key = query.queryKey[0] as string;\n          acc[key] = (acc[key] || 0) + 1;\n          return acc;\n        }, {});\n\n        console.log('[React Query] Cache breakdown:', queryTypes);\n      }, 60000); // Every minute\n\n      return () => clearInterval(monitorInterval);\n    }\n  }, [queryClient]);\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <WebSocketProvider>\n        {children}\n        <Toaster position=\"bottom-right\" richColors />\n        <ReactQueryDevtools initialIsOpen={false} />\n      </WebSocketProvider>\n    </QueryClientProvider>\n  );\n}"],"names":[],"mappings":";;;;AA6EQ;;AA3ER;AAAA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAYO,SAAS,UAAU,KAA4B;QAA5B,EAAE,QAAQ,EAAkB,GAA5B;;IACxB,MAAM,CAAC,YAAY,GAAG,IAAA,yKAAQ;8BAC5B,IACE,IAAI,+LAAW,CAAC;gBACd,gBAAgB;oBACd,SAAS;wBACP,oEAAoE;wBACpE,WAAW,IAAI,KAAK;wBACpB,QAAQ,KAAK,KAAK;wBAClB,sBAAsB;wBACtB,gBAAgB;wBAChB,oBAAoB;wBAEpB,yDAAyD;wBACzD,KAAK;kDAAE,CAAC,cAAc;gCACpB,wDAAwD;gCACxD,IAAI,iBAAiB,SAAS,YAAY,OAAO;oCAC/C,MAAM,SAAS,AAAC,MAAc,MAAM;oCACpC,IAAI,UAAU,OAAO,SAAS,KAAK;wCACjC,OAAO,WAAW,KAAK,sBAAsB;oCAC/C;oCACA,8DAA8D;oCAC9D,IAAI,UAAU,OAAO,SAAS,KAAK;wCACjC,OAAO,eAAe,GAAG,oCAAoC;oCAC/D;gCACF;gCAEA,mEAAmE;gCACnE,OAAO,eAAe;4BACxB;;wBAEA,gDAAgD;wBAChD,UAAU;kDAAE,CAAC;gCACX,MAAM,YAAY,KAAK,GAAG,CAAC,OAAO,KAAK,cAAc;gCACrD,MAAM,SAAS,KAAK,MAAM,KAAK,MAAM;gCACrC,OAAO,YAAY;4BACrB;;wBAEA,6CAA6C;wBAC7C,aAAa;oBACf;oBACA,WAAW;wBACT,iEAAiE;wBACjE,KAAK;kDAAE,CAAC,cAAc;gCACpB,IAAI,iBAAiB,SAAS,YAAY,OAAO;oCAC/C,MAAM,SAAS,AAAC,MAAc,MAAM;oCACpC,oEAAoE;oCACpE,IAAI,UAAU,OAAO,SAAS,KAAK;wCACjC,OAAO,eAAe;oCACxB;oCACA,iBAAiB;oCACjB,IAAI,WAAW,OAAO,WAAW,KAAK;wCACpC,OAAO,eAAe;oCACxB;gCACF;gCACA,OAAO,OAAO,sCAAsC;4BACtD;;wBACA,aAAa;oBACf;gBACF;YACF;;IAGJ,kDAAkD;IAClD,IAAA,0KAAS;+BAAC;YACR,wCAA4C;gBAC1C,MAAM,kBAAkB;2DAAY;wBAClC,MAAM,QAAQ,YAAY,aAAa;wBACvC,MAAM,UAAU,MAAM,MAAM;wBAC5B,MAAM,YAAY,QAAQ,MAAM;wBAEhC,QAAQ,GAAG,CAAC,AAAC,6BAAsC,OAAV,WAAU;wBAEnD,IAAI,YAAY,KAAK;4BACnB,QAAQ,IAAI,CACV,AAAC,4CAAqD,OAAV,WAAU,iBACrD;wBAEL;wBAEA,8BAA8B;wBAC9B,MAAM,aAAa,QAAQ,MAAM;8EAAC,CAAC,KAA6B;gCAC9D,MAAM,MAAM,MAAM,QAAQ,CAAC,EAAE;gCAC7B,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI;gCAC7B,OAAO;4BACT;6EAAG,CAAC;wBAEJ,QAAQ,GAAG,CAAC,kCAAkC;oBAChD;0DAAG,QAAQ,eAAe;gBAE1B;2CAAO,IAAM,cAAc;;YAC7B;QACF;8BAAG;QAAC;KAAY;IAEhB,qBACE,6LAAC,gNAAmB;QAAC,QAAQ;kBAC3B,cAAA,6LAAC,4JAAiB;;gBACf;8BACD,6LAAC,gJAAO;oBAAC,UAAS;oBAAe,UAAU;;;;;;8BAC3C,6LAAC,6MAAkB;oBAAC,eAAe;;;;;;;;;;;;;;;;;AAI3C;GAvGgB;KAAA","debugId":null}}]
}