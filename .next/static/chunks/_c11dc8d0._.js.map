{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/maps/feature-layer.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useMemo } from \"react\";\nimport { Marker, Popup, Polyline, Polygon, useMap } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport type { GeospatialFeature, GeoPoint, GeoLineString, GeoPolygon } from \"@/types\";\n\ninterface FeatureLayerProps {\n  features: GeospatialFeature[];\n  onFeatureClick?: (feature: GeospatialFeature) => void;\n  onFeatureEdit?: (feature: GeospatialFeature) => void;\n  editable?: boolean;\n  selectedFeatureId?: string;\n}\n\n// Custom marker icons for different entity types\nconst createCustomIcon = (entityType: string, isSelected: boolean = false) => {\n  const color = isSelected ? \"#ef4444\" : getEntityColor(entityType);\n\n  return L.divIcon({\n    html: `<div style=\"\n      background-color: ${color};\n      width: 12px;\n      height: 12px;\n      border: 2px solid white;\n      border-radius: 50%;\n      box-shadow: 0 1px 3px rgba(0,0,0,0.3);\n    \"></div>`,\n    className: \"custom-marker\",\n    iconSize: [16, 16],\n    iconAnchor: [8, 8],\n  });\n};\n\nconst getEntityColor = (entityType: string): string => {\n  switch (entityType) {\n    case \"project\":\n      return \"#3b82f6\"; // blue\n    case \"cabinet\":\n      return \"#10b981\"; // green\n    case \"segment\":\n      return \"#f59e0b\"; // orange\n    case \"cut\":\n      return \"#ef4444\"; // red\n    case \"work_entry\":\n      return \"#8b5cf6\"; // purple\n    case \"house\":\n      return \"#06b6d4\"; // cyan\n    case \"measurement\":\n      return \"#84cc16\"; // lime\n    default:\n      return \"#6b7280\"; // gray\n  }\n};\n\nexport function FeatureLayer({\n  features,\n  onFeatureClick,\n  onFeatureEdit,\n  editable = false,\n  selectedFeatureId,\n}: FeatureLayerProps) {\n  const map = useMap();\n\n  // Group features by geometry type for better performance\n  const groupedFeatures = useMemo(() => {\n    return features.reduce((acc, feature) => {\n      const type = feature.geometry.type;\n      if (!acc[type]) acc[type] = [];\n      acc[type].push(feature);\n      return acc;\n    }, {} as Record<string, GeospatialFeature[]>);\n  }, [features]);\n\n  // Auto-fit map to features bounds\n  useEffect(() => {\n    if (features.length > 0) {\n      const bounds = L.latLngBounds([]);\n\n      features.forEach((feature) => {\n        const { geometry } = feature;\n\n        if (geometry.type === \"Point\") {\n          const point = geometry as GeoPoint;\n          bounds.extend([point.coordinates[1], point.coordinates[0]]);\n        } else if (geometry.type === \"LineString\") {\n          const line = geometry as GeoLineString;\n          line.coordinates.forEach(([lng, lat]) => {\n            bounds.extend([lat, lng]);\n          });\n        } else if (geometry.type === \"Polygon\") {\n          const polygon = geometry as GeoPolygon;\n          polygon.coordinates[0].forEach(([lng, lat]) => {\n            bounds.extend([lat, lng]);\n          });\n        }\n      });\n\n      if (bounds.isValid()) {\n        map.fitBounds(bounds, { padding: [20, 20] });\n      }\n    }\n  }, [features, map]);\n\n  const handleFeatureClick = (feature: GeospatialFeature) => {\n    if (onFeatureClick) {\n      onFeatureClick(feature);\n    }\n  };\n\n  const renderFeaturePopup = (feature: GeospatialFeature) => (\n    <Popup>\n      <div className=\"space-y-2\">\n        <div className=\"font-semibold text-sm\">\n          {feature.entity_type.charAt(0).toUpperCase() + feature.entity_type.slice(1)}\n        </div>\n        {feature.properties && (\n          <div className=\"text-xs space-y-1\">\n            {Object.entries(feature.properties).map(([key, value]) => (\n              <div key={key}>\n                <span className=\"font-medium\">{key}:</span> {String(value)}\n              </div>\n            ))}\n          </div>\n        )}\n        {editable && onFeatureEdit && (\n          <button\n            onClick={() => onFeatureEdit(feature)}\n            className=\"text-xs bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600\"\n          >\n            Edit\n          </button>\n        )}\n      </div>\n    </Popup>\n  );\n\n  return (\n    <>\n      {/* Render Point features as Markers */}\n      {groupedFeatures.Point?.map((feature) => {\n        const point = feature.geometry as GeoPoint;\n        const [lng, lat] = point.coordinates;\n        const isSelected = feature.id === selectedFeatureId;\n\n        return (\n          <Marker\n            key={feature.id}\n            position={[lat, lng]}\n            icon={createCustomIcon(feature.entity_type, isSelected)}\n            eventHandlers={{\n              click: () => handleFeatureClick(feature),\n            }}\n          >\n            {renderFeaturePopup(feature)}\n          </Marker>\n        );\n      })}\n\n      {/* Render LineString features as Polylines */}\n      {groupedFeatures.LineString?.map((feature) => {\n        const line = feature.geometry as GeoLineString;\n        const positions = line.coordinates.map(([lng, lat]) => [lat, lng] as [number, number]);\n        const isSelected = feature.id === selectedFeatureId;\n\n        return (\n          <Polyline\n            key={feature.id}\n            positions={positions}\n            color={getEntityColor(feature.entity_type)}\n            weight={isSelected ? 5 : 3}\n            opacity={0.8}\n            eventHandlers={{\n              click: () => handleFeatureClick(feature),\n            }}\n          >\n            {renderFeaturePopup(feature)}\n          </Polyline>\n        );\n      })}\n\n      {/* Render Polygon features as Polygons */}\n      {groupedFeatures.Polygon?.map((feature) => {\n        const polygon = feature.geometry as GeoPolygon;\n        const positions = polygon.coordinates[0].map(([lng, lat]) => [lat, lng] as [number, number]);\n        const isSelected = feature.id === selectedFeatureId;\n\n        return (\n          <Polygon\n            key={feature.id}\n            positions={positions}\n            color={getEntityColor(feature.entity_type)}\n            weight={isSelected ? 3 : 2}\n            fillOpacity={0.3}\n            eventHandlers={{\n              click: () => handleFeatureClick(feature),\n            }}\n          >\n            {renderFeaturePopup(feature)}\n          </Polygon>\n        );\n      })}\n    </>\n  );\n}\n\nexport default FeatureLayer;"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAJA;;;;AAeA,iDAAiD;AACjD,MAAM,mBAAmB,SAAC;QAAoB,8EAAsB;IAClE,MAAM,QAAQ,aAAa,YAAY,eAAe;IAEtD,OAAO,+JAAC,CAAC,OAAO,CAAC;QACf,MAAM,AAAC,yCACqB,OAAN,OAAM;QAO5B,WAAW;QACX,UAAU;YAAC;YAAI;SAAG;QAClB,YAAY;YAAC;YAAG;SAAE;IACpB;AACF;AAEA,MAAM,iBAAiB,CAAC;IACtB,OAAQ;QACN,KAAK;YACH,OAAO,WAAW,OAAO;QAC3B,KAAK;YACH,OAAO,WAAW,QAAQ;QAC5B,KAAK;YACH,OAAO,WAAW,SAAS;QAC7B,KAAK;YACH,OAAO,WAAW,MAAM;QAC1B,KAAK;YACH,OAAO,WAAW,SAAS;QAC7B,KAAK;YACH,OAAO,WAAW,OAAO;QAC3B,KAAK;YACH,OAAO,WAAW,OAAO;QAC3B;YACE,OAAO,WAAW,OAAO;IAC7B;AACF;AAEO,SAAS,aAAa,KAMT;QANS,EAC3B,QAAQ,EACR,cAAc,EACd,aAAa,EACb,WAAW,KAAK,EAChB,iBAAiB,EACC,GANS;QAqFtB,wBAoBA,6BAsBA;;IAxHL,MAAM,MAAM,IAAA,6JAAM;IAElB,yDAAyD;IACzD,MAAM,kBAAkB,IAAA,wKAAO;iDAAC;YAC9B,OAAO,SAAS,MAAM;yDAAC,CAAC,KAAK;oBAC3B,MAAM,OAAO,QAAQ,QAAQ,CAAC,IAAI;oBAClC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,GAAG,EAAE;oBAC9B,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;oBACf,OAAO;gBACT;wDAAG,CAAC;QACN;gDAAG;QAAC;KAAS;IAEb,kCAAkC;IAClC,IAAA,0KAAS;kCAAC;YACR,IAAI,SAAS,MAAM,GAAG,GAAG;gBACvB,MAAM,SAAS,+JAAC,CAAC,YAAY,CAAC,EAAE;gBAEhC,SAAS,OAAO;8CAAC,CAAC;wBAChB,MAAM,EAAE,QAAQ,EAAE,GAAG;wBAErB,IAAI,SAAS,IAAI,KAAK,SAAS;4BAC7B,MAAM,QAAQ;4BACd,OAAO,MAAM,CAAC;gCAAC,MAAM,WAAW,CAAC,EAAE;gCAAE,MAAM,WAAW,CAAC,EAAE;6BAAC;wBAC5D,OAAO,IAAI,SAAS,IAAI,KAAK,cAAc;4BACzC,MAAM,OAAO;4BACb,KAAK,WAAW,CAAC,OAAO;0DAAC;wCAAC,CAAC,KAAK,IAAI;oCAClC,OAAO,MAAM,CAAC;wCAAC;wCAAK;qCAAI;gCAC1B;;wBACF,OAAO,IAAI,SAAS,IAAI,KAAK,WAAW;4BACtC,MAAM,UAAU;4BAChB,QAAQ,WAAW,CAAC,EAAE,CAAC,OAAO;0DAAC;wCAAC,CAAC,KAAK,IAAI;oCACxC,OAAO,MAAM,CAAC;wCAAC;wCAAK;qCAAI;gCAC1B;;wBACF;oBACF;;gBAEA,IAAI,OAAO,OAAO,IAAI;oBACpB,IAAI,SAAS,CAAC,QAAQ;wBAAE,SAAS;4BAAC;4BAAI;yBAAG;oBAAC;gBAC5C;YACF;QACF;iCAAG;QAAC;QAAU;KAAI;IAElB,MAAM,qBAAqB,CAAC;QAC1B,IAAI,gBAAgB;YAClB,eAAe;QACjB;IACF;IAEA,MAAM,qBAAqB,CAAC,wBAC1B,6LAAC,4JAAK;sBACJ,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACZ,QAAQ,WAAW,CAAC,MAAM,CAAC,GAAG,WAAW,KAAK,QAAQ,WAAW,CAAC,KAAK,CAAC;;;;;;oBAE1E,QAAQ,UAAU,kBACjB,6LAAC;wBAAI,WAAU;kCACZ,OAAO,OAAO,CAAC,QAAQ,UAAU,EAAE,GAAG,CAAC;gCAAC,CAAC,KAAK,MAAM;iDACnD,6LAAC;;kDACC,6LAAC;wCAAK,WAAU;;4CAAe;4CAAI;;;;;;;oCAAQ;oCAAE,OAAO;;+BAD5C;;;;;;;;;;;oBAMf,YAAY,+BACX,6LAAC;wBACC,SAAS,IAAM,cAAc;wBAC7B,WAAU;kCACX;;;;;;;;;;;;;;;;;IAQT,qBACE;;aAEG,yBAAA,gBAAgB,KAAK,cAArB,6CAAA,uBAAuB,GAAG,CAAC,CAAC;gBAC3B,MAAM,QAAQ,QAAQ,QAAQ;gBAC9B,MAAM,CAAC,KAAK,IAAI,GAAG,MAAM,WAAW;gBACpC,MAAM,aAAa,QAAQ,EAAE,KAAK;gBAElC,qBACE,6LAAC,8JAAM;oBAEL,UAAU;wBAAC;wBAAK;qBAAI;oBACpB,MAAM,iBAAiB,QAAQ,WAAW,EAAE;oBAC5C,eAAe;wBACb,OAAO,IAAM,mBAAmB;oBAClC;8BAEC,mBAAmB;mBAPf,QAAQ,EAAE;;;;;YAUrB;aAGC,8BAAA,gBAAgB,UAAU,cAA1B,kDAAA,4BAA4B,GAAG,CAAC,CAAC;gBAChC,MAAM,OAAO,QAAQ,QAAQ;gBAC7B,MAAM,YAAY,KAAK,WAAW,CAAC,GAAG,CAAC;wBAAC,CAAC,KAAK,IAAI;2BAAK;wBAAC;wBAAK;qBAAI;;gBACjE,MAAM,aAAa,QAAQ,EAAE,KAAK;gBAElC,qBACE,6LAAC,kKAAQ;oBAEP,WAAW;oBACX,OAAO,eAAe,QAAQ,WAAW;oBACzC,QAAQ,aAAa,IAAI;oBACzB,SAAS;oBACT,eAAe;wBACb,OAAO,IAAM,mBAAmB;oBAClC;8BAEC,mBAAmB;mBATf,QAAQ,EAAE;;;;;YAYrB;aAGC,2BAAA,gBAAgB,OAAO,cAAvB,+CAAA,yBAAyB,GAAG,CAAC,CAAC;gBAC7B,MAAM,UAAU,QAAQ,QAAQ;gBAChC,MAAM,YAAY,QAAQ,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC;wBAAC,CAAC,KAAK,IAAI;2BAAK;wBAAC;wBAAK;qBAAI;;gBACvE,MAAM,aAAa,QAAQ,EAAE,KAAK;gBAElC,qBACE,6LAAC,gKAAO;oBAEN,WAAW;oBACX,OAAO,eAAe,QAAQ,WAAW;oBACzC,QAAQ,aAAa,IAAI;oBACzB,aAAa;oBACb,eAAe;wBACb,OAAO,IAAM,mBAAmB;oBAClC;8BAEC,mBAAmB;mBATf,QAAQ,EAAE;;;;;YAYrB;;;AAGN;GArJgB;;QAOF,6JAAM;;;KAPJ;uCAuJD","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/node_modules/react-leaflet/lib/Marker.js"],"sourcesContent":["import { createElementObject, createLayerComponent, extendContext } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({ position, ...options }, ctx) {\n    const marker = new LeafletMarker(position, options);\n    return createElementObject(marker, extendContext(ctx, {\n        overlayContainer: marker\n    }));\n}, function updateMarker(marker, props, prevProps) {\n    if (props.position !== prevProps.position) {\n        marker.setLatLng(props.position);\n    }\n    if (props.icon != null && props.icon !== prevProps.icon) {\n        marker.setIcon(props.icon);\n    }\n    if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n        marker.setZIndexOffset(props.zIndexOffset);\n    }\n    if (props.opacity != null && props.opacity !== prevProps.opacity) {\n        marker.setOpacity(props.opacity);\n    }\n    if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n        if (props.draggable === true) {\n            marker.dragging.enable();\n        } else {\n            marker.dragging.disable();\n        }\n    }\n});\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AACA;;;AACO,MAAM,SAAS,IAAA,uLAAoB,EAAC,SAAS,aAAa,KAAwB,EAAE,GAAG;QAA7B,EAAE,QAAQ,EAAE,GAAG,SAAS,GAAxB;IAC7D,MAAM,SAAS,IAAI,8JAAa,CAAC,UAAU;IAC3C,OAAO,IAAA,sLAAmB,EAAC,QAAQ,IAAA,gLAAa,EAAC,KAAK;QAClD,kBAAkB;IACtB;AACJ,GAAG,SAAS,aAAa,MAAM,EAAE,KAAK,EAAE,SAAS;IAC7C,IAAI,MAAM,QAAQ,KAAK,UAAU,QAAQ,EAAE;QACvC,OAAO,SAAS,CAAC,MAAM,QAAQ;IACnC;IACA,IAAI,MAAM,IAAI,IAAI,QAAQ,MAAM,IAAI,KAAK,UAAU,IAAI,EAAE;QACrD,OAAO,OAAO,CAAC,MAAM,IAAI;IAC7B;IACA,IAAI,MAAM,YAAY,IAAI,QAAQ,MAAM,YAAY,KAAK,UAAU,YAAY,EAAE;QAC7E,OAAO,eAAe,CAAC,MAAM,YAAY;IAC7C;IACA,IAAI,MAAM,OAAO,IAAI,QAAQ,MAAM,OAAO,KAAK,UAAU,OAAO,EAAE;QAC9D,OAAO,UAAU,CAAC,MAAM,OAAO;IACnC;IACA,IAAI,OAAO,QAAQ,IAAI,QAAQ,MAAM,SAAS,KAAK,UAAU,SAAS,EAAE;QACpE,IAAI,MAAM,SAAS,KAAK,MAAM;YAC1B,OAAO,QAAQ,CAAC,MAAM;QAC1B,OAAO;YACH,OAAO,QAAQ,CAAC,OAAO;QAC3B;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/node_modules/react-leaflet/lib/Popup.js"],"sourcesContent":["import { createElementObject, createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n    const popup = new LeafletPopup(props, context.overlayContainer);\n    return createElementObject(popup, context);\n}, function usePopupLifecycle(element, context, { position }, setOpen) {\n    useEffect(function addPopup() {\n        const { instance } = element;\n        function onPopupOpen(event) {\n            if (event.popup === instance) {\n                instance.update();\n                setOpen(true);\n            }\n        }\n        function onPopupClose(event) {\n            if (event.popup === instance) {\n                setOpen(false);\n            }\n        }\n        context.map.on({\n            popupopen: onPopupOpen,\n            popupclose: onPopupClose\n        });\n        if (context.overlayContainer == null) {\n            // Attach to a Map\n            if (position != null) {\n                instance.setLatLng(position);\n            }\n            instance.openOn(context.map);\n        } else {\n            // Attach to container component\n            context.overlayContainer.bindPopup(instance);\n        }\n        return function removePopup() {\n            context.map.off({\n                popupopen: onPopupOpen,\n                popupclose: onPopupClose\n            });\n            context.overlayContainer?.unbindPopup();\n            context.map.removeLayer(instance);\n        };\n    }, [\n        element,\n        context,\n        setOpen,\n        position\n    ]);\n});\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;;;;AACO,MAAM,QAAQ,IAAA,yLAAsB,EAAC,SAAS,YAAY,KAAK,EAAE,OAAO;IAC3E,MAAM,QAAQ,IAAI,6JAAY,CAAC,OAAO,QAAQ,gBAAgB;IAC9D,OAAO,IAAA,sLAAmB,EAAC,OAAO;AACtC,GAAG,SAAS,kBAAkB,OAAO,EAAE,OAAO,EAAE,KAAY,EAAE,OAAO;QAArB,EAAE,QAAQ,EAAE,GAAZ;IAC5C,IAAA,0KAAS,EAAC,SAAS;QACf,MAAM,EAAE,QAAQ,EAAE,GAAG;QACrB,SAAS,YAAY,KAAK;YACtB,IAAI,MAAM,KAAK,KAAK,UAAU;gBAC1B,SAAS,MAAM;gBACf,QAAQ;YACZ;QACJ;QACA,SAAS,aAAa,KAAK;YACvB,IAAI,MAAM,KAAK,KAAK,UAAU;gBAC1B,QAAQ;YACZ;QACJ;QACA,QAAQ,GAAG,CAAC,EAAE,CAAC;YACX,WAAW;YACX,YAAY;QAChB;QACA,IAAI,QAAQ,gBAAgB,IAAI,MAAM;YAClC,kBAAkB;YAClB,IAAI,YAAY,MAAM;gBAClB,SAAS,SAAS,CAAC;YACvB;YACA,SAAS,MAAM,CAAC,QAAQ,GAAG;QAC/B,OAAO;YACH,gCAAgC;YAChC,QAAQ,gBAAgB,CAAC,SAAS,CAAC;QACvC;QACA,OAAO,SAAS;gBAKZ;YAJA,QAAQ,GAAG,CAAC,GAAG,CAAC;gBACZ,WAAW;gBACX,YAAY;YAChB;aACA,4BAAA,QAAQ,gBAAgB,cAAxB,gDAAA,0BAA0B,WAAW;YACrC,QAAQ,GAAG,CAAC,WAAW,CAAC;QAC5B;IACJ,GAAG;QACC;QACA;QACA;QACA;KACH;AACL","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/node_modules/react-leaflet/lib/Polyline.js"],"sourcesContent":["import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { Polyline as LeafletPolyline } from 'leaflet';\nexport const Polyline = createPathComponent(function createPolyline({ positions, ...options }, ctx) {\n    const polyline = new LeafletPolyline(positions, options);\n    return createElementObject(polyline, extendContext(ctx, {\n        overlayContainer: polyline\n    }));\n}, function updatePolyline(layer, props, prevProps) {\n    if (props.positions !== prevProps.positions) {\n        layer.setLatLngs(props.positions);\n    }\n});\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AACA;;;AACO,MAAM,WAAW,IAAA,sLAAmB,EAAC,SAAS,eAAe,KAAyB,EAAE,GAAG;QAA9B,EAAE,SAAS,EAAE,GAAG,SAAS,GAAzB;IAChE,MAAM,WAAW,IAAI,gKAAe,CAAC,WAAW;IAChD,OAAO,IAAA,sLAAmB,EAAC,UAAU,IAAA,gLAAa,EAAC,KAAK;QACpD,kBAAkB;IACtB;AACJ,GAAG,SAAS,eAAe,KAAK,EAAE,KAAK,EAAE,SAAS;IAC9C,IAAI,MAAM,SAAS,KAAK,UAAU,SAAS,EAAE;QACzC,MAAM,UAAU,CAAC,MAAM,SAAS;IACpC;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/node_modules/react-leaflet/lib/Polygon.js"],"sourcesContent":["import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { Polygon as LeafletPolygon } from 'leaflet';\nexport const Polygon = createPathComponent(function createPolygon({ positions, ...options }, ctx) {\n    const polygon = new LeafletPolygon(positions, options);\n    return createElementObject(polygon, extendContext(ctx, {\n        overlayContainer: polygon\n    }));\n}, function updatePolygon(layer, props, prevProps) {\n    if (props.positions !== prevProps.positions) {\n        layer.setLatLngs(props.positions);\n    }\n});\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AACA;;;AACO,MAAM,UAAU,IAAA,sLAAmB,EAAC,SAAS,cAAc,KAAyB,EAAE,GAAG;QAA9B,EAAE,SAAS,EAAE,GAAG,SAAS,GAAzB;IAC9D,MAAM,UAAU,IAAI,+JAAc,CAAC,WAAW;IAC9C,OAAO,IAAA,sLAAmB,EAAC,SAAS,IAAA,gLAAa,EAAC,KAAK;QACnD,kBAAkB;IACtB;AACJ,GAAG,SAAS,cAAc,KAAK,EAAE,KAAK,EAAE,SAAS;IAC7C,IAAI,MAAM,SAAS,KAAK,UAAU,SAAS,EAAE;QACzC,MAAM,UAAU,CAAC,MAAM,SAAS;IACpC;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/node_modules/react-leaflet/lib/hooks.js"],"sourcesContent":["import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n    return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n    const map = useMap();\n    useEffect(function addMapEventHandler() {\n        // @ts-ignore event type\n        map.on(type, handler);\n        return function removeMapEventHandler() {\n            // @ts-ignore event type\n            map.off(type, handler);\n        };\n    }, [\n        map,\n        type,\n        handler\n    ]);\n    return map;\n}\nexport function useMapEvents(handlers) {\n    const map = useMap();\n    useEffect(function addMapEventHandlers() {\n        map.on(handlers);\n        return function removeMapEventHandlers() {\n            map.off(handlers);\n        };\n    }, [\n        map,\n        handlers\n    ]);\n    return map;\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;AACO,SAAS;IACZ,OAAO,IAAA,oLAAiB,IAAG,GAAG;AAClC;AACO,SAAS,YAAY,IAAI,EAAE,OAAO;IACrC,MAAM,MAAM;IACZ,IAAA,0KAAS,EAAC,SAAS;QACf,wBAAwB;QACxB,IAAI,EAAE,CAAC,MAAM;QACb,OAAO,SAAS;YACZ,wBAAwB;YACxB,IAAI,GAAG,CAAC,MAAM;QAClB;IACJ,GAAG;QACC;QACA;QACA;KACH;IACD,OAAO;AACX;AACO,SAAS,aAAa,QAAQ;IACjC,MAAM,MAAM;IACZ,IAAA,0KAAS,EAAC,SAAS;QACf,IAAI,EAAE,CAAC;QACP,OAAO,SAAS;YACZ,IAAI,GAAG,CAAC;QACZ;IACJ,GAAG;QACC;QACA;KACH;IACD,OAAO;AACX","ignoreList":[0],"debugId":null}}]
}