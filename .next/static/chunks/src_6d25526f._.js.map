{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,2KAAgB,MAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;IACxB,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-users.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport {\n  usersApi,\n  type User,\n  type PaginatedResponse,\n} from \"@/lib/api-client\";\n\n// Query keys\nexport const userKeys = {\n  all: [\"users\"] as const,\n  lists: () => [...userKeys.all, \"list\"] as const,\n  list: (filters: any) => [...userKeys.lists(), filters] as const,\n  details: () => [...userKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...userKeys.details(), id] as const,\n};\n\n// Hooks\nexport function useUsers(filters?: { role?: string; page?: number; per_page?: number }) {\n  return useQuery({\n    queryKey: userKeys.list(filters || {}),\n    queryFn: () => usersApi.getUsers(filters),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useUser(id: string) {\n  return useQuery({\n    queryKey: userKeys.detail(id),\n    queryFn: () => usersApi.getUser(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000,\n  });\n}\n\nexport function useCreateUser() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: Partial<User>) => usersApi.createUser(data),\n    onSuccess: (newUser) => {\n      // Invalidate and refetch users list\n      queryClient.invalidateQueries({ queryKey: userKeys.lists() });\n\n      // Add the new user to the cache\n      queryClient.setQueryData(userKeys.detail(newUser.id), newUser);\n\n      toast.success(\"User created successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to create user: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateUser() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<User> }) =>\n      usersApi.updateUser(id, data),\n    onMutate: async ({ id, data }) => {\n      // Cancel any outgoing refetches\n      await queryClient.cancelQueries({ queryKey: userKeys.detail(id) });\n\n      // Snapshot the previous value\n      const previousUser = queryClient.getQueryData(userKeys.detail(id));\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(userKeys.detail(id), (old: User | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Return a context object with the snapshotted value\n      return { previousUser };\n    },\n    onError: (error, { id }, context) => {\n      // If the mutation fails, use the context returned from onMutate to roll back\n      if (context?.previousUser) {\n        queryClient.setQueryData(userKeys.detail(id), context.previousUser);\n      }\n      toast.error(`Failed to update user: ${error.message}`);\n    },\n    onSuccess: () => {\n      // Invalidate and refetch users list\n      queryClient.invalidateQueries({ queryKey: userKeys.lists() });\n      toast.success(\"User updated successfully\");\n    },\n    onSettled: (data, error, { id }) => {\n      // Always refetch after error or success\n      queryClient.invalidateQueries({ queryKey: userKeys.detail(id) });\n    },\n  });\n}\n\nexport function useDeleteUser() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: string) => usersApi.deleteUser(id),\n    onSuccess: (_, deletedId) => {\n      // Remove from cache\n      queryClient.removeQueries({ queryKey: userKeys.detail(deletedId) });\n\n      // Invalidate users list\n      queryClient.invalidateQueries({ queryKey: userKeys.lists() });\n\n      toast.success(\"User deleted successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to delete user: ${error.message}`);\n    },\n  });\n}\n\n// Specialized hooks for common use cases\nexport function useWorkers() {\n  return useUsers({\n    role: \"crew,worker,foreman\",\n    page: 1,\n    per_page: 100,\n  });\n}\n\nexport function useForemen() {\n  return useUsers({\n    role: \"foreman\",\n    page: 1,\n    per_page: 50,\n  });\n}\n\nexport function useProjectManagers() {\n  return useUsers({\n    role: \"pm\",\n    page: 1,\n    per_page: 50,\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-teams.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport {\n  teamsApi,\n  type Crew,\n  type PaginatedResponse,\n} from \"@/lib/api-client\";\n\n// Query keys\nexport const teamKeys = {\n  all: [\"teams\"] as const,\n  crews: () => [...teamKeys.all, \"crews\"] as const,\n  crew: (id: string) => [...teamKeys.all, \"crew\", id] as const,\n};\n\n// Hooks\nexport function useTeams() {\n  return useQuery({\n    queryKey: teamKeys.crews(),\n    queryFn: async () => {\n      const response = await fetch('/api/crews');\n      if (!response.ok) {\n        throw new Error('Failed to fetch crews');\n      }\n      const data = await response.json();\n      return data.crews || [];\n    },\n    staleTime: 30 * 1000, // 30 seconds - frequent updates for team changes\n  });\n}\n\nexport function useCrew(id: string) {\n  return useQuery({\n    queryKey: teamKeys.crew(id),\n    queryFn: () => teamsApi.getCrew(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000,\n  });\n}\n\nexport function useCreateCrew() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: Partial<Crew>) => teamsApi.createCrew(data),\n    onSuccess: (newCrew) => {\n      // Invalidate and refetch crews list\n      queryClient.invalidateQueries({ queryKey: teamKeys.crews() });\n\n      // Add the new crew to the cache\n      queryClient.setQueryData(teamKeys.crew(newCrew.id), newCrew);\n\n      toast.success(\"Team created successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to create team: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateCrew() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<Crew> }) =>\n      teamsApi.updateCrew(id, data),\n    onMutate: async ({ id, data }) => {\n      // Cancel any outgoing refetches\n      await queryClient.cancelQueries({ queryKey: teamKeys.crew(id) });\n\n      // Snapshot the previous value\n      const previousCrew = queryClient.getQueryData(teamKeys.crew(id));\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(teamKeys.crew(id), (old: Crew | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Return a context object with the snapshotted value\n      return { previousCrew };\n    },\n    onError: (error, { id }, context) => {\n      // If the mutation fails, use the context returned from onMutate to roll back\n      if (context?.previousCrew) {\n        queryClient.setQueryData(teamKeys.crew(id), context.previousCrew);\n      }\n      toast.error(`Failed to update team: ${error.message}`);\n    },\n    onSuccess: () => {\n      // Invalidate and refetch crews list\n      queryClient.invalidateQueries({ queryKey: teamKeys.crews() });\n      toast.success(\"Team updated successfully\");\n    },\n    onSettled: (data, error, { id }) => {\n      // Always refetch after error or success\n      queryClient.invalidateQueries({ queryKey: teamKeys.crew(id) });\n    },\n  });\n}\n\nexport function useDeleteCrew() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: string) => teamsApi.deleteCrew(id),\n    onSuccess: (_, deletedId) => {\n      // Remove from cache\n      queryClient.removeQueries({ queryKey: teamKeys.crew(deletedId) });\n\n      // Invalidate crews list\n      queryClient.invalidateQueries({ queryKey: teamKeys.crews() });\n\n      toast.success(\"Team deleted successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to delete team: ${error.message}`);\n    },\n  });\n}\n\n// Additional interfaces for project preparation\nexport interface ProjectUser {\n  id: string;\n  name: string;\n  email: string;\n  role: string;\n  assigned_at: string;\n  assigned_by: string;\n}\n\nexport interface GlobalTeam {\n  id: string;\n  name: string;\n  foreman_name?: string;\n  is_active: boolean;\n  project_count?: number;\n  specialization?: string;\n}\n\n// Additional hooks for project preparation\nexport function useGlobalTeams() {\n  return useQuery({\n    queryKey: ['global-teams'],\n    queryFn: async (): Promise<GlobalTeam[]> => {\n      const response = await fetch('/api/crews');\n      if (!response.ok) {\n        throw new Error('Failed to fetch global teams');\n      }\n      const data = await response.json();\n      const crews = data.crews || [];\n\n      // Transform to GlobalTeam format and count projects per team\n      const projectCounts: Record<string, number> = {};\n      crews.forEach((crew: any) => {\n        if (crew.project_id) {\n          projectCounts[crew.name] = (projectCounts[crew.name] || 0) + 1;\n        }\n      });\n\n      return crews.map((crew: any) => ({\n        id: crew.id,\n        name: crew.name,\n        foreman_name: crew.foreman?.full_name || crew.foreman_name,\n        is_active: crew.status === 'active',\n        project_count: projectCounts[crew.name] || 0,\n        specialization: 'mixed'\n      }));\n    },\n  });\n}\n\nexport function useProjectUsers(projectId: string) {\n  return useQuery({\n    queryKey: ['project-users', projectId],\n    queryFn: async (): Promise<ProjectUser[]> => {\n      try {\n        const response = await fetch(`/api/projects/${projectId}/users`);\n        if (!response.ok) {\n          if (response.status === 404) {\n            return []; // No users assigned yet\n          }\n          throw new Error('Failed to fetch project users');\n        }\n        const data = await response.json();\n        return data.users || [];\n      } catch (error) {\n        console.warn('Project users not available:', error);\n        return []; // Return empty array instead of mock data\n      }\n    },\n    enabled: !!projectId,\n  });\n}\n\nexport function useForemenUsers() {\n  return useQuery({\n    queryKey: ['foremen-users'],\n    queryFn: async () => {\n      const response = await fetch('/api/users?role=foreman&is_active=true');\n      if (!response.ok) {\n        // Try to get PM users as well if no foremen\n        const pmResponse = await fetch('/api/users?role=pm&is_active=true');\n        if (!pmResponse.ok) {\n          throw new Error('Failed to fetch users');\n        }\n        const pmData = await pmResponse.json();\n        return pmData.items || [];\n      }\n      const data = await response.json();\n\n      // If no foremen, get both foremen and PMs\n      if (data.items.length === 0) {\n        const allResponse = await fetch('/api/users?is_active=true');\n        if (!allResponse.ok) {\n          throw new Error('Failed to fetch users');\n        }\n        const allData = await allResponse.json();\n        return (allData.items || []).filter((user: any) =>\n          user.role === 'foreman' || user.role === 'pm'\n        );\n      }\n\n      return data.items || [];\n    },\n  });\n}\n\nexport function useCreateTeam() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (data: any) => {\n      const response = await fetch('/api/crews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to create team');\n      }\n\n      return response.json();\n    },\n    onSuccess: (data, variables) => {\n      if (variables.project_id) {\n        queryClient.invalidateQueries({ queryKey: ['project-teams', variables.project_id] });\n        queryClient.invalidateQueries({ queryKey: ['project-preparation', variables.project_id] });\n      }\n      queryClient.invalidateQueries({ queryKey: ['global-teams'] });\n      queryClient.invalidateQueries({ queryKey: teamKeys.crews() });\n      toast.success(data.message || 'Team created successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}\n\n// Specialized hooks\nexport function useProjectTeams(projectId: string) {\n  return useQuery({\n    queryKey: ['project-teams', projectId],\n    queryFn: async () => {\n      const response = await fetch(`/api/crews?project_id=${projectId}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch project teams');\n      }\n      const data = await response.json();\n      return data.crews || [];\n    },\n    enabled: !!projectId,\n  });\n}\n\nexport function useAvailableTeams() {\n  const { data: crews, ...rest } = useTeams();\n\n  return {\n    ...rest,\n    data: crews?.filter(crew => !crew.project_id) || [],\n  };\n}\n\nexport function useUpdateTeam() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async ({ id, data }: { id: string; data: any }) => {\n      const response = await fetch(`/api/crews/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to update team');\n      }\n\n      return response.json();\n    },\n    onSuccess: (data, variables) => {\n      queryClient.invalidateQueries({ queryKey: ['project-teams'] });\n      queryClient.invalidateQueries({ queryKey: ['global-teams'] });\n      queryClient.invalidateQueries({ queryKey: teamKeys.crews() });\n      queryClient.invalidateQueries({ queryKey: ['project-preparation'] });\n      toast.success(data.message || 'Team updated successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}\n\nexport function useDeleteTeam() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (id: string) => {\n      const response = await fetch(`/api/crews/${id}`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to delete team');\n      }\n\n      return response.json();\n    },\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({ queryKey: ['project-teams'] });\n      queryClient.invalidateQueries({ queryKey: ['global-teams'] });\n      queryClient.invalidateQueries({ queryKey: teamKeys.crews() });\n      queryClient.invalidateQueries({ queryKey: ['project-preparation'] });\n      toast.success(data.message || 'Team deleted successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 859, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-projects.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport {\n  projectsApi,\n  type Project,\n  type ProjectFilters,\n  type CreateProjectRequest,\n  type UpdateProjectRequest,\n  type PaginatedResponse,\n} from \"@/lib/api-client\";\n\n// Query keys\nexport const projectKeys = {\n  all: [\"projects\"] as const,\n  lists: () => [...projectKeys.all, \"list\"] as const,\n  list: (filters: ProjectFilters) => [...projectKeys.lists(), filters] as const,\n  details: () => [...projectKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...projectKeys.details(), id] as const,\n};\n\n// Hooks\nexport function useProjects(filters?: ProjectFilters) {\n  return useQuery({\n    queryKey: projectKeys.list(filters || {}),\n    queryFn: () => projectsApi.getProjects(filters),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useProject(id: string) {\n  return useQuery({\n    queryKey: projectKeys.detail(id),\n    queryFn: () => projectsApi.getProject(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useCreateProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateProjectRequest) => projectsApi.createProject(data),\n    onSuccess: (newProject) => {\n      // Invalidate and refetch projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n\n      // Add the new project to the cache\n      queryClient.setQueryData(projectKeys.detail(newProject.id), newProject);\n\n      toast.success(\"Project created successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to create project: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: UpdateProjectRequest }) =>\n      projectsApi.updateProject(id, data),\n    onMutate: async ({ id, data }) => {\n      // Cancel any outgoing refetches\n      await queryClient.cancelQueries({ queryKey: projectKeys.detail(id) });\n\n      // Snapshot the previous value\n      const previousProject = queryClient.getQueryData(projectKeys.detail(id));\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(projectKeys.detail(id), (old: Project | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Return a context object with the snapshotted value\n      return { previousProject };\n    },\n    onError: (error, { id }, context) => {\n      // If the mutation fails, use the context returned from onMutate to roll back\n      if (context?.previousProject) {\n        queryClient.setQueryData(projectKeys.detail(id), context.previousProject);\n      }\n      toast.error(`Failed to update project: ${error.message}`);\n    },\n    onSuccess: (updatedProject) => {\n      // Invalidate and refetch projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      toast.success(\"Project updated successfully\");\n    },\n    onSettled: (data, error, { id }) => {\n      // Always refetch after error or success\n      queryClient.invalidateQueries({ queryKey: projectKeys.detail(id) });\n    },\n  });\n}\n\nexport function useDeleteProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: string) => projectsApi.deleteProject(id),\n    onSuccess: (_, deletedId) => {\n      // Remove from cache\n      queryClient.removeQueries({ queryKey: projectKeys.detail(deletedId) });\n\n      // Invalidate projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n\n      toast.success(\"Project deleted successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to delete project: ${error.message}`);\n    },\n  });\n}\n\n// Optimistic mutations for better UX\nexport function useOptimisticProjectUpdate() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<Project> }) =>\n      projectsApi.updateProject(id, data),\n    onMutate: async ({ id, data }) => {\n      await queryClient.cancelQueries({ queryKey: projectKeys.detail(id) });\n\n      const previousProject = queryClient.getQueryData(projectKeys.detail(id));\n\n      queryClient.setQueryData(projectKeys.detail(id), (old: Project | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Also update in lists if present\n      queryClient.setQueriesData(\n        { queryKey: projectKeys.lists() },\n        (old: PaginatedResponse<Project> | undefined) => {\n          if (!old) return old;\n\n          return {\n            ...old,\n            items: old.items.map((project) =>\n              project.id === id ? { ...project, ...data } : project\n            ),\n          };\n        }\n      );\n\n      return { previousProject };\n    },\n    onError: (error, { id }, context) => {\n      if (context?.previousProject) {\n        queryClient.setQueryData(projectKeys.detail(id), context.previousProject);\n      }\n      // Invalidate lists to revert optimistic updates\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      toast.error(`Failed to update project: ${error.message}`);\n    },\n    onSuccess: () => {\n      toast.success(\"Project updated successfully\");\n    },\n  });\n}\n\n// Project statistics hook\nexport interface ProjectStats {\n  progress: {\n    totalLength: number;\n    completedLength: number;\n    progressPercentage: number;\n    workEntries: number;\n    pendingApprovals: number;\n    teamMembers: number;\n    materialsCount: number;\n  };\n  phase: {\n    currentPhase: number;\n    totalPhases: number;\n    phaseName: string;\n    phaseProgress: number;\n  };\n  financial: {\n    projectBudget: number;\n    totalSpent: number;\n    spentPercentage: number;\n    remainingBudget: number;\n  };\n}\n\nexport function useProjectStats(projectId: string) {\n  return useQuery({\n    queryKey: [...projectKeys.detail(projectId), \"stats\"],\n    queryFn: async (): Promise<ProjectStats> => {\n      const response = await fetch(`/api/projects/${projectId}/stats`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch project statistics');\n      }\n      return response.json();\n    },\n    staleTime: 2 * 60 * 1000, // 2 minutes - stats change more frequently\n    enabled: !!projectId,\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1179, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/app/%28dashboard%29/dashboard/teams/new/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useRouter } from \"next/navigation\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { ArrowLeft, Users, Save, X } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\n\nimport { useUsers } from \"@/hooks/use-users\";\nimport { useCreateCrew } from \"@/hooks/use-teams\";\nimport { useProjects } from \"@/hooks/use-projects\";\n\n// Validation schema for creating teams\nconst createTeamSchema = z.object({\n  name: z.string().min(1, \"Team name is required\"),\n  description: z.string().optional(),\n  foreman_user_id: z.string().optional(),\n  project_id: z.string().optional(),\n});\n\ntype CreateTeamFormData = z.infer<typeof createTeamSchema>;\n\nexport default function NewTeamPage() {\n  const router = useRouter();\n  const createCrew = useCreateCrew();\n\n  const createTeamForm = useForm<CreateTeamFormData>({\n    resolver: zodResolver(createTeamSchema),\n    defaultValues: {\n      name: \"\",\n      description: \"\",\n      foreman_user_id: \"\",\n      project_id: \"\",\n    },\n  });\n\n  const { data: usersResponse, isLoading: usersLoading } = useUsers({\n    page: 1,\n    per_page: 100\n  });\n  const { data: projectsResponse, isLoading: projectsLoading } = useProjects({\n    page: 1,\n    per_page: 50\n  });\n\n  const users = usersResponse?.items || [];\n  const projects = projectsResponse?.items || [];\n\n  // Filter users by role for foreman selection\n  const foremen = users.filter(user => [\"foreman\", \"pm\", \"admin\"].includes(user.role));\n\n  const handleCreateTeam = async (data: CreateTeamFormData) => {\n    try {\n      const teamData = {\n        name: data.name,\n        description: data.description,\n        foreman_user_id: data.foreman_user_id === \"none\" ? undefined : data.foreman_user_id,\n        project_id: data.project_id === \"none\" ? undefined : data.project_id,\n      };\n\n      const createdTeam = await createCrew.mutateAsync(teamData);\n\n      // Redirect to team members management page after successful creation\n      router.push(`/dashboard/teams/${createdTeam.id}/members`);\n    } catch (error) {\n      console.error(\"Failed to create team:\", error);\n      // If members page doesn't exist yet, fallback to teams list\n      router.push(\"/dashboard/teams\");\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => router.back()}\n            className=\"flex items-center space-x-2\"\n          >\n            <ArrowLeft className=\"h-4 w-4\" />\n            <span>Back</span>\n          </Button>\n          <div>\n            <h1 className=\"text-3xl font-bold tracking-tight\">Create New Team</h1>\n            <p className=\"text-muted-foreground\">\n              Set up a new work crew with basic information\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-2xl mx-auto\">\n        {/* Team Information */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Users className=\"h-5 w-5\" />\n              <span>Team Information</span>\n            </CardTitle>\n            <CardDescription>\n              Basic team details and leadership assignment\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Form {...createTeamForm}>\n              <form onSubmit={createTeamForm.handleSubmit(handleCreateTeam)} className=\"space-y-4\">\n                <FormField\n                  control={createTeamForm.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Team Name *</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"e.g., Installation Team Alpha\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={createTeamForm.control}\n                  name=\"description\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Description</FormLabel>\n                      <FormControl>\n                        <Textarea\n                          placeholder=\"Brief description of team purpose and responsibilities\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={createTeamForm.control}\n                  name=\"foreman_user_id\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Team Leader / Foreman</FormLabel>\n                      <Select onValueChange={field.onChange} value={field.value}>\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select team leader\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          <SelectItem value=\"none\">No leader assigned</SelectItem>\n                          {foremen.map((user) => (\n                            <SelectItem key={user.id} value={user.id}>\n                              {user.full_name} ({user.role})\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={createTeamForm.control}\n                  name=\"project_id\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Assign to Project</FormLabel>\n                      <Select onValueChange={field.onChange} value={field.value}>\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select project (optional)\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          <SelectItem value=\"none\">No project assigned</SelectItem>\n                          {projectsLoading ? (\n                            <SelectItem value=\"loading\" disabled>Loading projects...</SelectItem>\n                          ) : (\n                            projects.map((project) => (\n                              <SelectItem key={project.id} value={project.id}>\n                                {project.name}\n                              </SelectItem>\n                            ))\n                          )}\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <div className=\"flex justify-end space-x-2 pt-4\">\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    onClick={() => router.back()}\n                  >\n                    <X className=\"mr-2 h-4 w-4\" />\n                    Cancel\n                  </Button>\n                  <Button type=\"submit\" disabled={createCrew.isPending}>\n                    {createCrew.isPending ? (\n                      <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-background border-t-transparent mr-2\" />\n                    ) : (\n                      <Save className=\"mr-2 h-4 w-4\" />\n                    )}\n                    Create Team\n                  </Button>\n                </div>\n              </form>\n            </Form>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}