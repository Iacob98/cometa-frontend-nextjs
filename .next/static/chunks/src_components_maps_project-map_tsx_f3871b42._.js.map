{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/maps/project-map.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useCallback, useMemo } from \"react\";\nimport { MapContainer, TileLayer, LayersControl } from \"react-leaflet\";\nimport dynamic from \"next/dynamic\";\nimport L from \"leaflet\";\nimport {\n  Map,\n  Layers,\n  MapPin,\n  Ruler,\n  Navigation,\n  Settings,\n  Eye,\n  EyeOff,\n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  useProjectGeospatialFeatures,\n  useProjectGeoRoutes,\n  useProjectGeoLayers,\n  useProjectGeoMeasurements,\n} from \"@/hooks/use-geospatial\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport type { UUID, GeospatialFeature } from \"@/types\";\n\n// Dynamic imports to avoid SSR issues with Leaflet\nconst MapBase = dynamic(() => import(\"./map-base\"), { ssr: false });\nconst FeatureLayer = dynamic(() => import(\"./feature-layer\"), { ssr: false });\nconst GPSTracker = dynamic(() => import(\"./gps-tracker\"), { ssr: false });\nconst MeasurementTools = dynamic(() => import(\"./measurement-tools\"), { ssr: false });\n\ninterface ProjectMapProps {\n  projectId: UUID;\n  height?: string;\n  width?: string;\n  className?: string;\n  showControls?: boolean;\n  showMeasurementTools?: boolean;\n  showGPSTracking?: boolean;\n  defaultCenter?: [number, number];\n  defaultZoom?: number;\n}\n\ninterface LayerVisibility {\n  features: boolean;\n  routes: boolean;\n  measurements: boolean;\n  gpsTracking: boolean;\n  annotations: boolean;\n}\n\ninterface MapSettings {\n  tileLayer: \"osm\" | \"satellite\" | \"terrain\";\n  showGrid: boolean;\n  showScale: boolean;\n  clusteredMarkers: boolean;\n}\n\nconst TILE_LAYERS = {\n  osm: {\n    name: \"OpenStreetMap\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n  },\n  satellite: {\n    name: \"Satellite\",\n    url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n    attribution: '&copy; <a href=\"https://www.esri.com/\">Esri</a>',\n  },\n  terrain: {\n    name: \"Terrain\",\n    url: \"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\",\n    attribution: '&copy; <a href=\"https://opentopomap.org/\">OpenTopoMap</a>',\n  },\n};\n\nexport function ProjectMap({\n  projectId,\n  height = \"600px\",\n  width = \"100%\",\n  className,\n  showControls = true,\n  showMeasurementTools = true,\n  showGPSTracking = true,\n  defaultCenter = [52.52, 13.405],\n  defaultZoom = 13,\n}: ProjectMapProps) {\n  const { user } = useAuth();\n  const [selectedFeatureId, setSelectedFeatureId] = useState<string | undefined>();\n  const [layerVisibility, setLayerVisibility] = useState<LayerVisibility>({\n    features: true,\n    routes: true,\n    measurements: false,\n    gpsTracking: false,\n    annotations: false,\n  });\n  const [mapSettings, setMapSettings] = useState<MapSettings>({\n    tileLayer: \"osm\",\n    showGrid: false,\n    showScale: true,\n    clusteredMarkers: false,\n  });\n  const [showControlPanel, setShowControlPanel] = useState(false);\n  const [mapInstance, setMapInstance] = useState<L.Map | null>(null);\n\n  // Data queries\n  const { data: featuresData, isLoading: featuresLoading } = useProjectGeospatialFeatures(projectId);\n  const { data: routesData, isLoading: routesLoading } = useProjectGeoRoutes(projectId);\n  const { data: measurementsData, isLoading: measurementsLoading } = useProjectGeoMeasurements(projectId);\n\n  // Team members for GPS tracking\n  const teamMembers = useMemo(() => {\n    // This would come from team data in a real implementation\n    return [];\n  }, []);\n\n  const handleFeatureClick = useCallback((feature: GeospatialFeature) => {\n    setSelectedFeatureId(feature.id);\n  }, []);\n\n  const handleFeatureEdit = useCallback((feature: GeospatialFeature) => {\n    // TODO: Open feature edit dialog\n    console.log(\"Edit feature:\", feature);\n  }, []);\n\n  const toggleLayer = (layer: keyof LayerVisibility) => {\n    setLayerVisibility(prev => ({ ...prev, [layer]: !prev[layer] }));\n  };\n\n  const handleMapReady = useCallback((map: L.Map) => {\n    setMapInstance(map);\n\n    // Add scale control\n    if (mapSettings.showScale) {\n      L.control.scale().addTo(map);\n    }\n  }, [mapSettings.showScale]);\n\n  const getLoadingMessage = () => {\n    const loading = [];\n    if (featuresLoading) loading.push(\"features\");\n    if (routesLoading) loading.push(\"routes\");\n    if (measurementsLoading) loading.push(\"measurements\");\n    return loading.length > 0 ? `Loading ${loading.join(\", \")}...` : null;\n  };\n\n  const getDataCounts = () => {\n    return {\n      features: featuresData?.total || 0,\n      routes: routesData?.total || 0,\n      measurements: measurementsData?.total || 0,\n    };\n  };\n\n  const dataCounts = getDataCounts();\n  const loadingMessage = getLoadingMessage();\n\n  return (\n    <div className={cn(\"relative\", className)} style={{ height, width }}>\n      {/* Map Container */}\n      <MapBase\n        center={defaultCenter}\n        zoom={defaultZoom}\n        height={height}\n        width={width}\n        onMapReady={handleMapReady}\n      >\n        {/* Tile Layer */}\n        <TileLayer\n          attribution={TILE_LAYERS[mapSettings.tileLayer].attribution}\n          url={TILE_LAYERS[mapSettings.tileLayer].url}\n        />\n\n        {/* Geospatial Features */}\n        {layerVisibility.features && featuresData?.data && (\n          <FeatureLayer\n            features={featuresData.data}\n            onFeatureClick={handleFeatureClick}\n            onFeatureEdit={handleFeatureEdit}\n            selectedFeatureId={selectedFeatureId}\n            editable={user?.role === \"admin\" || user?.role === \"pm\"}\n          />\n        )}\n\n        {/* GPS Tracking */}\n        {layerVisibility.gpsTracking && showGPSTracking && (\n          <GPSTracker\n            trackCurrentUser={true}\n            trackUsers={teamMembers}\n            enableTracking={true}\n            showAccuracy={true}\n          />\n        )}\n\n        {/* Measurement Tools */}\n        {showMeasurementTools && (\n          <MeasurementTools\n            projectId={projectId}\n            onMeasurementSave={(measurement) => {\n              console.log(\"Measurement saved:\", measurement);\n            }}\n          />\n        )}\n      </MapBase>\n\n      {/* Control Panel */}\n      {showControls && (\n        <>\n          {/* Toggle Button */}\n          <Button\n            size=\"sm\"\n            variant=\"secondary\"\n            className=\"absolute top-4 right-4 z-[1000]\"\n            onClick={() => setShowControlPanel(!showControlPanel)}\n          >\n            <Settings className=\"w-4 h-4 mr-1\" />\n            {showControlPanel ? \"Hide\" : \"Controls\"}\n          </Button>\n\n          {/* Control Panel */}\n          {showControlPanel && (\n            <Card className=\"absolute top-16 right-4 z-[1000] w-64\">\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm flex items-center gap-2\">\n                  <Layers className=\"w-4 h-4\" />\n                  Map Controls\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                {/* Layer Visibility */}\n                <div className=\"space-y-2\">\n                  <Label className=\"text-xs font-medium\">Layers</Label>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        <MapPin className=\"w-3 h-3\" />\n                        <span className=\"text-xs\">Features</span>\n                        <Badge variant=\"secondary\" className=\"text-xs\">\n                          {dataCounts.features}\n                        </Badge>\n                      </div>\n                      <Switch\n                        checked={layerVisibility.features}\n                        onCheckedChange={() => toggleLayer(\"features\")}\n                        size=\"sm\"\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        <Navigation className=\"w-3 h-3\" />\n                        <span className=\"text-xs\">Routes</span>\n                        <Badge variant=\"secondary\" className=\"text-xs\">\n                          {dataCounts.routes}\n                        </Badge>\n                      </div>\n                      <Switch\n                        checked={layerVisibility.routes}\n                        onCheckedChange={() => toggleLayer(\"routes\")}\n                        size=\"sm\"\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        <Ruler className=\"w-3 h-3\" />\n                        <span className=\"text-xs\">Measurements</span>\n                        <Badge variant=\"secondary\" className=\"text-xs\">\n                          {dataCounts.measurements}\n                        </Badge>\n                      </div>\n                      <Switch\n                        checked={layerVisibility.measurements}\n                        onCheckedChange={() => toggleLayer(\"measurements\")}\n                        size=\"sm\"\n                      />\n                    </div>\n\n                    {showGPSTracking && (\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-2\">\n                          <MapPin className=\"w-3 h-3\" />\n                          <span className=\"text-xs\">GPS Tracking</span>\n                        </div>\n                        <Switch\n                          checked={layerVisibility.gpsTracking}\n                          onCheckedChange={() => toggleLayer(\"gpsTracking\")}\n                          size=\"sm\"\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Map Settings */}\n                <div className=\"space-y-2\">\n                  <Label className=\"text-xs font-medium\">Map Style</Label>\n                  <Select\n                    value={mapSettings.tileLayer}\n                    onValueChange={(value: keyof typeof TILE_LAYERS) =>\n                      setMapSettings(prev => ({ ...prev, tileLayer: value }))\n                    }\n                  >\n                    <SelectTrigger className=\"h-8\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {Object.entries(TILE_LAYERS).map(([key, layer]) => (\n                        <SelectItem key={key} value={key}>\n                          {layer.name}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                {/* Map Options */}\n                <div className=\"space-y-2\">\n                  <Label className=\"text-xs font-medium\">Options</Label>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-xs\">Show Scale</span>\n                      <Switch\n                        checked={mapSettings.showScale}\n                        onCheckedChange={(checked) =>\n                          setMapSettings(prev => ({ ...prev, showScale: checked }))\n                        }\n                        size=\"sm\"\n                      />\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-xs\">Cluster Markers</span>\n                      <Switch\n                        checked={mapSettings.clusteredMarkers}\n                        onCheckedChange={(checked) =>\n                          setMapSettings(prev => ({ ...prev, clusteredMarkers: checked }))\n                        }\n                        size=\"sm\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </>\n      )}\n\n      {/* Loading Indicator */}\n      {loadingMessage && (\n        <div className=\"absolute bottom-4 left-4 z-[1000]\">\n          <Badge variant=\"secondary\" className=\"text-xs\">\n            {loadingMessage}\n          </Badge>\n        </div>\n      )}\n\n      {/* Map Info */}\n      <div className=\"absolute bottom-4 right-4 z-[1000]\">\n        <Card className=\"p-2\">\n          <div className=\"text-xs space-y-1\">\n            <div className=\"font-medium\">Project Map</div>\n            <div className=\"text-muted-foreground\">\n              {dataCounts.features} features • {dataCounts.routes} routes\n            </div>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectMap;"],"names":[],"mappings":"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","debugId":null}}]
}