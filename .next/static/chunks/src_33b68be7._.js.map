{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-projects.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport {\n  projectsApi,\n  type Project,\n  type ProjectFilters,\n  type CreateProjectRequest,\n  type UpdateProjectRequest,\n  type PaginatedResponse,\n} from \"@/lib/api-client\";\n\n// Query keys\nexport const projectKeys = {\n  all: [\"projects\"] as const,\n  lists: () => [...projectKeys.all, \"list\"] as const,\n  list: (filters: ProjectFilters) => [...projectKeys.lists(), filters] as const,\n  details: () => [...projectKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...projectKeys.details(), id] as const,\n};\n\n// Hooks\nexport function useProjects(filters?: ProjectFilters) {\n  return useQuery({\n    queryKey: projectKeys.list(filters || {}),\n    queryFn: () => projectsApi.getProjects(filters),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useProject(id: string) {\n  return useQuery({\n    queryKey: projectKeys.detail(id),\n    queryFn: () => projectsApi.getProject(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useCreateProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateProjectRequest) => projectsApi.createProject(data),\n    onSuccess: (newProject) => {\n      // Invalidate and refetch projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n\n      // Add the new project to the cache\n      queryClient.setQueryData(projectKeys.detail(newProject.id), newProject);\n\n      toast.success(\"Project created successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to create project: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: UpdateProjectRequest }) =>\n      projectsApi.updateProject(id, data),\n    onMutate: async ({ id, data }) => {\n      // Cancel any outgoing refetches\n      await queryClient.cancelQueries({ queryKey: projectKeys.detail(id) });\n\n      // Snapshot the previous value\n      const previousProject = queryClient.getQueryData(projectKeys.detail(id));\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(projectKeys.detail(id), (old: Project | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Return a context object with the snapshotted value\n      return { previousProject };\n    },\n    onError: (error, { id }, context) => {\n      // If the mutation fails, use the context returned from onMutate to roll back\n      if (context?.previousProject) {\n        queryClient.setQueryData(projectKeys.detail(id), context.previousProject);\n      }\n      toast.error(`Failed to update project: ${error.message}`);\n    },\n    onSuccess: (updatedProject) => {\n      // Invalidate and refetch projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      toast.success(\"Project updated successfully\");\n    },\n    onSettled: (data, error, { id }) => {\n      // Always refetch after error or success\n      queryClient.invalidateQueries({ queryKey: projectKeys.detail(id) });\n    },\n  });\n}\n\nexport function useDeleteProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: string) => projectsApi.deleteProject(id),\n    onSuccess: (_, deletedId) => {\n      // Remove from cache\n      queryClient.removeQueries({ queryKey: projectKeys.detail(deletedId) });\n\n      // Invalidate projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n\n      toast.success(\"Project deleted successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to delete project: ${error.message}`);\n    },\n  });\n}\n\n// Optimistic mutations for better UX\nexport function useOptimisticProjectUpdate() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<Project> }) =>\n      projectsApi.updateProject(id, data),\n    onMutate: async ({ id, data }) => {\n      await queryClient.cancelQueries({ queryKey: projectKeys.detail(id) });\n\n      const previousProject = queryClient.getQueryData(projectKeys.detail(id));\n\n      queryClient.setQueryData(projectKeys.detail(id), (old: Project | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Also update in lists if present\n      queryClient.setQueriesData(\n        { queryKey: projectKeys.lists() },\n        (old: PaginatedResponse<Project> | undefined) => {\n          if (!old) return old;\n\n          return {\n            ...old,\n            items: old.items.map((project) =>\n              project.id === id ? { ...project, ...data } : project\n            ),\n          };\n        }\n      );\n\n      return { previousProject };\n    },\n    onError: (error, { id }, context) => {\n      if (context?.previousProject) {\n        queryClient.setQueryData(projectKeys.detail(id), context.previousProject);\n      }\n      // Invalidate lists to revert optimistic updates\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      toast.error(`Failed to update project: ${error.message}`);\n    },\n    onSuccess: () => {\n      toast.success(\"Project updated successfully\");\n    },\n  });\n}\n\n// Project statistics hook\nexport interface ProjectStats {\n  progress: {\n    totalLength: number;\n    completedLength: number;\n    progressPercentage: number;\n    workEntries: number;\n    pendingApprovals: number;\n    teamMembers: number;\n    materialsCount: number;\n  };\n  phase: {\n    currentPhase: number;\n    totalPhases: number;\n    phaseName: string;\n    phaseProgress: number;\n  };\n  financial: {\n    projectBudget: number;\n    totalSpent: number;\n    spentPercentage: number;\n    remainingBudget: number;\n  };\n}\n\nexport function useProjectStats(projectId: string) {\n  return useQuery({\n    queryKey: [...projectKeys.detail(projectId), \"stats\"],\n    queryFn: async (): Promise<ProjectStats> => {\n      const response = await fetch(`/api/projects/${projectId}/stats`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch project statistics');\n      }\n      return response.json();\n    },\n    staleTime: 2 * 60 * 1000, // 2 minutes - stats change more frequently\n    enabled: !!projectId,\n  });\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;;;;;AAUO,MAAM,cAAc;IACzB,KAAK;QAAC;KAAW;IACjB,OAAO,IAAM;eAAI,YAAY,GAAG;YAAE;SAAO;IACzC,MAAM,CAAC,UAA4B;eAAI,YAAY,KAAK;YAAI;SAAQ;IACpE,SAAS,IAAM;eAAI,YAAY,GAAG;YAAE;SAAS;IAC7C,QAAQ,CAAC,KAAe;eAAI,YAAY,OAAO;YAAI;SAAG;AACxD;AAGO,SAAS,YAAY,OAAwB;;IAClD,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,YAAY,IAAI,CAAC,WAAW,CAAC;QACvC,OAAO;oCAAE,IAAM,6IAAW,CAAC,WAAW,CAAC;;QACvC,WAAW,IAAI,KAAK;IACtB;AACF;GANgB;;QACP,0LAAQ;;;AAOV,SAAS,WAAW,EAAU;;IACnC,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,YAAY,MAAM,CAAC;QAC7B,OAAO;mCAAE,IAAM,6IAAW,CAAC,UAAU,CAAC;;QACtC,SAAS,CAAC,CAAC;QACX,WAAW,IAAI,KAAK;IACtB;AACF;IAPgB;;QACP,0LAAQ;;;AAQV,SAAS;;IACd,MAAM,cAAc,IAAA,2MAAc;IAElC,OAAO,IAAA,gMAAW,EAAC;QACjB,UAAU;4CAAE,CAAC,OAA+B,6IAAW,CAAC,aAAa,CAAC;;QACtE,SAAS;4CAAE,CAAC;gBACV,uCAAuC;gBACvC,YAAY,iBAAiB,CAAC;oBAAE,UAAU,YAAY,KAAK;gBAAG;gBAE9D,mCAAmC;gBACnC,YAAY,YAAY,CAAC,YAAY,MAAM,CAAC,WAAW,EAAE,GAAG;gBAE5D,oJAAK,CAAC,OAAO,CAAC;YAChB;;QACA,OAAO;4CAAE,CAAC;gBACR,oJAAK,CAAC,KAAK,CAAC,AAAC,6BAA0C,OAAd,MAAM,OAAO;YACxD;;IACF;AACF;IAlBgB;;QACM,2MAAc;QAE3B,gMAAW;;;AAiBb,SAAS;;IACd,MAAM,cAAc,IAAA,2MAAc;IAElC,OAAO,IAAA,gMAAW,EAAC;QACjB,UAAU;4CAAE;oBAAC,EAAE,EAAE,EAAE,IAAI,EAA8C;uBACnE,6IAAW,CAAC,aAAa,CAAC,IAAI;;;QAChC,QAAQ;4CAAE;oBAAO,EAAE,EAAE,EAAE,IAAI,EAAE;gBAC3B,gCAAgC;gBAChC,MAAM,YAAY,aAAa,CAAC;oBAAE,UAAU,YAAY,MAAM,CAAC;gBAAI;gBAEnE,8BAA8B;gBAC9B,MAAM,kBAAkB,YAAY,YAAY,CAAC,YAAY,MAAM,CAAC;gBAEpE,yCAAyC;gBACzC,YAAY,YAAY,CAAC,YAAY,MAAM,CAAC;oDAAK,CAAC;wBAChD,IAAI,CAAC,KAAK,OAAO;wBACjB,OAAO;4BAAE,GAAG,GAAG;4BAAE,GAAG,IAAI;wBAAC;oBAC3B;;gBAEA,qDAAqD;gBACrD,OAAO;oBAAE;gBAAgB;YAC3B;;QACA,OAAO;4CAAE,CAAC,cAAe;oBAAR,EAAE,EAAE,EAAE;gBACrB,6EAA6E;gBAC7E,IAAI,oBAAA,8BAAA,QAAS,eAAe,EAAE;oBAC5B,YAAY,YAAY,CAAC,YAAY,MAAM,CAAC,KAAK,QAAQ,eAAe;gBAC1E;gBACA,oJAAK,CAAC,KAAK,CAAC,AAAC,6BAA0C,OAAd,MAAM,OAAO;YACxD;;QACA,SAAS;4CAAE,CAAC;gBACV,uCAAuC;gBACvC,YAAY,iBAAiB,CAAC;oBAAE,UAAU,YAAY,KAAK;gBAAG;gBAC9D,oJAAK,CAAC,OAAO,CAAC;YAChB;;QACA,SAAS;4CAAE,CAAC,MAAM;oBAAO,EAAE,EAAE,EAAE;gBAC7B,wCAAwC;gBACxC,YAAY,iBAAiB,CAAC;oBAAE,UAAU,YAAY,MAAM,CAAC;gBAAI;YACnE;;IACF;AACF;IAvCgB;;QACM,2MAAc;QAE3B,gMAAW;;;AAsCb,SAAS;;IACd,MAAM,cAAc,IAAA,2MAAc;IAElC,OAAO,IAAA,gMAAW,EAAC;QACjB,UAAU;4CAAE,CAAC,KAAe,6IAAW,CAAC,aAAa,CAAC;;QACtD,SAAS;4CAAE,CAAC,GAAG;gBACb,oBAAoB;gBACpB,YAAY,aAAa,CAAC;oBAAE,UAAU,YAAY,MAAM,CAAC;gBAAW;gBAEpE,2BAA2B;gBAC3B,YAAY,iBAAiB,CAAC;oBAAE,UAAU,YAAY,KAAK;gBAAG;gBAE9D,oJAAK,CAAC,OAAO,CAAC;YAChB;;QACA,OAAO;4CAAE,CAAC;gBACR,oJAAK,CAAC,KAAK,CAAC,AAAC,6BAA0C,OAAd,MAAM,OAAO;YACxD;;IACF;AACF;IAlBgB;;QACM,2MAAc;QAE3B,gMAAW;;;AAkBb,SAAS;;IACd,MAAM,cAAc,IAAA,2MAAc;IAElC,OAAO,IAAA,gMAAW,EAAC;QACjB,UAAU;sDAAE;oBAAC,EAAE,EAAE,EAAE,IAAI,EAA0C;uBAC/D,6IAAW,CAAC,aAAa,CAAC,IAAI;;;QAChC,QAAQ;sDAAE;oBAAO,EAAE,EAAE,EAAE,IAAI,EAAE;gBAC3B,MAAM,YAAY,aAAa,CAAC;oBAAE,UAAU,YAAY,MAAM,CAAC;gBAAI;gBAEnE,MAAM,kBAAkB,YAAY,YAAY,CAAC,YAAY,MAAM,CAAC;gBAEpE,YAAY,YAAY,CAAC,YAAY,MAAM,CAAC;8DAAK,CAAC;wBAChD,IAAI,CAAC,KAAK,OAAO;wBACjB,OAAO;4BAAE,GAAG,GAAG;4BAAE,GAAG,IAAI;wBAAC;oBAC3B;;gBAEA,kCAAkC;gBAClC,YAAY,cAAc,CACxB;oBAAE,UAAU,YAAY,KAAK;gBAAG;8DAChC,CAAC;wBACC,IAAI,CAAC,KAAK,OAAO;wBAEjB,OAAO;4BACL,GAAG,GAAG;4BACN,OAAO,IAAI,KAAK,CAAC,GAAG;0EAAC,CAAC,UACpB,QAAQ,EAAE,KAAK,KAAK;wCAAE,GAAG,OAAO;wCAAE,GAAG,IAAI;oCAAC,IAAI;;wBAElD;oBACF;;gBAGF,OAAO;oBAAE;gBAAgB;YAC3B;;QACA,OAAO;sDAAE,CAAC,cAAe;oBAAR,EAAE,EAAE,EAAE;gBACrB,IAAI,oBAAA,8BAAA,QAAS,eAAe,EAAE;oBAC5B,YAAY,YAAY,CAAC,YAAY,MAAM,CAAC,KAAK,QAAQ,eAAe;gBAC1E;gBACA,gDAAgD;gBAChD,YAAY,iBAAiB,CAAC;oBAAE,UAAU,YAAY,KAAK;gBAAG;gBAC9D,oJAAK,CAAC,KAAK,CAAC,AAAC,6BAA0C,OAAd,MAAM,OAAO;YACxD;;QACA,SAAS;sDAAE;gBACT,oJAAK,CAAC,OAAO,CAAC;YAChB;;IACF;AACF;IA7CgB;;QACM,2MAAc;QAE3B,gMAAW;;;AAqEb,SAAS,gBAAgB,SAAiB;;IAC/C,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU;eAAI,YAAY,MAAM,CAAC;YAAY;SAAQ;QACrD,OAAO;wCAAE;gBACP,MAAM,WAAW,MAAM,MAAM,AAAC,iBAA0B,OAAV,WAAU;gBACxD,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM;gBAClB;gBACA,OAAO,SAAS,IAAI;YACtB;;QACA,WAAW,IAAI,KAAK;QACpB,SAAS,CAAC,CAAC;IACb;AACF;IAbgB;;QACP,0LAAQ","debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-users.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport {\n  usersApi,\n  type User,\n  type PaginatedResponse,\n} from \"@/lib/api-client\";\n\n// Query keys\nexport const userKeys = {\n  all: [\"users\"] as const,\n  lists: () => [...userKeys.all, \"list\"] as const,\n  list: (filters: any) => [...userKeys.lists(), filters] as const,\n  details: () => [...userKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...userKeys.details(), id] as const,\n};\n\n// Hooks\nexport function useUsers(filters?: { role?: string; page?: number; per_page?: number }) {\n  return useQuery({\n    queryKey: userKeys.list(filters || {}),\n    queryFn: () => usersApi.getUsers(filters),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useUser(id: string) {\n  return useQuery({\n    queryKey: userKeys.detail(id),\n    queryFn: () => usersApi.getUser(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000,\n  });\n}\n\nexport function useCreateUser() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: Partial<User>) => usersApi.createUser(data),\n    onSuccess: (newUser) => {\n      // Invalidate and refetch users list\n      queryClient.invalidateQueries({ queryKey: userKeys.lists() });\n\n      // Add the new user to the cache\n      queryClient.setQueryData(userKeys.detail(newUser.id), newUser);\n\n      toast.success(\"User created successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to create user: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateUser() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<User> }) =>\n      usersApi.updateUser(id, data),\n    onMutate: async ({ id, data }) => {\n      // Cancel any outgoing refetches\n      await queryClient.cancelQueries({ queryKey: userKeys.detail(id) });\n\n      // Snapshot the previous value\n      const previousUser = queryClient.getQueryData(userKeys.detail(id));\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(userKeys.detail(id), (old: User | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Return a context object with the snapshotted value\n      return { previousUser };\n    },\n    onError: (error, { id }, context) => {\n      // If the mutation fails, use the context returned from onMutate to roll back\n      if (context?.previousUser) {\n        queryClient.setQueryData(userKeys.detail(id), context.previousUser);\n      }\n      toast.error(`Failed to update user: ${error.message}`);\n    },\n    onSuccess: () => {\n      // Invalidate and refetch users list\n      queryClient.invalidateQueries({ queryKey: userKeys.lists() });\n      toast.success(\"User updated successfully\");\n    },\n    onSettled: (data, error, { id }) => {\n      // Always refetch after error or success\n      queryClient.invalidateQueries({ queryKey: userKeys.detail(id) });\n    },\n  });\n}\n\nexport function useDeleteUser() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: string) => usersApi.deleteUser(id),\n    onSuccess: (_, deletedId) => {\n      // Remove from cache\n      queryClient.removeQueries({ queryKey: userKeys.detail(deletedId) });\n\n      // Invalidate users list\n      queryClient.invalidateQueries({ queryKey: userKeys.lists() });\n\n      toast.success(\"User deleted successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to delete user: ${error.message}`);\n    },\n  });\n}\n\n// Specialized hooks for common use cases\nexport function useWorkers() {\n  return useUsers({\n    role: \"crew,worker,foreman\",\n    page: 1,\n    per_page: 100,\n  });\n}\n\nexport function useForemen() {\n  return useUsers({\n    role: \"foreman\",\n    page: 1,\n    per_page: 50,\n  });\n}\n\nexport function useProjectManagers() {\n  return useUsers({\n    role: \"pm\",\n    page: 1,\n    per_page: 50,\n  });\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;;;;;AAOO,MAAM,WAAW;IACtB,KAAK;QAAC;KAAQ;IACd,OAAO,IAAM;eAAI,SAAS,GAAG;YAAE;SAAO;IACtC,MAAM,CAAC,UAAiB;eAAI,SAAS,KAAK;YAAI;SAAQ;IACtD,SAAS,IAAM;eAAI,SAAS,GAAG;YAAE;SAAS;IAC1C,QAAQ,CAAC,KAAe;eAAI,SAAS,OAAO;YAAI;SAAG;AACrD;AAGO,SAAS,SAAS,OAA6D;;IACpF,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,SAAS,IAAI,CAAC,WAAW,CAAC;QACpC,OAAO;iCAAE,IAAM,0IAAQ,CAAC,QAAQ,CAAC;;QACjC,WAAW,IAAI,KAAK;IACtB;AACF;GANgB;;QACP,0LAAQ;;;AAOV,SAAS,QAAQ,EAAU;;IAChC,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,SAAS,MAAM,CAAC;QAC1B,OAAO;gCAAE,IAAM,0IAAQ,CAAC,OAAO,CAAC;;QAChC,SAAS,CAAC,CAAC;QACX,WAAW,IAAI,KAAK;IACtB;AACF;IAPgB;;QACP,0LAAQ;;;AAQV,SAAS;;IACd,MAAM,cAAc,IAAA,2MAAc;IAElC,OAAO,IAAA,gMAAW,EAAC;QACjB,UAAU;yCAAE,CAAC,OAAwB,0IAAQ,CAAC,UAAU,CAAC;;QACzD,SAAS;yCAAE,CAAC;gBACV,oCAAoC;gBACpC,YAAY,iBAAiB,CAAC;oBAAE,UAAU,SAAS,KAAK;gBAAG;gBAE3D,gCAAgC;gBAChC,YAAY,YAAY,CAAC,SAAS,MAAM,CAAC,QAAQ,EAAE,GAAG;gBAEtD,oJAAK,CAAC,OAAO,CAAC;YAChB;;QACA,OAAO;yCAAE,CAAC;gBACR,oJAAK,CAAC,KAAK,CAAC,AAAC,0BAAuC,OAAd,MAAM,OAAO;YACrD;;IACF;AACF;IAlBgB;;QACM,2MAAc;QAE3B,gMAAW;;;AAiBb,SAAS;;IACd,MAAM,cAAc,IAAA,2MAAc;IAElC,OAAO,IAAA,gMAAW,EAAC;QACjB,UAAU;yCAAE;oBAAC,EAAE,EAAE,EAAE,IAAI,EAAuC;uBAC5D,0IAAQ,CAAC,UAAU,CAAC,IAAI;;;QAC1B,QAAQ;yCAAE;oBAAO,EAAE,EAAE,EAAE,IAAI,EAAE;gBAC3B,gCAAgC;gBAChC,MAAM,YAAY,aAAa,CAAC;oBAAE,UAAU,SAAS,MAAM,CAAC;gBAAI;gBAEhE,8BAA8B;gBAC9B,MAAM,eAAe,YAAY,YAAY,CAAC,SAAS,MAAM,CAAC;gBAE9D,yCAAyC;gBACzC,YAAY,YAAY,CAAC,SAAS,MAAM,CAAC;iDAAK,CAAC;wBAC7C,IAAI,CAAC,KAAK,OAAO;wBACjB,OAAO;4BAAE,GAAG,GAAG;4BAAE,GAAG,IAAI;wBAAC;oBAC3B;;gBAEA,qDAAqD;gBACrD,OAAO;oBAAE;gBAAa;YACxB;;QACA,OAAO;yCAAE,CAAC,cAAe;oBAAR,EAAE,EAAE,EAAE;gBACrB,6EAA6E;gBAC7E,IAAI,oBAAA,8BAAA,QAAS,YAAY,EAAE;oBACzB,YAAY,YAAY,CAAC,SAAS,MAAM,CAAC,KAAK,QAAQ,YAAY;gBACpE;gBACA,oJAAK,CAAC,KAAK,CAAC,AAAC,0BAAuC,OAAd,MAAM,OAAO;YACrD;;QACA,SAAS;yCAAE;gBACT,oCAAoC;gBACpC,YAAY,iBAAiB,CAAC;oBAAE,UAAU,SAAS,KAAK;gBAAG;gBAC3D,oJAAK,CAAC,OAAO,CAAC;YAChB;;QACA,SAAS;yCAAE,CAAC,MAAM;oBAAO,EAAE,EAAE,EAAE;gBAC7B,wCAAwC;gBACxC,YAAY,iBAAiB,CAAC;oBAAE,UAAU,SAAS,MAAM,CAAC;gBAAI;YAChE;;IACF;AACF;IAvCgB;;QACM,2MAAc;QAE3B,gMAAW;;;AAsCb,SAAS;;IACd,MAAM,cAAc,IAAA,2MAAc;IAElC,OAAO,IAAA,gMAAW,EAAC;QACjB,UAAU;yCAAE,CAAC,KAAe,0IAAQ,CAAC,UAAU,CAAC;;QAChD,SAAS;yCAAE,CAAC,GAAG;gBACb,oBAAoB;gBACpB,YAAY,aAAa,CAAC;oBAAE,UAAU,SAAS,MAAM,CAAC;gBAAW;gBAEjE,wBAAwB;gBACxB,YAAY,iBAAiB,CAAC;oBAAE,UAAU,SAAS,KAAK;gBAAG;gBAE3D,oJAAK,CAAC,OAAO,CAAC;YAChB;;QACA,OAAO;yCAAE,CAAC;gBACR,oJAAK,CAAC,KAAK,CAAC,AAAC,0BAAuC,OAAd,MAAM,OAAO;YACrD;;IACF;AACF;IAlBgB;;QACM,2MAAc;QAE3B,gMAAW;;;AAkBb,SAAS;;IACd,OAAO,SAAS;QACd,MAAM;QACN,MAAM;QACN,UAAU;IACZ;AACF;IANgB;;QACP;;;AAOF,SAAS;;IACd,OAAO,SAAS;QACd,MAAM;QACN,MAAM;QACN,UAAU;IACZ;AACF;IANgB;;QACP;;;AAOF,SAAS;;IACd,OAAO,SAAS;QACd,MAAM;QACN,MAAM;QACN,UAAU;IACZ;AACF;IANgB;;QACP","debugId":null}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/lib/auth.ts"],"sourcesContent":["import { redirect } from \"next/navigation\";\nimport { getStoredUser, getStoredToken } from \"@/hooks/use-auth\";\nimport type { AuthUser } from \"@/types\";\n\n// Auth validation utilities\nexport function validateAuth(): AuthUser | null {\n  if (typeof window === \"undefined\") return null;\n\n  const token = getStoredToken();\n  const user = getStoredUser();\n\n  if (!token || !user) return null;\n\n  // For now, just check if token exists\n  // TODO: Implement proper token validation\n  return user;\n}\n\n// Server-side auth check for pages\nexport function requireAuth(): never | void {\n  const user = validateAuth();\n\n  if (!user) {\n    redirect('/login');\n  }\n}\n\n// Role-based access control\nexport function requireRole(allowedRoles: string[]): never | void {\n  const user = validateAuth();\n\n  if (!user) {\n    redirect('/login');\n  }\n\n  if (!allowedRoles.includes(user.role)) {\n    redirect('/dashboard'); // Redirect to dashboard if no permission\n  }\n}\n\n// Permission-based access control\nexport function requirePermission(permission: string): never | void {\n  const user = validateAuth();\n\n  if (!user) {\n    redirect('/login');\n  }\n\n  if (!user.permissions?.includes(permission)) {\n    redirect('/dashboard');\n  }\n}\n\n// Auth utilities for components\nexport function useAuthGuard() {\n  return {\n    requireAuth,\n    requireRole,\n    requirePermission,\n    validateAuth,\n  };\n}\n\n// Quick role checks\nexport const roleChecks = {\n  isAdmin: (user: AuthUser) => user.role === 'admin',\n  isProjectManager: (user: AuthUser) => user.role === 'pm',\n  isForeman: (user: AuthUser) => user.role === 'foreman',\n  isWorker: (user: AuthUser) => ['crew', 'worker'].includes(user.role),\n  isViewer: (user: AuthUser) => user.role === 'viewer',\n\n  // Combined checks\n  canManageProjects: (user: AuthUser) => ['admin', 'pm'].includes(user.role),\n  canApproveWork: (user: AuthUser) => ['admin', 'pm', 'foreman'].includes(user.role),\n  canCreateWork: (user: AuthUser) => ['admin', 'pm', 'foreman', 'crew', 'worker'].includes(user.role),\n  canViewReports: (user: AuthUser) => ['admin', 'pm', 'viewer'].includes(user.role),\n};"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;;;AAIO,SAAS;IACd;;IAEA,MAAM,QAAQ,IAAA,gJAAc;IAC5B,MAAM,OAAO,IAAA,+IAAa;IAE1B,IAAI,CAAC,SAAS,CAAC,MAAM,OAAO;IAE5B,sCAAsC;IACtC,0CAA0C;IAC1C,OAAO;AACT;AAGO,SAAS;IACd,MAAM,OAAO;IAEb,IAAI,CAAC,MAAM;QACT,IAAA,iJAAQ,EAAC;IACX;AACF;AAGO,SAAS,YAAY,YAAsB;IAChD,MAAM,OAAO;IAEb,IAAI,CAAC,MAAM;QACT,IAAA,iJAAQ,EAAC;IACX;IAEA,IAAI,CAAC,aAAa,QAAQ,CAAC,KAAK,IAAI,GAAG;QACrC,IAAA,iJAAQ,EAAC,eAAe,yCAAyC;IACnE;AACF;AAGO,SAAS,kBAAkB,UAAkB;QAO7C;IANL,MAAM,OAAO;IAEb,IAAI,CAAC,MAAM;QACT,IAAA,iJAAQ,EAAC;IACX;IAEA,IAAI,GAAC,oBAAA,KAAK,WAAW,cAAhB,wCAAA,kBAAkB,QAAQ,CAAC,cAAa;QAC3C,IAAA,iJAAQ,EAAC;IACX;AACF;AAGO,SAAS;IACd,OAAO;QACL;QACA;QACA;QACA;IACF;AACF;AAGO,MAAM,aAAa;IACxB,SAAS,CAAC,OAAmB,KAAK,IAAI,KAAK;IAC3C,kBAAkB,CAAC,OAAmB,KAAK,IAAI,KAAK;IACpD,WAAW,CAAC,OAAmB,KAAK,IAAI,KAAK;IAC7C,UAAU,CAAC,OAAmB;YAAC;YAAQ;SAAS,CAAC,QAAQ,CAAC,KAAK,IAAI;IACnE,UAAU,CAAC,OAAmB,KAAK,IAAI,KAAK;IAE5C,kBAAkB;IAClB,mBAAmB,CAAC,OAAmB;YAAC;YAAS;SAAK,CAAC,QAAQ,CAAC,KAAK,IAAI;IACzE,gBAAgB,CAAC,OAAmB;YAAC;YAAS;YAAM;SAAU,CAAC,QAAQ,CAAC,KAAK,IAAI;IACjF,eAAe,CAAC,OAAmB;YAAC;YAAS;YAAM;YAAW;YAAQ;SAAS,CAAC,QAAQ,CAAC,KAAK,IAAI;IAClG,gBAAgB,CAAC,OAAmB;YAAC;YAAS;YAAM;SAAS,CAAC,QAAQ,CAAC,KAAK,IAAI;AAClF","debugId":null}},
    {"offset": {"line": 686, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/app/%28dashboard%29/dashboard/projects/new/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useRouter } from \"next/navigation\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { CalendarIcon, ArrowLeft, Save, Building2 } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\n\nimport { useCreateProject } from \"@/hooks/use-projects\";\nimport { useProjectManagers } from \"@/hooks/use-users\";\nimport { requireAuth } from \"@/lib/auth\";\nimport type { CreateProjectRequest, Language } from \"@/types\";\n\n// Validation schema\nconst createProjectSchema = z.object({\n  name: z.string().min(1, \"Project name is required\").max(255, \"Project name too long\"),\n  customer: z.string().optional(),\n  city: z.string().optional(),\n  address: z.string().optional(),\n  contact_24h: z.string().optional(),\n  start_date: z.string().optional(),\n  end_date_plan: z.string().optional(),\n  total_length_m: z.coerce.number().min(0, \"Length must be positive\"),\n  base_rate_per_m: z.coerce.number().min(0, \"Rate must be positive\"),\n  language_default: z.enum([\"ru\", \"en\", \"de\", \"uz\", \"tr\"]),\n  pm_user_id: z.string().optional(),\n});\n\ntype CreateProjectFormData = z.infer<typeof createProjectSchema>;\n\nexport default function NewProjectPage() {\n  // Require authentication\n  requireAuth();\n\n  const router = useRouter();\n  const createProject = useCreateProject();\n  const { data: projectManagers, isLoading: isLoadingPMs } = useProjectManagers();\n\n  const form = useForm<CreateProjectFormData>({\n    resolver: zodResolver(createProjectSchema),\n    defaultValues: {\n      name: \"\",\n      customer: \"\",\n      city: \"\",\n      address: \"\",\n      contact_24h: \"\",\n      start_date: \"\",\n      end_date_plan: \"\",\n      total_length_m: 0,\n      base_rate_per_m: 15.5, // Default rate\n      language_default: \"de\", // Default to German\n      pm_user_id: \"none\",\n    },\n  });\n\n  const onSubmit = async (data: CreateProjectFormData) => {\n    try {\n      const projectData: CreateProjectRequest = {\n        ...data,\n        start_date: data.start_date || undefined,\n        end_date_plan: data.end_date_plan || undefined,\n        pm_user_id: data.pm_user_id === \"none\" || !data.pm_user_id ? undefined : data.pm_user_id,\n      };\n\n      const newProject = await createProject.mutateAsync(projectData);\n      router.push(`/dashboard/projects/${newProject.id}`);\n    } catch (error) {\n      // Error is handled by the mutation\n      console.error(\"Failed to create project:\", error);\n    }\n  };\n\n  const languages: { value: Language; label: string }[] = [\n    { value: \"de\", label: \"German (Deutsch)\" },\n    { value: \"en\", label: \"English\" },\n    { value: \"ru\", label: \"Russian (Русский)\" },\n    { value: \"uz\", label: \"Uzbek (Oʻzbek)\" },\n    { value: \"tr\", label: \"Turkish (Türkçe)\" },\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => router.back()}\n            className=\"flex items-center space-x-2\"\n          >\n            <ArrowLeft className=\"h-4 w-4\" />\n            <span>Back</span>\n          </Button>\n          <div>\n            <h1 className=\"text-3xl font-bold tracking-tight\">Create New Project</h1>\n            <p className=\"text-muted-foreground\">\n              Set up a new fiber optic construction project\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Form */}\n      <div className=\"max-w-2xl\">\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            {/* Basic Information */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Building2 className=\"h-5 w-5\" />\n                  <span>Basic Information</span>\n                </CardTitle>\n                <CardDescription>\n                  Enter the fundamental details about the project\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <FormField\n                  control={form.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Project Name *</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"e.g., Fiber Installation Berlin District 1\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormDescription>\n                        A clear, descriptive name for the project\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"customer\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Customer</FormLabel>\n                        <FormControl>\n                          <Input\n                            placeholder=\"e.g., Deutsche Telekom\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"city\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>City</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g., Berlin\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n\n                <FormField\n                  control={form.control}\n                  name=\"address\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Project Address</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"e.g., Hauptstraße 123, 10115 Berlin\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormDescription>\n                        Primary address or area where the work will be performed\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"contact_24h\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>24h Emergency Contact</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"e.g., +49 30 12345678\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormDescription>\n                        Contact number for emergencies during the project\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"language_default\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Default Language</FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select project language\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          {languages.map((lang) => (\n                            <SelectItem key={lang.value} value={lang.value}>\n                              {lang.label}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      <FormDescription>\n                        Primary language used for project documentation and interface\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"pm_user_id\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Project Manager</FormLabel>\n                      <Select onValueChange={field.onChange} value={field.value}>\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select project manager (optional)\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          <SelectItem value=\"none\">No project manager assigned</SelectItem>\n                          {isLoadingPMs ? (\n                            <SelectItem value=\"loading\" disabled>\n                              Loading project managers...\n                            </SelectItem>\n                          ) : (\n                            projectManagers?.items?.map((pm) => (\n                              <SelectItem key={pm.id} value={pm.id}>\n                                {pm.first_name} {pm.last_name} ({pm.email})\n                              </SelectItem>\n                            ))\n                          )}\n                        </SelectContent>\n                      </Select>\n                      <FormDescription>\n                        Choose a project manager to oversee this project\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </CardContent>\n            </Card>\n\n            {/* Project Scope */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Project Scope</CardTitle>\n                <CardDescription>\n                  Define the scope and financial parameters of the project\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"total_length_m\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Total Length (meters) *</FormLabel>\n                        <FormControl>\n                          <Input\n                            type=\"number\"\n                            step=\"0.01\"\n                            min=\"0\"\n                            placeholder=\"e.g., 1500\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          Total length of fiber cable to be installed\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"base_rate_per_m\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Rate per Meter (€) *</FormLabel>\n                        <FormControl>\n                          <Input\n                            type=\"number\"\n                            step=\"0.01\"\n                            min=\"0\"\n                            placeholder=\"e.g., 15.50\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          Base rate charged per meter of installation\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n\n                {/* Calculated Total */}\n                <div className=\"rounded-md bg-muted p-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"font-medium\">Estimated Project Value:</span>\n                    <span className=\"text-lg font-bold\">\n                      €{(form.watch(\"total_length_m\") * form.watch(\"base_rate_per_m\")).toLocaleString(\"de-DE\", {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2,\n                      })}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground mt-1\">\n                    {form.watch(\"total_length_m\")} meters × €{form.watch(\"base_rate_per_m\")} per meter\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Timeline */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <CalendarIcon className=\"h-5 w-5\" />\n                  <span>Project Timeline</span>\n                </CardTitle>\n                <CardDescription>\n                  Set the planned start and end dates (optional)\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"start_date\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Planned Start Date</FormLabel>\n                        <FormControl>\n                          <Input type=\"date\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"end_date_plan\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Planned End Date</FormLabel>\n                        <FormControl>\n                          <Input type=\"date\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Actions */}\n            <div className=\"flex justify-end space-x-4\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => router.back()}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                disabled={createProject.isPending}\n                className=\"flex items-center space-x-2\"\n              >\n                {createProject.isPending ? (\n                  <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-background border-t-transparent\" />\n                ) : (\n                  <Save className=\"h-4 w-4\" />\n                )}\n                <span>Create Project</span>\n              </Button>\n            </div>\n          </form>\n        </Form>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAhBA;;;;;;;;;;;;;;AAmBA,oBAAoB;AACpB,MAAM,sBAAsB,qLAAC,CAAC,MAAM,CAAC;IACnC,MAAM,qLAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,4BAA4B,GAAG,CAAC,KAAK;IAC7D,UAAU,qLAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,MAAM,qLAAC,CAAC,MAAM,GAAG,QAAQ;IACzB,SAAS,qLAAC,CAAC,MAAM,GAAG,QAAQ;IAC5B,aAAa,qLAAC,CAAC,MAAM,GAAG,QAAQ;IAChC,YAAY,qLAAC,CAAC,MAAM,GAAG,QAAQ;IAC/B,eAAe,qLAAC,CAAC,MAAM,GAAG,QAAQ;IAClC,gBAAgB,qLAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACzC,iBAAiB,qLAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC1C,kBAAkB,qLAAC,CAAC,IAAI,CAAC;QAAC;QAAM;QAAM;QAAM;QAAM;KAAK;IACvD,YAAY,qLAAC,CAAC,MAAM,GAAG,QAAQ;AACjC;AAIe,SAAS;;IACtB,yBAAyB;IACzB,IAAA,oIAAW;IAEX,MAAM,SAAS,IAAA,kJAAS;IACxB,MAAM,gBAAgB,IAAA,sJAAgB;IACtC,MAAM,EAAE,MAAM,eAAe,EAAE,WAAW,YAAY,EAAE,GAAG,IAAA,qJAAkB;IAE7E,MAAM,OAAO,IAAA,4KAAO,EAAwB;QAC1C,UAAU,IAAA,gLAAW,EAAC;QACtB,eAAe;YACb,MAAM;YACN,UAAU;YACV,MAAM;YACN,SAAS;YACT,aAAa;YACb,YAAY;YACZ,eAAe;YACf,gBAAgB;YAChB,iBAAiB;YACjB,kBAAkB;YAClB,YAAY;QACd;IACF;IAEA,MAAM,WAAW,OAAO;QACtB,IAAI;YACF,MAAM,cAAoC;gBACxC,GAAG,IAAI;gBACP,YAAY,KAAK,UAAU,IAAI;gBAC/B,eAAe,KAAK,aAAa,IAAI;gBACrC,YAAY,KAAK,UAAU,KAAK,UAAU,CAAC,KAAK,UAAU,GAAG,YAAY,KAAK,UAAU;YAC1F;YAEA,MAAM,aAAa,MAAM,cAAc,WAAW,CAAC;YACnD,OAAO,IAAI,CAAC,AAAC,uBAAoC,OAAd,WAAW,EAAE;QAClD,EAAE,OAAO,OAAO;YACd,mCAAmC;YACnC,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,MAAM,YAAkD;QACtD;YAAE,OAAO;YAAM,OAAO;QAAmB;QACzC;YAAE,OAAO;YAAM,OAAO;QAAU;QAChC;YAAE,OAAO;YAAM,OAAO;QAAoB;QAC1C;YAAE,OAAO;YAAM,OAAO;QAAiB;QACvC;YAAE,OAAO;YAAM,OAAO;QAAmB;KAC1C;IAED,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,+IAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,SAAS,IAAM,OAAO,IAAI;4BAC1B,WAAU;;8CAEV,6LAAC,gOAAS;oCAAC,WAAU;;;;;;8CACrB,6LAAC;8CAAK;;;;;;;;;;;;sCAER,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAAoC;;;;;;8CAClD,6LAAC;oCAAE,WAAU;8CAAwB;;;;;;;;;;;;;;;;;;;;;;;0BAQ3C,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,2IAAI;oBAAE,GAAG,IAAI;8BACZ,cAAA,6LAAC;wBAAK,UAAU,KAAK,YAAY,CAAC;wBAAW,WAAU;;0CAErD,6LAAC,2IAAI;;kDACH,6LAAC,iJAAU;;0DACT,6LAAC,gJAAS;gDAAC,WAAU;;kEACnB,6LAAC,gOAAS;wDAAC,WAAU;;;;;;kEACrB,6LAAC;kEAAK;;;;;;;;;;;;0DAER,6LAAC,sJAAe;0DAAC;;;;;;;;;;;;kDAInB,6LAAC,kJAAW;wCAAC,WAAU;;0DACrB,6LAAC,gJAAS;gDACR,SAAS,KAAK,OAAO;gDACrB,MAAK;gDACL,QAAQ;wDAAC,EAAE,KAAK,EAAE;yEAChB,6LAAC,+IAAQ;;0EACP,6LAAC,gJAAS;0EAAC;;;;;;0EACX,6LAAC,kJAAW;0EACV,cAAA,6LAAC,6IAAK;oEACJ,aAAY;oEACX,GAAG,KAAK;;;;;;;;;;;0EAGb,6LAAC,sJAAe;0EAAC;;;;;;0EAGjB,6LAAC,kJAAW;;;;;;;;;;;;;;;;;0DAKlB,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,gJAAS;wDACR,SAAS,KAAK,OAAO;wDACrB,MAAK;wDACL,QAAQ;gEAAC,EAAE,KAAK,EAAE;iFAChB,6LAAC,+IAAQ;;kFACP,6LAAC,gJAAS;kFAAC;;;;;;kFACX,6LAAC,kJAAW;kFACV,cAAA,6LAAC,6IAAK;4EACJ,aAAY;4EACX,GAAG,KAAK;;;;;;;;;;;kFAGb,6LAAC,kJAAW;;;;;;;;;;;;;;;;;kEAKlB,6LAAC,gJAAS;wDACR,SAAS,KAAK,OAAO;wDACrB,MAAK;wDACL,QAAQ;gEAAC,EAAE,KAAK,EAAE;iFAChB,6LAAC,+IAAQ;;kFACP,6LAAC,gJAAS;kFAAC;;;;;;kFACX,6LAAC,kJAAW;kFACV,cAAA,6LAAC,6IAAK;4EAAC,aAAY;4EAAgB,GAAG,KAAK;;;;;;;;;;;kFAE7C,6LAAC,kJAAW;;;;;;;;;;;;;;;;;;;;;;;0DAMpB,6LAAC,gJAAS;gDACR,SAAS,KAAK,OAAO;gDACrB,MAAK;gDACL,QAAQ;wDAAC,EAAE,KAAK,EAAE;yEAChB,6LAAC,+IAAQ;;0EACP,6LAAC,gJAAS;0EAAC;;;;;;0EACX,6LAAC,kJAAW;0EACV,cAAA,6LAAC,6IAAK;oEACJ,aAAY;oEACX,GAAG,KAAK;;;;;;;;;;;0EAGb,6LAAC,sJAAe;0EAAC;;;;;;0EAGjB,6LAAC,kJAAW;;;;;;;;;;;;;;;;;0DAKlB,6LAAC,gJAAS;gDACR,SAAS,KAAK,OAAO;gDACrB,MAAK;gDACL,QAAQ;wDAAC,EAAE,KAAK,EAAE;yEAChB,6LAAC,+IAAQ;;0EACP,6LAAC,gJAAS;0EAAC;;;;;;0EACX,6LAAC,kJAAW;0EACV,cAAA,6LAAC,6IAAK;oEACJ,aAAY;oEACX,GAAG,KAAK;;;;;;;;;;;0EAGb,6LAAC,sJAAe;0EAAC;;;;;;0EAGjB,6LAAC,kJAAW;;;;;;;;;;;;;;;;;0DAKlB,6LAAC,gJAAS;gDACR,SAAS,KAAK,OAAO;gDACrB,MAAK;gDACL,QAAQ;wDAAC,EAAE,KAAK,EAAE;yEAChB,6LAAC,+IAAQ;;0EACP,6LAAC,gJAAS;0EAAC;;;;;;0EACX,6LAAC,+IAAM;gEAAC,eAAe,MAAM,QAAQ;gEAAE,cAAc,MAAM,KAAK;;kFAC9D,6LAAC,kJAAW;kFACV,cAAA,6LAAC,sJAAa;sFACZ,cAAA,6LAAC,oJAAW;gFAAC,aAAY;;;;;;;;;;;;;;;;kFAG7B,6LAAC,sJAAa;kFACX,UAAU,GAAG,CAAC,CAAC,qBACd,6LAAC,mJAAU;gFAAkB,OAAO,KAAK,KAAK;0FAC3C,KAAK,KAAK;+EADI,KAAK,KAAK;;;;;;;;;;;;;;;;0EAMjC,6LAAC,sJAAe;0EAAC;;;;;;0EAGjB,6LAAC,kJAAW;;;;;;;;;;;;;;;;;0DAKlB,6LAAC,gJAAS;gDACR,SAAS,KAAK,OAAO;gDACrB,MAAK;gDACL,QAAQ;wDAAC,EAAE,KAAK,EAAE;wDAgBR;yEAfR,6LAAC,+IAAQ;;0EACP,6LAAC,gJAAS;0EAAC;;;;;;0EACX,6LAAC,+IAAM;gEAAC,eAAe,MAAM,QAAQ;gEAAE,OAAO,MAAM,KAAK;;kFACvD,6LAAC,kJAAW;kFACV,cAAA,6LAAC,sJAAa;sFACZ,cAAA,6LAAC,oJAAW;gFAAC,aAAY;;;;;;;;;;;;;;;;kFAG7B,6LAAC,sJAAa;;0FACZ,6LAAC,mJAAU;gFAAC,OAAM;0FAAO;;;;;;4EACxB,6BACC,6LAAC,mJAAU;gFAAC,OAAM;gFAAU,QAAQ;0FAAC;;;;;yFAIrC,4BAAA,sCADE,CACF,yBAAA,gBAAiB,KAAK,AAKxB,cALE,6CAAA,uBAAwB,GAAG,CAAC,CAAC,mBAC3B,6LAAC,mJAAU;oFAAa,OAAO,GAAG,EAAE;;wFACjC,GAAG,UAAU;wFAAC;wFAAE,GAAG,SAAS;wFAAC;wFAAG,GAAG,KAAK;wFAAC;;mFAD3B,GAAG,EAAE;;;;;;;;;;;;;;;;;0EAO9B,6LAAC,sJAAe;0EAAC;;;;;;0EAGjB,6LAAC,kJAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CAQtB,6LAAC,2IAAI;;kDACH,6LAAC,iJAAU;;0DACT,6LAAC,gJAAS;0DAAC;;;;;;0DACX,6LAAC,sJAAe;0DAAC;;;;;;;;;;;;kDAInB,6LAAC,kJAAW;wCAAC,WAAU;;0DACrB,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,gJAAS;wDACR,SAAS,KAAK,OAAO;wDACrB,MAAK;wDACL,QAAQ;gEAAC,EAAE,KAAK,EAAE;iFAChB,6LAAC,+IAAQ;;kFACP,6LAAC,gJAAS;kFAAC;;;;;;kFACX,6LAAC,kJAAW;kFACV,cAAA,6LAAC,6IAAK;4EACJ,MAAK;4EACL,MAAK;4EACL,KAAI;4EACJ,aAAY;4EACX,GAAG,KAAK;;;;;;;;;;;kFAGb,6LAAC,sJAAe;kFAAC;;;;;;kFAGjB,6LAAC,kJAAW;;;;;;;;;;;;;;;;;kEAKlB,6LAAC,gJAAS;wDACR,SAAS,KAAK,OAAO;wDACrB,MAAK;wDACL,QAAQ;gEAAC,EAAE,KAAK,EAAE;iFAChB,6LAAC,+IAAQ;;kFACP,6LAAC,gJAAS;kFAAC;;;;;;kFACX,6LAAC,kJAAW;kFACV,cAAA,6LAAC,6IAAK;4EACJ,MAAK;4EACL,MAAK;4EACL,KAAI;4EACJ,aAAY;4EACX,GAAG,KAAK;;;;;;;;;;;kFAGb,6LAAC,sJAAe;kFAAC;;;;;;kFAGjB,6LAAC,kJAAW;;;;;;;;;;;;;;;;;;;;;;;0DAOpB,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAK,WAAU;0EAAc;;;;;;0EAC9B,6LAAC;gEAAK,WAAU;;oEAAoB;oEAChC,CAAC,KAAK,KAAK,CAAC,oBAAoB,KAAK,KAAK,CAAC,kBAAkB,EAAE,cAAc,CAAC,SAAS;wEACvF,uBAAuB;wEACvB,uBAAuB;oEACzB;;;;;;;;;;;;;kEAGJ,6LAAC;wDAAE,WAAU;;4DACV,KAAK,KAAK,CAAC;4DAAkB;4DAAY,KAAK,KAAK,CAAC;4DAAmB;;;;;;;;;;;;;;;;;;;;;;;;;0CAOhF,6LAAC,2IAAI;;kDACH,6LAAC,iJAAU;;0DACT,6LAAC,gJAAS;gDAAC,WAAU;;kEACnB,6LAAC,iOAAY;wDAAC,WAAU;;;;;;kEACxB,6LAAC;kEAAK;;;;;;;;;;;;0DAER,6LAAC,sJAAe;0DAAC;;;;;;;;;;;;kDAInB,6LAAC,kJAAW;wCAAC,WAAU;kDACrB,cAAA,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,gJAAS;oDACR,SAAS,KAAK,OAAO;oDACrB,MAAK;oDACL,QAAQ;4DAAC,EAAE,KAAK,EAAE;6EAChB,6LAAC,+IAAQ;;8EACP,6LAAC,gJAAS;8EAAC;;;;;;8EACX,6LAAC,kJAAW;8EACV,cAAA,6LAAC,6IAAK;wEAAC,MAAK;wEAAQ,GAAG,KAAK;;;;;;;;;;;8EAE9B,6LAAC,kJAAW;;;;;;;;;;;;;;;;;8DAKlB,6LAAC,gJAAS;oDACR,SAAS,KAAK,OAAO;oDACrB,MAAK;oDACL,QAAQ;4DAAC,EAAE,KAAK,EAAE;6EAChB,6LAAC,+IAAQ;;8EACP,6LAAC,gJAAS;8EAAC;;;;;;8EACX,6LAAC,kJAAW;8EACV,cAAA,6LAAC,6IAAK;wEAAC,MAAK;wEAAQ,GAAG,KAAK;;;;;;;;;;;8EAE9B,6LAAC,kJAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CASxB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,+IAAM;wCACL,MAAK;wCACL,SAAQ;wCACR,SAAS,IAAM,OAAO,IAAI;kDAC3B;;;;;;kDAGD,6LAAC,+IAAM;wCACL,MAAK;wCACL,UAAU,cAAc,SAAS;wCACjC,WAAU;;4CAET,cAAc,SAAS,iBACtB,6LAAC;gDAAI,WAAU;;;;;qEAEf,6LAAC,6MAAI;gDAAC,WAAU;;;;;;0DAElB,6LAAC;0DAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQtB;GAzYwB;;QAIP,kJAAS;QACF,sJAAgB;QACqB,qJAAkB;QAEhE,4KAAO;;;KARE","debugId":null}}]
}