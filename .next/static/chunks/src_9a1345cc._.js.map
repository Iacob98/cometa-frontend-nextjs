{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAG5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAM,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,2KAAgB,OAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,2KAAgB,QAGnC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-work-entries.ts"],"sourcesContent":["'use client';\n\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { toast } from 'sonner';\n\nexport interface WorkEntry {\n  id: string;\n  project_id: string;\n  cabinet_id?: string | null;\n  segment_id?: string | null;\n  cut_id?: string | null;\n  house_id?: string | null;\n  crew_id?: string | null;\n  user_id?: string | null;\n  date: string;\n  stage_code: string;\n  meters_done_m: number;\n  method?: string | null;\n  width_m?: number | null;\n  depth_m?: number | null;\n  cables_count?: number | null;\n  has_protection_pipe: boolean;\n  soil_type?: string | null;\n  notes?: string | null;\n  approved_by?: string | null;\n  approved_at?: string | null;\n  project_name?: string | null;\n  crew_name?: string | null;\n  worker_name?: string | null;\n  approver_name?: string | null;\n  cabinet_name?: string | null;\n  segment_name?: string | null;\n  cut_name?: string | null;\n  house_address?: string | null;\n}\n\nexport interface WorkEntriesResponse {\n  items: WorkEntry[];\n  total: number;\n  page: number;\n  per_page: number;\n  total_pages: number;\n}\n\nexport interface WorkEntryFilters {\n  project_id?: string;\n  crew_id?: string;\n  user_id?: string;\n  stage_code?: string;\n  approved?: string;\n  page?: number;\n  per_page?: number;\n}\n\nexport interface CreateWorkEntryData {\n  project_id: string;\n  cabinet_id?: string;\n  segment_id?: string;\n  cut_id?: string;\n  house_id?: string;\n  crew_id?: string;\n  user_id?: string;\n  date: string;\n  stage_code: string;\n  meters_done_m: number;\n  method?: string;\n  width_m?: number;\n  depth_m?: number;\n  cables_count?: number;\n  has_protection_pipe?: boolean;\n  soil_type?: string;\n  notes?: string;\n}\n\n// Query keys\nexport const workEntryKeys = {\n  all: [\"work-entries\"] as const,\n  lists: () => [...workEntryKeys.all, \"list\"] as const,\n  list: (filters: WorkEntryFilters) => [...workEntryKeys.lists(), filters] as const,\n  details: () => [...workEntryKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...workEntryKeys.details(), id] as const,\n  stages: () => [...workEntryKeys.all, \"stages\"] as const,\n};\n\n// Fetch work entries with filters\nexport function useWorkEntries(filters: WorkEntryFilters = {}) {\n  const searchParams = new URLSearchParams();\n\n  Object.entries(filters).forEach(([key, value]) => {\n    if (value !== undefined && value !== null && value !== '') {\n      searchParams.append(key, value.toString());\n    }\n  });\n\n  return useQuery({\n    queryKey: workEntryKeys.list(filters),\n    queryFn: async (): Promise<WorkEntriesResponse> => {\n      const response = await fetch(`/api/work-entries?${searchParams.toString()}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch work entries');\n      }\n      return response.json();\n    },\n  });\n}\n\n// Fetch single work entry\nexport function useWorkEntry(id: string) {\n  return useQuery({\n    queryKey: workEntryKeys.detail(id),\n    queryFn: async (): Promise<WorkEntry> => {\n      const response = await fetch(`/api/work-entries/${id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch work entry');\n      }\n      return response.json();\n    },\n    enabled: !!id,\n  });\n}\n\n// Create work entry\nexport function useCreateWorkEntry() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (data: CreateWorkEntryData) => {\n      const response = await fetch('/api/work-entries', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to create work entry');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: workEntryKeys.lists() });\n      toast.success('Work entry created successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}\n\n// Update work entry\nexport function useUpdateWorkEntry(id: string) {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (data: Partial<CreateWorkEntryData>) => {\n      const response = await fetch(`/api/work-entries/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to update work entry');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: workEntryKeys.lists() });\n      queryClient.invalidateQueries({ queryKey: workEntryKeys.detail(id) });\n      toast.success('Work entry updated successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}\n\n// Delete work entry\nexport function useDeleteWorkEntry() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (id: string) => {\n      const response = await fetch(`/api/work-entries/${id}`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to delete work entry');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: workEntryKeys.lists() });\n      toast.success('Work entry deleted successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}\n\n// Approve work entry\nexport function useApproveWorkEntry() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (id: string) => {\n      const response = await fetch(`/api/work-entries/${id}/approve`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to approve work entry');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: workEntryKeys.lists() });\n      toast.success('Work entry approved successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}\n\n// Fetch pending approvals\nexport function usePendingApprovals() {\n  return useWorkEntries({\n    approved: 'false',\n    page: 1,\n    per_page: 50,\n  });\n}\n\n// Specialized hooks for common use cases\nexport function useProjectWorkEntries(projectId?: string) {\n  return useWorkEntries({\n    project_id: projectId,\n    page: 1,\n    per_page: 20,\n  });\n}\n\nexport function useUserWorkEntries(userId?: string) {\n  return useWorkEntries({\n    user_id: userId,\n    page: 1,\n    per_page: 20,\n  });\n}\n\nexport function useCrewWorkEntries(crewId?: string) {\n  return useWorkEntries({\n    crew_id: crewId,\n    page: 1,\n    per_page: 20,\n  });\n}\n\n// Fetch work stages/stage codes\nexport function useWorkStages() {\n  return useQuery({\n    queryKey: workEntryKeys.stages(),\n    queryFn: async () => {\n      const response = await fetch('/api/work-stages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch work stages');\n      }\n      return response.json();\n    },\n    staleTime: 10 * 60 * 1000, // 10 minutes\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 522, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/app/%28dashboard%29/dashboard/work-entries/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Plus, Search, Filter, MapPin, Calendar, User, Eye, CheckCircle, Clock, Building2, Camera, Ruler } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\nimport { useWorkEntries, usePendingApprovals, useApproveWorkEntry } from \"@/hooks/use-work-entries\";\nimport { useAuth, usePermissions } from \"@/hooks/use-auth\";\nimport type { StageCode, WorkEntryFilters } from \"@/types\";\n\nexport default function WorkEntriesPage() {\n  const router = useRouter();\n  const { user } = useAuth();\n  const { canApproveWork, canManageWork } = usePermissions();\n  const approveWorkEntry = useApproveWorkEntry();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [stageFilter, setStageFilter] = useState<StageCode | \"all\">(\"all\");\n  const [approvalFilter, setApprovalFilter] = useState<\"all\" | \"approved\" | \"pending\">(\"all\");\n\n  const filters: WorkEntryFilters = {\n    stage_code: stageFilter === \"all\" ? undefined : stageFilter,\n    approved: approvalFilter === \"all\" ? undefined : approvalFilter === \"approved\",\n    page: 1,\n    per_page: 20,\n  };\n\n  const { data: workEntriesResponse, isLoading, error } = useWorkEntries(filters);\n  const { data: pendingApprovalsResponse } = usePendingApprovals();\n\n  const workEntries = workEntriesResponse?.items || [];\n  const pendingApprovals = pendingApprovalsResponse?.items || [];\n\n  const handleApproveWorkEntry = async (workEntryId: string) => {\n    try {\n      await approveWorkEntry.mutateAsync(workEntryId);\n    } catch (error) {\n      console.error(\"Failed to approve work entry:\", error);\n    }\n  };\n\n  const getStageLabel = (stageCode: StageCode) => {\n    const stageLabels: Record<StageCode, string> = {\n      stage_1_marking: \"Marking\",\n      stage_2_excavation: \"Excavation\",\n      stage_3_conduit: \"Conduit Installation\",\n      stage_4_cable_pulling: \"Cable Pulling\",\n      stage_5_closure: \"Closure\",\n      stage_6_testing: \"Testing\",\n      stage_7_backfill: \"Backfilling\",\n      stage_8_restoration: \"Surface Restoration\",\n      stage_9_documentation: \"Documentation\",\n      stage_10_quality_check: \"Quality Check\",\n    };\n    return stageLabels[stageCode] || stageCode;\n  };\n\n  const getStageBadgeVariant = (stageCode: StageCode) => {\n    if (!stageCode) return \"secondary\";\n    if (stageCode.includes(\"marking\") || stageCode.includes(\"excavation\")) return \"secondary\";\n    if (stageCode.includes(\"cable\") || stageCode.includes(\"conduit\")) return \"default\";\n    if (stageCode.includes(\"testing\") || stageCode.includes(\"quality\")) return \"outline\";\n    return \"secondary\";\n  };\n\n  if (error) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <h1 className=\"text-3xl font-bold tracking-tight\">Work Entries</h1>\n        </div>\n        <Card>\n          <CardContent className=\"py-8\">\n            <div className=\"text-center text-muted-foreground\">\n              Failed to load work entries. Please try again later.\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Work Entries</h1>\n          <p className=\"text-muted-foreground\">\n            Track and manage field work progress across all projects\n          </p>\n        </div>\n        <Button onClick={() => router.push(\"/dashboard/work-entries/new\")}>\n          <Plus className=\"mr-2 h-4 w-4\" />\n          New Work Entry\n        </Button>\n      </div>\n\n      <Tabs defaultValue=\"all\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"all\">All Work Entries</TabsTrigger>\n          {canApproveWork && (\n            <TabsTrigger value=\"pending\">\n              Pending Approval ({pendingApprovals.length})\n            </TabsTrigger>\n          )}\n          <TabsTrigger value=\"my-work\">My Work</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"all\" className=\"space-y-6\">\n          {/* Filters */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Filter Work Entries</CardTitle>\n              <CardDescription>\n                Search and filter work entries by various criteria\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex flex-col space-y-4 md:flex-row md:space-y-0 md:space-x-4\">\n                <div className=\"flex-1\">\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                    <Input\n                      placeholder=\"Search by project, notes, or worker...\"\n                      value={searchQuery}\n                      onChange={(e) => setSearchQuery(e.target.value)}\n                      className=\"pl-8\"\n                    />\n                  </div>\n                </div>\n                <Select value={stageFilter} onValueChange={(value: StageCode | \"all\") => setStageFilter(value)}>\n                  <SelectTrigger className=\"w-48\">\n                    <SelectValue placeholder=\"Filter by stage\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Stages</SelectItem>\n                    <SelectItem value=\"stage_1_marking\">Marking</SelectItem>\n                    <SelectItem value=\"stage_2_excavation\">Excavation</SelectItem>\n                    <SelectItem value=\"stage_3_conduit\">Conduit Installation</SelectItem>\n                    <SelectItem value=\"stage_4_cable_pulling\">Cable Pulling</SelectItem>\n                    <SelectItem value=\"stage_5_closure\">Closure</SelectItem>\n                    <SelectItem value=\"stage_6_testing\">Testing</SelectItem>\n                    <SelectItem value=\"stage_7_backfill\">Backfilling</SelectItem>\n                    <SelectItem value=\"stage_8_restoration\">Surface Restoration</SelectItem>\n                    <SelectItem value=\"stage_9_documentation\">Documentation</SelectItem>\n                    <SelectItem value=\"stage_10_quality_check\">Quality Check</SelectItem>\n                  </SelectContent>\n                </Select>\n                <Select value={approvalFilter} onValueChange={(value: \"all\" | \"approved\" | \"pending\") => setApprovalFilter(value)}>\n                  <SelectTrigger className=\"w-48\">\n                    <SelectValue placeholder=\"Filter by approval\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Status</SelectItem>\n                    <SelectItem value=\"approved\">Approved</SelectItem>\n                    <SelectItem value=\"pending\">Pending Approval</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Work Entries Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Building2 className=\"h-5 w-5\" />\n                Work Entries ({workEntriesResponse?.total || 0})\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {isLoading ? (\n                <div className=\"space-y-4\">\n                  {[...Array(5)].map((_, i) => (\n                    <div key={i} className=\"flex space-x-4\">\n                      <div className=\"h-4 bg-muted animate-pulse rounded flex-1\" />\n                      <div className=\"h-4 bg-muted animate-pulse rounded w-20\" />\n                      <div className=\"h-4 bg-muted animate-pulse rounded w-16\" />\n                    </div>\n                  ))}\n                </div>\n              ) : workEntries.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Building2 className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                  <h3 className=\"mt-2 text-sm font-semibold\">No work entries found</h3>\n                  <p className=\"mt-1 text-sm text-muted-foreground\">\n                    {searchQuery || stageFilter !== \"all\" || approvalFilter !== \"all\"\n                      ? \"No work entries match your current filters.\"\n                      : \"Get started by creating your first work entry.\"}\n                  </p>\n                  <Button\n                    className=\"mt-4\"\n                    onClick={() => router.push(\"/dashboard/work-entries/new\")}\n                  >\n                    <Plus className=\"mr-2 h-4 w-4\" />\n                    Create Work Entry\n                  </Button>\n                </div>\n              ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Date & Worker</TableHead>\n                      <TableHead>Stage & Progress</TableHead>\n                      <TableHead>Project</TableHead>\n                      <TableHead>Location</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Photos</TableHead>\n                      <TableHead className=\"w-[100px]\">Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {workEntries.map((entry) => (\n                      <TableRow key={entry.id}>\n                        <TableCell>\n                          <div>\n                            <div className=\"font-medium\">\n                              {new Date(entry.date).toLocaleDateString()}\n                            </div>\n                            <div className=\"text-sm text-muted-foreground flex items-center space-x-1\">\n                              <User className=\"h-3 w-3\" />\n                              <span>{entry.user?.full_name || \"Unknown\"}</span>\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"space-y-1\">\n                            <Badge variant={getStageBadgeVariant(entry.stage_code)}>\n                              {getStageLabel(entry.stage_code)}\n                            </Badge>\n                            <div className=\"text-sm text-muted-foreground flex items-center space-x-1\">\n                              <Ruler className=\"h-3 w-3\" />\n                              <span>{entry.meters_done_m}m</span>\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"text-sm\">\n                            Project {entry.project_id}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"text-sm flex items-center space-x-1\">\n                            <MapPin className=\"h-3 w-3 text-muted-foreground\" />\n                            <span>\n                              {entry.cut_id ? `Cut ${entry.cut_id}` :\n                               entry.cabinet_id ? `Cabinet ${entry.cabinet_id}` : \"—\"}\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          {entry.approved_at ? (\n                            <div className=\"flex items-center space-x-1 text-green-600\">\n                              <CheckCircle className=\"h-4 w-4\" />\n                              <span className=\"text-sm\">Approved</span>\n                            </div>\n                          ) : (\n                            <div className=\"flex items-center space-x-1 text-amber-600\">\n                              <Clock className=\"h-4 w-4\" />\n                              <span className=\"text-sm\">Pending</span>\n                            </div>\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center space-x-1\">\n                            <Camera className=\"h-4 w-4 text-muted-foreground\" />\n                            <span className=\"text-sm\">{entry.photos?.length || 0}</span>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <DropdownMenu>\n                            <DropdownMenuTrigger asChild>\n                              <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                                <span className=\"sr-only\">Open menu</span>\n                                <Filter className=\"h-4 w-4\" />\n                              </Button>\n                            </DropdownMenuTrigger>\n                            <DropdownMenuContent align=\"end\">\n                              <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                              <DropdownMenuItem\n                                onClick={() => router.push(`/dashboard/work-entries/${entry.id}`)}\n                              >\n                                <Eye className=\"mr-2 h-4 w-4\" />\n                                View Details\n                              </DropdownMenuItem>\n                              {canApproveWork && !entry.approved_at && (\n                                <>\n                                  <DropdownMenuSeparator />\n                                  <DropdownMenuItem\n                                    onClick={() => handleApproveWorkEntry(entry.id)}\n                                    disabled={approveWorkEntry.isPending}\n                                  >\n                                    <CheckCircle className=\"mr-2 h-4 w-4\" />\n                                    Approve Entry\n                                  </DropdownMenuItem>\n                                </>\n                              )}\n                            </DropdownMenuContent>\n                          </DropdownMenu>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {canApproveWork && (\n          <TabsContent value=\"pending\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Clock className=\"h-5 w-5\" />\n                  Pending Approvals ({pendingApprovals.length})\n                </CardTitle>\n                <CardDescription>\n                  Work entries waiting for your approval\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                {pendingApprovals.length === 0 ? (\n                  <div className=\"text-center py-8\">\n                    <CheckCircle className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                    <h3 className=\"mt-2 text-sm font-semibold\">No pending approvals</h3>\n                    <p className=\"mt-1 text-sm text-muted-foreground\">\n                      All work entries have been approved.\n                    </p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    {pendingApprovals.map((entry) => (\n                      <div\n                        key={entry.id}\n                        className=\"flex items-center justify-between p-4 border rounded-lg\"\n                      >\n                        <div className=\"space-y-1\">\n                          <div className=\"font-medium\">\n                            {getStageLabel(entry.stage_code)} - {entry.meters_done_m}m\n                          </div>\n                          <div className=\"text-sm text-muted-foreground\">\n                            {entry.user?.full_name} • {new Date(entry.date).toLocaleDateString()}\n                          </div>\n                        </div>\n                        <div className=\"flex space-x-2\">\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => router.push(`/dashboard/work-entries/${entry.id}`)}\n                          >\n                            <Eye className=\"mr-2 h-4 w-4\" />\n                            View\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            onClick={() => handleApproveWorkEntry(entry.id)}\n                            disabled={approveWorkEntry.isPending}\n                          >\n                            <CheckCircle className=\"mr-2 h-4 w-4\" />\n                            Approve\n                          </Button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n        )}\n\n        <TabsContent value=\"my-work\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>My Work Entries</CardTitle>\n              <CardDescription>\n                Work entries you have created\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-center py-8 text-muted-foreground\">\n                My work entries view will be implemented based on current user context.\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}