{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-projects.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport {\n  projectsApi,\n  type Project,\n  type ProjectFilters,\n  type CreateProjectRequest,\n  type UpdateProjectRequest,\n  type PaginatedResponse,\n} from \"@/lib/api-client\";\n\n// Query keys\nexport const projectKeys = {\n  all: [\"projects\"] as const,\n  lists: () => [...projectKeys.all, \"list\"] as const,\n  list: (filters: ProjectFilters) => [...projectKeys.lists(), filters] as const,\n  details: () => [...projectKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...projectKeys.details(), id] as const,\n};\n\n// Hooks\nexport function useProjects(filters?: ProjectFilters) {\n  return useQuery({\n    queryKey: projectKeys.list(filters || {}),\n    queryFn: () => projectsApi.getProjects(filters),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useProject(id: string) {\n  return useQuery({\n    queryKey: projectKeys.detail(id),\n    queryFn: () => projectsApi.getProject(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useCreateProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateProjectRequest) => projectsApi.createProject(data),\n    onSuccess: (newProject) => {\n      // Invalidate and refetch projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n\n      // Add the new project to the cache\n      queryClient.setQueryData(projectKeys.detail(newProject.id), newProject);\n\n      toast.success(\"Project created successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to create project: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: UpdateProjectRequest }) =>\n      projectsApi.updateProject(id, data),\n    onMutate: async ({ id, data }) => {\n      // Cancel any outgoing refetches\n      await queryClient.cancelQueries({ queryKey: projectKeys.detail(id) });\n\n      // Snapshot the previous value\n      const previousProject = queryClient.getQueryData(projectKeys.detail(id));\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(projectKeys.detail(id), (old: Project | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Return a context object with the snapshotted value\n      return { previousProject };\n    },\n    onError: (error, { id }, context) => {\n      // If the mutation fails, use the context returned from onMutate to roll back\n      if (context?.previousProject) {\n        queryClient.setQueryData(projectKeys.detail(id), context.previousProject);\n      }\n      toast.error(`Failed to update project: ${error.message}`);\n    },\n    onSuccess: (updatedProject) => {\n      // Invalidate and refetch projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      toast.success(\"Project updated successfully\");\n    },\n    onSettled: (data, error, { id }) => {\n      // Always refetch after error or success\n      queryClient.invalidateQueries({ queryKey: projectKeys.detail(id) });\n    },\n  });\n}\n\nexport function useDeleteProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: string) => projectsApi.deleteProject(id),\n    onSuccess: (_, deletedId) => {\n      // Remove from cache\n      queryClient.removeQueries({ queryKey: projectKeys.detail(deletedId) });\n\n      // Invalidate projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n\n      toast.success(\"Project deleted successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to delete project: ${error.message}`);\n    },\n  });\n}\n\n// Optimistic mutations for better UX\nexport function useOptimisticProjectUpdate() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<Project> }) =>\n      projectsApi.updateProject(id, data),\n    onMutate: async ({ id, data }) => {\n      await queryClient.cancelQueries({ queryKey: projectKeys.detail(id) });\n\n      const previousProject = queryClient.getQueryData(projectKeys.detail(id));\n\n      queryClient.setQueryData(projectKeys.detail(id), (old: Project | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Also update in lists if present\n      queryClient.setQueriesData(\n        { queryKey: projectKeys.lists() },\n        (old: PaginatedResponse<Project> | undefined) => {\n          if (!old) return old;\n\n          return {\n            ...old,\n            items: old.items.map((project) =>\n              project.id === id ? { ...project, ...data } : project\n            ),\n          };\n        }\n      );\n\n      return { previousProject };\n    },\n    onError: (error, { id }, context) => {\n      if (context?.previousProject) {\n        queryClient.setQueryData(projectKeys.detail(id), context.previousProject);\n      }\n      // Invalidate lists to revert optimistic updates\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      toast.error(`Failed to update project: ${error.message}`);\n    },\n    onSuccess: () => {\n      toast.success(\"Project updated successfully\");\n    },\n  });\n}\n\n// Project statistics hook\nexport interface ProjectStats {\n  progress: {\n    totalLength: number;\n    completedLength: number;\n    progressPercentage: number;\n    workEntries: number;\n    pendingApprovals: number;\n    teamMembers: number;\n    materialsCount: number;\n  };\n  phase: {\n    currentPhase: number;\n    totalPhases: number;\n    phaseName: string;\n    phaseProgress: number;\n  };\n  financial: {\n    projectBudget: number;\n    totalSpent: number;\n    spentPercentage: number;\n    remainingBudget: number;\n  };\n}\n\nexport function useProjectStats(projectId: string) {\n  return useQuery({\n    queryKey: [...projectKeys.detail(projectId), \"stats\"],\n    queryFn: async (): Promise<ProjectStats> => {\n      const response = await fetch(`/api/projects/${projectId}/stats`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch project statistics');\n      }\n      return response.json();\n    },\n    staleTime: 2 * 60 * 1000, // 2 minutes - stats change more frequently\n    enabled: !!projectId,\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-geospatial.ts"],"sourcesContent":["\"use client\";\n\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport {\n  geospatialApi,\n  geoRoutesApi,\n  geoLayersApi,\n  geoMeasurementsApi,\n  geoAnnotationsApi,\n  mapTilesApi,\n  geoAnalysisApi\n} from \"@/lib/api-client\";\nimport type {\n  GeospatialFeature,\n  CreateGeospatialFeatureRequest,\n  UpdateGeospatialFeatureRequest,\n  GeospatialFilters,\n  GeoRoute,\n  CreateGeoRouteRequest,\n  UpdateGeoRouteRequest,\n  GeoRouteFilters,\n  GeoLayer,\n  CreateGeoLayerRequest,\n  UpdateGeoLayerRequest,\n  GeoLayerFilters,\n  GeoMeasurement,\n  CreateGeoMeasurementRequest,\n  UpdateGeoMeasurementRequest,\n  GeoMeasurementFilters,\n  GeoAnnotation,\n  CreateGeoAnnotationRequest,\n  UpdateGeoAnnotationRequest,\n  GeoAnnotationFilters,\n  MapTile,\n  MapTileFilters,\n  GeoAnalysisRequest,\n  GeoAnalysisResult,\n  UUID,\n  PaginatedResponse,\n} from \"@/types\";\n\n// Geospatial Features\nexport function useGeospatialFeatures(filters?: GeospatialFilters) {\n  return useQuery({\n    queryKey: [\"geospatial-features\", filters],\n    queryFn: () => geospatialApi.getFeatures(filters),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useGeospatialFeature(id: UUID) {\n  return useQuery({\n    queryKey: [\"geospatial-features\", id],\n    queryFn: () => geospatialApi.getFeature(id),\n    enabled: !!id,\n  });\n}\n\nexport function useCreateGeospatialFeature() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateGeospatialFeatureRequest) =>\n      geospatialApi.createFeature(data),\n    onSuccess: (newFeature) => {\n      queryClient.invalidateQueries({ queryKey: [\"geospatial-features\"] });\n      toast.success(\"Geospatial feature created successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to create geospatial feature\");\n    },\n  });\n}\n\nexport function useUpdateGeospatialFeature() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: UUID; data: UpdateGeospatialFeatureRequest }) =>\n      geospatialApi.updateFeature(id, data),\n    onSuccess: (updatedFeature) => {\n      queryClient.invalidateQueries({ queryKey: [\"geospatial-features\"] });\n      queryClient.invalidateQueries({ queryKey: [\"geospatial-features\", updatedFeature.id] });\n      toast.success(\"Geospatial feature updated successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to update geospatial feature\");\n    },\n  });\n}\n\nexport function useDeleteGeospatialFeature() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: UUID) => geospatialApi.deleteFeature(id),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"geospatial-features\"] });\n      toast.success(\"Geospatial feature deleted successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to delete geospatial feature\");\n    },\n  });\n}\n\n// Geo Routes\nexport function useGeoRoutes(filters?: GeoRouteFilters) {\n  return useQuery({\n    queryKey: [\"geo-routes\", filters],\n    queryFn: () => geoRoutesApi.getRoutes(filters),\n    staleTime: 5 * 60 * 1000,\n  });\n}\n\nexport function useGeoRoute(id: UUID) {\n  return useQuery({\n    queryKey: [\"geo-routes\", id],\n    queryFn: () => geoRoutesApi.getRoute(id),\n    enabled: !!id,\n  });\n}\n\nexport function useCreateGeoRoute() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateGeoRouteRequest) =>\n      geoRoutesApi.createRoute(data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"geo-routes\"] });\n      toast.success(\"Route created successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to create route\");\n    },\n  });\n}\n\nexport function useUpdateGeoRoute() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: UUID; data: UpdateGeoRouteRequest }) =>\n      geoRoutesApi.updateRoute(id, data),\n    onSuccess: (updatedRoute) => {\n      queryClient.invalidateQueries({ queryKey: [\"geo-routes\"] });\n      queryClient.invalidateQueries({ queryKey: [\"geo-routes\", updatedRoute.id] });\n      toast.success(\"Route updated successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to update route\");\n    },\n  });\n}\n\nexport function useDeleteGeoRoute() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: UUID) => geoRoutesApi.deleteRoute(id),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"geo-routes\"] });\n      toast.success(\"Route deleted successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to delete route\");\n    },\n  });\n}\n\nexport function useOptimizeRoute() {\n  return useMutation({\n    mutationFn: (id: UUID) => geoRoutesApi.optimizeRoute(id),\n    onSuccess: () => {\n      toast.success(\"Route optimized successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to optimize route\");\n    },\n  });\n}\n\n// Geo Layers\nexport function useGeoLayers(filters?: GeoLayerFilters) {\n  return useQuery({\n    queryKey: [\"geo-layers\", filters],\n    queryFn: () => geoLayersApi.getLayers(filters),\n    staleTime: 10 * 60 * 1000, // 10 minutes - layers don't change often\n  });\n}\n\nexport function useGeoLayer(id: UUID) {\n  return useQuery({\n    queryKey: [\"geo-layers\", id],\n    queryFn: () => geoLayersApi.getLayer(id),\n    enabled: !!id,\n  });\n}\n\nexport function useCreateGeoLayer() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateGeoLayerRequest) =>\n      geoLayersApi.createLayer(data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"geo-layers\"] });\n      toast.success(\"Layer created successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to create layer\");\n    },\n  });\n}\n\nexport function useUpdateGeoLayer() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: UUID; data: UpdateGeoLayerRequest }) =>\n      geoLayersApi.updateLayer(id, data),\n    onSuccess: (updatedLayer) => {\n      queryClient.invalidateQueries({ queryKey: [\"geo-layers\"] });\n      queryClient.invalidateQueries({ queryKey: [\"geo-layers\", updatedLayer.id] });\n      toast.success(\"Layer updated successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to update layer\");\n    },\n  });\n}\n\nexport function useDeleteGeoLayer() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: UUID) => geoLayersApi.deleteLayer(id),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"geo-layers\"] });\n      toast.success(\"Layer deleted successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to delete layer\");\n    },\n  });\n}\n\n// Geo Measurements\nexport function useGeoMeasurements(filters?: GeoMeasurementFilters) {\n  return useQuery({\n    queryKey: [\"geo-measurements\", filters],\n    queryFn: () => geoMeasurementsApi.getMeasurements(filters),\n    staleTime: 5 * 60 * 1000,\n  });\n}\n\nexport function useGeoMeasurement(id: UUID) {\n  return useQuery({\n    queryKey: [\"geo-measurements\", id],\n    queryFn: () => geoMeasurementsApi.getMeasurement(id),\n    enabled: !!id,\n  });\n}\n\nexport function useCreateGeoMeasurement() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateGeoMeasurementRequest) =>\n      geoMeasurementsApi.createMeasurement(data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"geo-measurements\"] });\n      toast.success(\"Measurement created successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to create measurement\");\n    },\n  });\n}\n\nexport function useUpdateGeoMeasurement() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: UUID; data: UpdateGeoMeasurementRequest }) =>\n      geoMeasurementsApi.updateMeasurement(id, data),\n    onSuccess: (updatedMeasurement) => {\n      queryClient.invalidateQueries({ queryKey: [\"geo-measurements\"] });\n      queryClient.invalidateQueries({ queryKey: [\"geo-measurements\", updatedMeasurement.id] });\n      toast.success(\"Measurement updated successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to update measurement\");\n    },\n  });\n}\n\nexport function useDeleteGeoMeasurement() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: UUID) => geoMeasurementsApi.deleteMeasurement(id),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"geo-measurements\"] });\n      toast.success(\"Measurement deleted successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to delete measurement\");\n    },\n  });\n}\n\n// Geo Annotations\nexport function useGeoAnnotations(filters?: GeoAnnotationFilters) {\n  return useQuery({\n    queryKey: [\"geo-annotations\", filters],\n    queryFn: () => geoAnnotationsApi.getAnnotations(filters),\n    staleTime: 5 * 60 * 1000,\n  });\n}\n\nexport function useGeoAnnotation(id: UUID) {\n  return useQuery({\n    queryKey: [\"geo-annotations\", id],\n    queryFn: () => geoAnnotationsApi.getAnnotation(id),\n    enabled: !!id,\n  });\n}\n\nexport function useCreateGeoAnnotation() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateGeoAnnotationRequest) =>\n      geoAnnotationsApi.createAnnotation(data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"geo-annotations\"] });\n      toast.success(\"Annotation created successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to create annotation\");\n    },\n  });\n}\n\nexport function useUpdateGeoAnnotation() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: UUID; data: UpdateGeoAnnotationRequest }) =>\n      geoAnnotationsApi.updateAnnotation(id, data),\n    onSuccess: (updatedAnnotation) => {\n      queryClient.invalidateQueries({ queryKey: [\"geo-annotations\"] });\n      queryClient.invalidateQueries({ queryKey: [\"geo-annotations\", updatedAnnotation.id] });\n      toast.success(\"Annotation updated successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to update annotation\");\n    },\n  });\n}\n\nexport function useDeleteGeoAnnotation() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: UUID) => geoAnnotationsApi.deleteAnnotation(id),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"geo-annotations\"] });\n      toast.success(\"Annotation deleted successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to delete annotation\");\n    },\n  });\n}\n\n// Map Tiles\nexport function useMapTiles(filters?: MapTileFilters) {\n  return useQuery({\n    queryKey: [\"map-tiles\", filters],\n    queryFn: () => mapTilesApi.getTiles(filters),\n    staleTime: 30 * 60 * 1000, // 30 minutes - tiles are cached\n  });\n}\n\nexport function useMapTile(id: UUID) {\n  return useQuery({\n    queryKey: [\"map-tiles\", id],\n    queryFn: () => mapTilesApi.getTile(id),\n    enabled: !!id,\n  });\n}\n\n// Geo Analysis\nexport function useGeoAnalysis() {\n  return useMutation({\n    mutationFn: (request: GeoAnalysisRequest) =>\n      geoAnalysisApi.performAnalysis(request),\n    onSuccess: () => {\n      toast.success(\"Analysis completed successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Analysis failed\");\n    },\n  });\n}\n\nexport function useGeoAnalysisResults(analysisId?: UUID) {\n  return useQuery({\n    queryKey: [\"geo-analysis-results\", analysisId],\n    queryFn: () => geoAnalysisApi.getAnalysisResults(analysisId!),\n    enabled: !!analysisId,\n  });\n}\n\nexport function useBatchGeoAnalysis() {\n  return useMutation({\n    mutationFn: (requests: GeoAnalysisRequest[]) =>\n      geoAnalysisApi.performBatchAnalysis(requests),\n    onSuccess: () => {\n      toast.success(\"Batch analysis completed successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Batch analysis failed\");\n    },\n  });\n}\n\n// GPS Tracking (for real-time location updates)\nexport function useGPSTracking(userId?: UUID) {\n  return useQuery({\n    queryKey: [\"gps-tracking\", userId],\n    queryFn: () => geospatialApi.getGPSLocation(userId!),\n    enabled: !!userId,\n    refetchInterval: 30000, // Update every 30 seconds\n    staleTime: 25000, // Consider stale after 25 seconds\n  });\n}\n\nexport function useUpdateGPSLocation() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ userId, location }: { userId: UUID; location: { latitude: number; longitude: number; accuracy?: number } }) =>\n      geospatialApi.updateGPSLocation(userId, location),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"gps-tracking\"] });\n    },\n    onError: (error: any) => {\n      console.error(\"GPS location update failed:\", error);\n    },\n  });\n}\n\n// Project Geospatial Data (convenience hooks for project-specific data)\nexport function useProjectGeospatialFeatures(projectId: UUID) {\n  return useGeospatialFeatures({ project_id: projectId });\n}\n\nexport function useProjectGeoRoutes(projectId: UUID) {\n  return useGeoRoutes({ project_id: projectId });\n}\n\nexport function useProjectGeoLayers(projectId: UUID) {\n  return useGeoLayers({ project_id: projectId });\n}\n\nexport function useProjectGeoMeasurements(projectId: UUID) {\n  return useGeoMeasurements({ project_id: projectId });\n}\n\nexport function useProjectGeoAnnotations(projectId: UUID) {\n  return useGeoAnnotations({ project_id: projectId });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1324, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/app/%28dashboard%29/dashboard/geospatial/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport {\n  Map,\n  MapPin,\n  Navigation,\n  Layers,\n  Ruler,\n  Globe,\n  Settings,\n  Download,\n  Upload,\n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useProjects } from \"@/hooks/use-projects\";\nimport {\n  useGeospatialFeatures,\n  useGeoRoutes,\n  useGeoLayers,\n  useGeoMeasurements,\n  useProjectGeospatialFeatures,\n} from \"@/hooks/use-geospatial\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport type { UUID } from \"@/types\";\n\n// Dynamic import to avoid SSR issues\nconst ProjectMap = dynamic(() => import(\"@/components/maps/project-map\"), {\n  ssr: false,\n  loading: () => (\n    <div className=\"h-[600px] bg-muted rounded-lg flex items-center justify-center\">\n      <div className=\"text-center\">\n        <Map className=\"w-8 h-8 mx-auto mb-2 text-muted-foreground\" />\n        <p className=\"text-sm text-muted-foreground\">Loading map...</p>\n      </div>\n    </div>\n  ),\n});\n\nexport default function GeospatialPage() {\n  const [selectedProjectId, setSelectedProjectId] = useState<UUID | undefined>();\n  const [activeTab, setActiveTab] = useState(\"map\");\n  const { user } = useAuth();\n\n  // Data queries\n  const { data: projects } = useProjects({ page: 1, per_page: 100 });\n  const { data: allFeatures } = useGeospatialFeatures();\n  const { data: allRoutes } = useGeoRoutes();\n  const { data: allLayers } = useGeoLayers();\n  const { data: allMeasurements } = useGeoMeasurements();\n  const { data: projectFeatures } = useProjectGeospatialFeatures(\n    selectedProjectId || \"\"\n  );\n\n  const getStatsForProject = (projectId?: UUID) => {\n    if (!projectId) {\n      return {\n        features: allFeatures?.total || 0,\n        routes: allRoutes?.total || 0,\n        layers: allLayers?.total || 0,\n        measurements: allMeasurements?.total || 0,\n      };\n    }\n\n    // In a real implementation, we'd have project-specific stats\n    return {\n      features: projectFeatures?.total || 0,\n      routes: 0,\n      layers: 0,\n      measurements: 0,\n    };\n  };\n\n  const stats = getStatsForProject(selectedProjectId);\n\n  return (\n    <div className=\"flex-1 space-y-4 p-4 md:p-8 pt-6\">\n      <div className=\"flex items-center justify-between space-y-2\">\n        <div>\n          <h2 className=\"text-3xl font-bold tracking-tight\">Geospatial</h2>\n          <p className=\"text-muted-foreground\">\n            Interactive maps and geospatial data management\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button variant=\"outline\">\n            <Upload className=\"mr-2 h-4 w-4\" />\n            Import GIS Data\n          </Button>\n          <Button variant=\"outline\">\n            <Download className=\"mr-2 h-4 w-4\" />\n            Export Data\n          </Button>\n          <Button>\n            <Settings className=\"mr-2 h-4 w-4\" />\n            Map Settings\n          </Button>\n        </div>\n      </div>\n\n      {/* Project Selector */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">Project Selection</CardTitle>\n          <CardDescription>\n            Choose a project to view its geospatial data, or view all data\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex gap-4 items-center\">\n            <div className=\"flex-1\">\n              <Select\n                value={selectedProjectId || \"all\"}\n                onValueChange={(value) =>\n                  setSelectedProjectId(value === \"all\" ? undefined : value)\n                }\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select a project\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Projects</SelectItem>\n                  {projects?.data?.map((project) => (\n                    <SelectItem key={project.id} value={project.id}>\n                      {project.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"flex gap-2\">\n              <Badge variant=\"secondary\">\n                <MapPin className=\"w-3 h-3 mr-1\" />\n                {stats.features} Features\n              </Badge>\n              <Badge variant=\"secondary\">\n                <Navigation className=\"w-3 h-3 mr-1\" />\n                {stats.routes} Routes\n              </Badge>\n              <Badge variant=\"secondary\">\n                <Layers className=\"w-3 h-3 mr-1\" />\n                {stats.layers} Layers\n              </Badge>\n              <Badge variant=\"secondary\">\n                <Ruler className=\"w-3 h-3 mr-1\" />\n                {stats.measurements} Measurements\n              </Badge>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Main Content */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"map\">\n            <Map className=\"w-4 h-4 mr-2\" />\n            Interactive Map\n          </TabsTrigger>\n          <TabsTrigger value=\"features\">\n            <MapPin className=\"w-4 h-4 mr-2\" />\n            Features\n          </TabsTrigger>\n          <TabsTrigger value=\"routes\">\n            <Navigation className=\"w-4 h-4 mr-2\" />\n            Routes\n          </TabsTrigger>\n          <TabsTrigger value=\"layers\">\n            <Layers className=\"w-4 h-4 mr-2\" />\n            Layers\n          </TabsTrigger>\n          <TabsTrigger value=\"measurements\">\n            <Ruler className=\"w-4 h-4 mr-2\" />\n            Measurements\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"map\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Project Map</CardTitle>\n              <CardDescription>\n                Interactive map with geospatial features, GPS tracking, and measurement tools\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {selectedProjectId ? (\n                <ProjectMap\n                  projectId={selectedProjectId}\n                  height=\"600px\"\n                  showControls={true}\n                  showMeasurementTools={user?.role === \"admin\" || user?.role === \"pm\"}\n                  showGPSTracking={true}\n                  defaultCenter={[52.52, 13.405]} // Berlin as default\n                  defaultZoom={13}\n                />\n              ) : (\n                <div className=\"h-[600px] bg-muted rounded-lg flex items-center justify-center\">\n                  <div className=\"text-center\">\n                    <Globe className=\"w-12 h-12 mx-auto mb-4 text-muted-foreground\" />\n                    <h3 className=\"text-lg font-semibold mb-2\">No Project Selected</h3>\n                    <p className=\"text-sm text-muted-foreground mb-4\">\n                      Select a project above to view its geospatial data on the map\n                    </p>\n                    <Button\n                      onClick={() => {\n                        if (projects?.data?.[0]) {\n                          setSelectedProjectId(projects.data[0].id);\n                        }\n                      }}\n                      disabled={!projects?.data?.length}\n                    >\n                      <Map className=\"w-4 h-4 mr-2\" />\n                      View First Project\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"features\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Geospatial Features</CardTitle>\n              <CardDescription>\n                Manage points, lines, and polygons associated with your projects\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex gap-2\">\n                    <Input\n                      placeholder=\"Search features...\"\n                      className=\"w-64\"\n                    />\n                    <Select defaultValue=\"all\">\n                      <SelectTrigger className=\"w-32\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"all\">All Types</SelectItem>\n                        <SelectItem value=\"point\">Points</SelectItem>\n                        <SelectItem value=\"line\">Lines</SelectItem>\n                        <SelectItem value=\"polygon\">Polygons</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <Button>\n                    <MapPin className=\"w-4 h-4 mr-2\" />\n                    Add Feature\n                  </Button>\n                </div>\n\n                {/* Features will be displayed here */}\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  <MapPin className=\"w-8 h-8 mx-auto mb-2\" />\n                  <p>No features found for the selected project</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"routes\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Routes</CardTitle>\n              <CardDescription>\n                Planned and optimized routes for project work\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex gap-2\">\n                    <Input\n                      placeholder=\"Search routes...\"\n                      className=\"w-64\"\n                    />\n                    <Select defaultValue=\"all\">\n                      <SelectTrigger className=\"w-32\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"all\">All Status</SelectItem>\n                        <SelectItem value=\"planned\">Planned</SelectItem>\n                        <SelectItem value=\"active\">Active</SelectItem>\n                        <SelectItem value=\"completed\">Completed</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <Button>\n                    <Navigation className=\"w-4 h-4 mr-2\" />\n                    Create Route\n                  </Button>\n                </div>\n\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  <Navigation className=\"w-8 h-8 mx-auto mb-2\" />\n                  <p>No routes found for the selected project</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"layers\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Map Layers</CardTitle>\n              <CardDescription>\n                Organize geospatial data into thematic layers\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex gap-2\">\n                    <Input\n                      placeholder=\"Search layers...\"\n                      className=\"w-64\"\n                    />\n                    <Select defaultValue=\"all\">\n                      <SelectTrigger className=\"w-32\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"all\">All Types</SelectItem>\n                        <SelectItem value=\"base\">Base</SelectItem>\n                        <SelectItem value=\"overlay\">Overlay</SelectItem>\n                        <SelectItem value=\"annotation\">Annotation</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <Button>\n                    <Layers className=\"w-4 h-4 mr-2\" />\n                    Create Layer\n                  </Button>\n                </div>\n\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  <Layers className=\"w-8 h-8 mx-auto mb-2\" />\n                  <p>No layers found for the selected project</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"measurements\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Measurements</CardTitle>\n              <CardDescription>\n                Distance and area measurements taken on the map\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex gap-2\">\n                    <Input\n                      placeholder=\"Search measurements...\"\n                      className=\"w-64\"\n                    />\n                    <Select defaultValue=\"all\">\n                      <SelectTrigger className=\"w-32\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"all\">All Types</SelectItem>\n                        <SelectItem value=\"distance\">Distance</SelectItem>\n                        <SelectItem value=\"area\">Area</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <Button>\n                    <Ruler className=\"w-4 h-4 mr-2\" />\n                    New Measurement\n                  </Button>\n                </div>\n\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  <Ruler className=\"w-8 h-8 mx-auto mb-2\" />\n                  <p>No measurements found for the selected project</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}