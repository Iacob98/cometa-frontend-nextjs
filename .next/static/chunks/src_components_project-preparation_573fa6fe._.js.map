{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/project-preparation/project-overview.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { AlertCircle, CheckCircle, Euro, MapPin, Calendar, User } from 'lucide-react';\nimport { useProjectPreparation, useUpdateProjectStatus } from '@/hooks/use-project-preparation';\nimport { toast } from 'sonner';\n\ninterface ProjectOverviewProps {\n  projectId: string;\n}\n\nexport default function ProjectOverview({ projectId }: ProjectOverviewProps) {\n  const { data: preparation, isLoading } = useProjectPreparation(projectId);\n  const updateStatusMutation = useUpdateProjectStatus();\n  const [showStatusForm, setShowStatusForm] = useState(false);\n  const [newStatus, setNewStatus] = useState('');\n  const [reason, setReason] = useState('');\n\n  if (isLoading || !preparation) {\n    return <div>Loading project overview...</div>;\n  }\n\n  const { project, potential_revenue } = preparation;\n\n  const handleStatusChange = async () => {\n    if (!newStatus) {\n      toast.error('Please select a status');\n      return;\n    }\n\n    try {\n      await updateStatusMutation.mutateAsync({\n        project_id: projectId,\n        status: newStatus,\n        reason,\n      });\n      setShowStatusForm(false);\n      setNewStatus('');\n      setReason('');\n    } catch (error) {\n      // Error is handled by the mutation\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'draft':\n        return 'bg-gray-100 text-gray-800';\n      case 'planning':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'active':\n        return 'bg-green-100 text-green-800';\n      case 'waiting_invoice':\n        return 'bg-blue-100 text-blue-800';\n      case 'closed':\n        return 'bg-gray-100 text-gray-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'active':\n        return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n      case 'waiting_invoice':\n        return <AlertCircle className=\"w-4 h-4 text-blue-500\" />;\n      default:\n        return <AlertCircle className=\"w-4 h-4 text-yellow-500\" />;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Basic Information */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <MapPin className=\"w-5 h-5\" />\n            Basic Project Information\n          </CardTitle>\n          <CardDescription>\n            Core project details and contact information\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <Label className=\"text-sm font-medium\">Project Name</Label>\n              <p className=\"text-lg font-semibold\">{project.name}</p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium\">Customer</Label>\n              <p className=\"text-lg\">{project.customer || 'Not specified'}</p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium\">City</Label>\n              <p className=\"text-lg\">{project.city || 'Not specified'}</p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium\">Address</Label>\n              <p className=\"text-lg\">{project.address || 'Not specified'}</p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium\">24/7 Contact</Label>\n              <p className=\"text-lg\">{project.contact_24h || 'Not specified'}</p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium\">Project Manager</Label>\n              <p className=\"text-lg\">\n                {project.manager_name || project.manager?.full_name || 'Not assigned'}\n                {!(project.manager_name || project.manager?.full_name) && (\n                  <span className=\"text-red-500 ml-2\">No PM assigned</span>\n                )}\n              </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Planning and Revenue */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Euro className=\"w-5 h-5\" />\n            Planning & Revenue Information\n          </CardTitle>\n          <CardDescription>\n            Project timeline and potential revenue calculation\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <Label className=\"text-sm font-medium flex items-center gap-1\">\n                <Calendar className=\"w-4 h-4\" />\n                Start Date\n              </Label>\n              <p className=\"text-lg\">{project.start_date || 'Not set'}</p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium flex items-center gap-1\">\n                <Calendar className=\"w-4 h-4\" />\n                Planned End Date\n              </Label>\n              <p className=\"text-lg\">{project.end_date_plan || 'Not set'}</p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium\">Total Length</Label>\n              <p className=\"text-lg font-semibold\">{(project.total_length_m || 0).toLocaleString()} m</p>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <Label className=\"text-sm font-medium\">Base Rate per Meter</Label>\n              <p className=\"text-lg font-semibold\">€{(project.base_rate_per_m || 0).toLocaleString()}/m</p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium\">Potential Revenue</Label>\n              <p className=\"text-2xl font-bold text-green-600\">\n                €{(potential_revenue || 0).toLocaleString()}\n              </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Status Management */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            {getStatusIcon(project.status)}\n            Project Status Management\n          </CardTitle>\n          <CardDescription>\n            Current status and status change controls\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <Label className=\"text-sm font-medium\">Current Status</Label>\n              <div className=\"flex items-center gap-2 mt-1\">\n                {getStatusIcon(project.status)}\n                <Badge className={getStatusColor(project.status)}>\n                  {project.status.charAt(0).toUpperCase() + project.status.slice(1)}\n                </Badge>\n              </div>\n            </div>\n            <Button\n              variant=\"outline\"\n              onClick={() => setShowStatusForm(!showStatusForm)}\n            >\n              Change Status\n            </Button>\n          </div>\n\n          {showStatusForm && (\n            <div className=\"border rounded-lg p-4 space-y-4 bg-gray-50\">\n              <div>\n                <Label htmlFor=\"new-status\">New Status</Label>\n                <Select value={newStatus} onValueChange={setNewStatus}>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select new status\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"draft\"> Draft</SelectItem>\n                    <SelectItem value=\"planning\">Planning</SelectItem>\n                    <SelectItem value=\"active\">Active</SelectItem>\n                    <SelectItem value=\"waiting_invoice\"> Waiting Invoice</SelectItem>\n                    <SelectItem value=\"closed\"> Closed</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div>\n                <Label htmlFor=\"reason\">Reason for Change</Label>\n                <Textarea\n                  id=\"reason\"\n                  value={reason}\n                  onChange={(e) => setReason(e.target.value)}\n                  placeholder=\"Describe the reason for the status change...\"\n                  rows={3}\n                />\n              </div>\n\n              <div className=\"flex gap-2\">\n                <Button\n                  onClick={handleStatusChange}\n                  disabled={updateStatusMutation.isPending}\n                >\n                   Save Status\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  onClick={() => {\n                    setShowStatusForm(false);\n                    setNewStatus('');\n                    setReason('');\n                  }}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 817, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/project-preparation/team-access.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport {\n  Users,\n  Plus,\n  Trash2,\n  Shield\n} from 'lucide-react';\nimport { useProjectTeams, useGlobalTeams, useUpdateTeam } from '@/hooks/use-teams';\nimport { toast } from 'sonner';\n\ninterface TeamAccessProps {\n  projectId: string;\n}\n\nexport default function TeamAccess({ projectId }: TeamAccessProps) {\n  const { data: projectTeams, isLoading: projectTeamsLoading } = useProjectTeams(projectId);\n  const { data: globalTeams, isLoading: globalTeamsLoading } = useGlobalTeams();\n  const updateTeamMutation = useUpdateTeam();\n\n  const [showAssignDialog, setShowAssignDialog] = useState(false);\n\n  const handleUnassignTeam = async (teamId: string, teamName: string) => {\n    if (confirm(`Are you sure you want to unassign team \"${teamName}\" from this project?`)) {\n      try {\n        await updateTeamMutation.mutateAsync({\n          id: teamId,\n          data: {\n            project_id: null,\n          }\n        });\n      } catch (error) {\n        // Error is handled by the mutation\n      }\n    }\n  };\n\n  const handleAssignTeam = async (teamId: string) => {\n    try {\n      await updateTeamMutation.mutateAsync({\n        id: teamId,\n        data: {\n          project_id: projectId,\n        }\n      });\n    } catch (error) {\n      // Error is handled by the mutation\n    }\n  };\n\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h3 className=\"text-lg font-semibold\">Project Teams</h3>\n          <p className=\"text-gray-600\">\n            Manage project teams. Foremen automatically get Work Entry access rights.\n          </p>\n        </div>\n      </div>\n          <div className=\"flex items-center justify-between\">\n            <h4 className=\"text-md font-medium\">Teams Assigned to Project</h4>\n            <div className=\"flex items-center gap-2\">\n              <Dialog open={showAssignDialog} onOpenChange={setShowAssignDialog}>\n                <DialogTrigger asChild>\n                  <Button variant=\"outline\" className=\"flex items-center gap-2\">\n                    <Plus className=\"w-4 h-4\" />\n                    Assign Team\n                  </Button>\n                </DialogTrigger>\n                <DialogContent className=\"sm:max-w-[425px]\">\n                  <DialogHeader>\n                    <DialogTitle>Assign Team to Project</DialogTitle>\n                    <DialogDescription>\n                      Select a team to assign to this project. Only unassigned teams are shown.\n                    </DialogDescription>\n                  </DialogHeader>\n                  <div className=\"space-y-4 py-4\">\n                    {globalTeams?.filter(team => !projectTeams?.find(pt => pt.id === team.id))?.length === 0 ? (\n                      <div className=\"text-center py-8 text-gray-500\">\n                        <Users className=\"mx-auto h-8 w-8 mb-2 text-gray-400\" />\n                        <p>No available teams to assign</p>\n                        <p className=\"text-sm\">All teams are already assigned to projects</p>\n                      </div>\n                    ) : (\n                      <div className=\"grid gap-2\">\n                        {globalTeams?.filter(team => !projectTeams?.find(pt => pt.id === team.id))?.map((team) => (\n                          <Button\n                            key={team.id}\n                            variant=\"ghost\"\n                            className=\"justify-start h-auto p-3 border border-gray-200 hover:border-blue-300\"\n                            onClick={() => {\n                              handleAssignTeam(team.id);\n                              setShowAssignDialog(false);\n                            }}\n                          >\n                            <div className=\"flex items-center justify-between w-full\">\n                              <div className=\"text-left\">\n                                <div className=\"font-medium\">{team.name}</div>\n                                {team.foreman_name && (\n                                  <div className=\"text-sm text-gray-600 flex items-center gap-1\">\n                                    <Shield className=\"w-3 h-3\" />\n                                    {team.foreman_name}\n                                  </div>\n                                )}\n                              </div>\n                              <div className=\"text-right text-sm text-gray-500\">\n                                <div>{team.member_count || 0} members</div>\n                                {team.is_active && (\n                                  <div className=\"text-green-600\">Active</div>\n                                )}\n                              </div>\n                            </div>\n                          </Button>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </DialogContent>\n              </Dialog>\n            </div>\n          </div>\n\n          {/* Teams List */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Project Teams</CardTitle>\n              <CardDescription>\n                {projectTeams?.length || 0} teams assigned to this project\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {projectTeamsLoading ? (\n                <div>Loading teams...</div>\n              ) : !projectTeams || projectTeams.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Users className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n                  <h3 className=\"text-lg font-medium mb-2\">No Teams Assigned</h3>\n                  <p className=\"text-gray-600 mb-4\">\n                    Assign teams from the global teams list to get started.\n                  </p>\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Team Name</TableHead>\n                        <TableHead>Foreman</TableHead>\n                        <TableHead>Status</TableHead>\n                        <TableHead>Members</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {projectTeams?.map((team) => (\n                        <TableRow key={team.id}>\n                          <TableCell className=\"font-medium\">\n                            {team.name}\n                          </TableCell>\n                          <TableCell>\n                            {team.foreman_name ? (\n                              <div className=\"flex items-center gap-2\">\n                                <Shield className=\"w-4 h-4 text-blue-600\" />\n                                {team.foreman_name}\n                              </div>\n                            ) : (\n                              <span className=\"text-gray-400\">Not assigned</span>\n                            )}\n                          </TableCell>\n                          <TableCell>\n                            <Badge\n                              variant={team.is_active ? \"default\" : \"secondary\"}\n                            >\n                              {team.is_active ? \"Active\" : \"Inactive\"}\n                            </Badge>\n                          </TableCell>\n                          <TableCell>\n                            <Badge variant=\"outline\">\n                              {team.member_count || 0} members\n                            </Badge>\n                          </TableCell>\n                          <TableCell>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => handleUnassignTeam(team.id, team.name)}\n                              disabled={updateTeamMutation.isPending}\n                            >\n                              <Trash2 className=\"w-4 h-4 text-red-500\" />\n                              Unassign\n                            </Button>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Team Statistics */}\n          {projectTeams && projectTeams.length > 0 && (\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-2xl font-bold\">{projectTeams.length}</div>\n                  <div className=\"text-sm text-gray-600\">Total Teams</div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-2xl font-bold\">\n                    {projectTeams.filter(t => t.foreman_name).length}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">With Foremen</div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-2xl font-bold\">\n                    {projectTeams.filter(t => t.is_active).length}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Active Teams</div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-2xl font-bold\">\n                    {projectTeams.reduce((sum, t) => sum + (t.member_count || 0), 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Total Members</div>\n                </CardContent>\n              </Card>\n            </div>\n          )}\n\n\n      {/* Access Information Card */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Team Access Rights</CardTitle>\n          <CardDescription>\n            Foremen automatically get Work Entry permissions when their team is assigned to this project\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"flex items-start gap-3 p-3 border rounded-lg bg-blue-50\">\n              <Shield className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n              <div>\n                <div className=\"font-medium text-blue-800\">Foreman Access</div>\n                <div className=\"text-sm text-blue-600\">\n                  Can create Work Entries and upload progress photos for their team's work\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-start gap-3 p-3 border rounded-lg bg-green-50\">\n              <Users className=\"w-5 h-5 text-green-600 mt-0.5\" />\n              <div>\n                <div className=\"font-medium text-green-800\">Crew Members</div>\n                <div className=\"text-sm text-green-600\">\n                  Work under foreman supervision, can view work assignments\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1659, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/project-preparation/project-preparation-tab.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Progress } from '@/components/ui/progress';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport {\n  CheckCircle,\n  Circle,\n  AlertCircle,\n  FileText,\n  Users,\n  Home,\n  Truck,\n  Package,\n  MapPin,\n  Phone,\n  Building\n} from 'lucide-react';\nimport { useProjectPreparation } from '@/hooks/use-project-preparation';\nimport ProjectOverview from '@/components/project-preparation/project-overview';\nimport UtilityContacts from '@/components/project-preparation/utility-contacts';\nimport ZoneLayout from '@/components/project-preparation/zone-layout';\nimport FacilitiesManagement from '@/components/project-preparation/facilities-management';\nimport HousingManagement from '@/components/project-preparation/housing-management';\nimport Houses from '@/components/project-preparation/houses';\nimport TeamAccess from '@/components/project-preparation/team-access';\nimport Resources from '@/components/project-preparation/resources';\nimport Materials from '@/components/project-preparation/materials';\nimport Readiness from '@/components/project-preparation/readiness';\nimport { cn } from '@/lib/utils';\n\n// Safe component wrapper to catch runtime errors\nconst SafeComponent = ({ Component, projectId, stepName }: { Component: any, projectId: string, stepName: string }) => {\n  try {\n    if (!Component) {\n      console.error(`Component ${stepName} is undefined`);\n      return (\n        <div className=\"p-6 bg-red-50 border border-red-200 rounded-lg\">\n          <h3 className=\"text-lg font-medium text-red-800 mb-2\">Component Not Found</h3>\n          <p className=\"text-red-600\">Component {stepName} is not properly imported</p>\n        </div>\n      );\n    }\n    return <Component projectId={projectId} />;\n  } catch (error) {\n    console.error(`Error rendering ${stepName}:`, error);\n    return (\n      <div className=\"p-6 bg-yellow-50 border border-yellow-200 rounded-lg\">\n        <h3 className=\"text-lg font-medium text-yellow-800 mb-2\">Component Error</h3>\n        <p className=\"text-yellow-600\">Error rendering {stepName}</p>\n        <p className=\"text-sm text-yellow-500 mt-2\">{error?.toString()}</p>\n      </div>\n    );\n  }\n};\n\nconst PREPARATION_STEPS = [\n  {\n    id: 0,\n    title: 'Project Creation',\n    description: 'Basic project information and setup',\n    icon: FileText,\n    component: ProjectOverview,\n  },\n  {\n    id: 1,\n    title: 'Plans & Communications',\n    description: 'Utility contacts and communication setup',\n    icon: Phone,\n    component: UtilityContacts,\n  },\n  {\n    id: 2,\n    title: 'Zone Layout',\n    description: 'Zone mapping and material planning',\n    icon: MapPin,\n    component: ZoneLayout,\n  },\n  {\n    id: 3,\n    title: 'Facilities & Housing',\n    description: 'Setup facilities and housing arrangements',\n    icon: Building,\n    component: FacilitiesManagement,\n  },\n  {\n    id: 4,\n    title: 'Teams & Access',\n    description: 'Team assignments and access management',\n    icon: Users,\n    component: TeamAccess,\n  },\n  {\n    id: 5,\n    title: 'Resources',\n    description: 'Vehicle and equipment management',\n    icon: Truck,\n    component: Resources,\n  },\n  {\n    id: 6,\n    title: 'Materials',\n    description: 'Material allocation and ordering',\n    icon: Package,\n    component: Materials,\n  },\n  {\n    id: 7,\n    title: 'Houses',\n    description: 'House connection tracking',\n    icon: Home,\n    component: Houses,\n  },\n  {\n    id: 8,\n    title: 'Readiness',\n    description: 'Final readiness checks and activation',\n    icon: CheckCircle,\n    component: Readiness,\n  },\n];\n\nconst getStatusIcon = (status: string) => {\n  switch (status) {\n    case 'draft':\n      return <Circle className=\"w-4 h-4 text-gray-400\" />;\n    case 'planning':\n      return <AlertCircle className=\"w-4 h-4 text-yellow-500\" />;\n    case 'active':\n      return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n    case 'waiting_invoice':\n      return <AlertCircle className=\"w-4 h-4 text-blue-500\" />;\n    case 'closed':\n      return <CheckCircle className=\"w-4 h-4 text-gray-500\" />;\n    default:\n      return <Circle className=\"w-4 h-4 text-gray-400\" />;\n  }\n};\n\nconst getStatusColor = (status: string) => {\n  switch (status) {\n    case 'draft':\n      return 'bg-gray-100 text-gray-800';\n    case 'planning':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'active':\n      return 'bg-green-100 text-green-800';\n    case 'waiting_invoice':\n      return 'bg-blue-100 text-blue-800';\n    case 'closed':\n      return 'bg-gray-100 text-gray-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\ninterface ProjectPreparationTabProps {\n  projectId: string;\n}\n\nexport default function ProjectPreparationTab({ projectId }: ProjectPreparationTabProps) {\n  const [activeStep, setActiveStep] = useState(0);\n  const { data: preparation, isLoading, error } = useProjectPreparation(projectId);\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <Skeleton className=\"h-8 w-1/3\" />\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <Skeleton className=\"h-32\" />\n          <Skeleton className=\"h-32\" />\n          <Skeleton className=\"h-32\" />\n        </div>\n        <Skeleton className=\"h-96\" />\n      </div>\n    );\n  }\n\n  if (error || !preparation) {\n    return (\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"text-center\">\n            <AlertCircle className=\"mx-auto h-12 w-12 text-red-500 mb-4\" />\n            <h3 className=\"text-lg font-medium mb-2\">Error Loading Project</h3>\n            <p className=\"text-gray-600\">\n              {error?.message || 'Failed to load project preparation data'}\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const { project, potential_revenue, preparation_progress, steps_summary } = preparation;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Progress Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <CheckCircle className=\"w-5 h-5 text-green-500\" />\n              <div>\n                <p className=\"text-sm font-medium\">Preparation Progress</p>\n                <p className=\"text-2xl font-bold\">{preparation_progress}%</p>\n                <Progress value={preparation_progress} className=\"mt-2\" />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Package className=\"w-5 h-5 text-blue-500\" />\n              <div>\n                <p className=\"text-sm font-medium\">Total Length</p>\n                <p className=\"text-2xl font-bold\">{(project.total_length_m || 0).toLocaleString()}m</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Truck className=\"w-5 h-5 text-purple-500\" />\n              <div>\n                <p className=\"text-sm font-medium\">Base Rate</p>\n                <p className=\"text-2xl font-bold\">€{project.base_rate_per_m}/m</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Building className=\"w-5 h-5 text-orange-500\" />\n              <div>\n                <p className=\"text-sm font-medium\">Potential Revenue</p>\n                <p className=\"text-2xl font-bold\">€{(potential_revenue || 0).toLocaleString()}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Step Navigation */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Preparation Steps</CardTitle>\n          <CardDescription>\n            Complete each step to prepare the project for activation\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-3 md:grid-cols-9 gap-2\">\n            {PREPARATION_STEPS.map((step) => {\n              const Icon = step.icon;\n              const isCompleted = getStepCompletionStatus(step.id, steps_summary);\n              const isActive = activeStep === step.id;\n\n              return (\n                <Button\n                  key={step.id}\n                  variant={isActive ? 'default' : 'outline'}\n                  size=\"sm\"\n                  className={cn(\n                    'flex flex-col items-center p-3 h-auto',\n                    isCompleted && 'bg-green-50 border-green-200',\n                    isActive && 'ring-2 ring-blue-500'\n                  )}\n                  onClick={() => setActiveStep(step.id)}\n                >\n                  <Icon className={cn(\n                    'w-5 h-5 mb-1',\n                    isCompleted ? 'text-green-600' : 'text-current'\n                  )} />\n                  <span className=\"text-xs\">{step.id}</span>\n                  {isCompleted && (\n                    <CheckCircle className=\"w-3 h-3 text-green-600 mt-1\" />\n                  )}\n                </Button>\n              );\n            })}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Step Content */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center space-x-3\">\n            {(() => {\n              const step = PREPARATION_STEPS[activeStep];\n              const Icon = step.icon;\n              return <Icon className=\"w-6 h-6\" />;\n            })()}\n            <div>\n              <CardTitle>\n                Step {activeStep}: {PREPARATION_STEPS[activeStep].title}\n              </CardTitle>\n              <CardDescription>\n                {PREPARATION_STEPS[activeStep].description}\n              </CardDescription>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {(() => {\n            const step = PREPARATION_STEPS[activeStep];\n            const Component = step.component;\n\n            console.log('Debug: Active step:', activeStep, 'Component:', Component, 'Step:', step);\n\n            return <SafeComponent\n              Component={Component}\n              projectId={projectId}\n              stepName={step.title}\n            />;\n          })()}\n        </CardContent>\n      </Card>\n\n      {/* Navigation */}\n      <div className=\"flex justify-between\">\n        <Button\n          variant=\"outline\"\n          onClick={() => setActiveStep(Math.max(0, activeStep - 1))}\n          disabled={activeStep === 0}\n        >\n          Previous Step\n        </Button>\n        <Button\n          onClick={() => setActiveStep(Math.min(PREPARATION_STEPS.length - 1, activeStep + 1))}\n          disabled={activeStep === PREPARATION_STEPS.length - 1}\n        >\n          Next Step\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction getStepCompletionStatus(stepId: number, summary: any): boolean {\n  // Safe fallback if summary is undefined or null\n  if (!summary) return false;\n\n  switch (stepId) {\n    case 0: // Project Creation - always completed if we can see this page\n      return true;\n    case 1: // Plans & Communications\n      return (summary.utility_contacts || 0) > 0;\n    case 2: // Zone Layout\n      return (summary.cabinets || 0) > 0;\n    case 3: // Facilities & Housing\n      return (summary.facilities || 0) > 0 || (summary.housing_units || 0) > 0;\n    case 4: // Teams & Access\n      return (summary.crews || 0) > 0;\n    case 5: // Resources\n      return (summary.equipment || 0) > 0;\n    case 6: // Materials\n      return (summary.materials || 0) > 0;\n    case 7: // Houses\n      return false; // TODO: Implement proper check\n    case 8: // Readiness\n      return false; // TODO: Implement proper check\n    default:\n      return false;\n  }\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAhCA;;;;;;;;;;;;;;;;;;AAkCA,iDAAiD;AACjD,MAAM,gBAAgB;QAAC,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAA2D;IAChH,IAAI;QACF,IAAI,CAAC,WAAW;YACd,QAAQ,KAAK,CAAC,AAAC,aAAqB,OAAT,UAAS;YACpC,qBACE,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAwC;;;;;;kCACtD,6LAAC;wBAAE,WAAU;;4BAAe;4BAAW;4BAAS;;;;;;;;;;;;;QAGtD;QACA,qBAAO,6LAAC;YAAU,WAAW;;;;;;IAC/B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,AAAC,mBAA2B,OAAT,UAAS,MAAI;QAC9C,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAA2C;;;;;;8BACzD,6LAAC;oBAAE,WAAU;;wBAAkB;wBAAiB;;;;;;;8BAChD,6LAAC;oBAAE,WAAU;8BAAgC,kBAAA,4BAAA,MAAO,QAAQ;;;;;;;;;;;;IAGlE;AACF;KAtBM;AAwBN,MAAM,oBAAoB;IACxB;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM,6NAAQ;QACd,WAAW,iLAAe;IAC5B;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM,gNAAK;QACX,WAAW,iLAAe;IAC5B;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM,uNAAM;QACZ,WAAW,4KAAU;IACvB;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM,yNAAQ;QACd,WAAW,sLAAoB;IACjC;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM,gNAAK;QACX,WAAW,4KAAU;IACvB;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM,gNAAK;QACX,WAAW,uKAAS;IACtB;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM,sNAAO;QACb,WAAW,uKAAS;IACtB;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM,8MAAI;QACV,WAAW,oKAAM;IACnB;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM,6OAAW;QACjB,WAAW,uKAAS;IACtB;CACD;AAED,MAAM,gBAAgB,CAAC;IACrB,OAAQ;QACN,KAAK;YACH,qBAAO,6LAAC,mNAAM;gBAAC,WAAU;;;;;;QAC3B,KAAK;YACH,qBAAO,6LAAC,sOAAW;gBAAC,WAAU;;;;;;QAChC,KAAK;YACH,qBAAO,6LAAC,6OAAW;gBAAC,WAAU;;;;;;QAChC,KAAK;YACH,qBAAO,6LAAC,sOAAW;gBAAC,WAAU;;;;;;QAChC,KAAK;YACH,qBAAO,6LAAC,6OAAW;gBAAC,WAAU;;;;;;QAChC;YACE,qBAAO,6LAAC,mNAAM;gBAAC,WAAU;;;;;;IAC7B;AACF;AAEA,MAAM,iBAAiB,CAAC;IACtB,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAMe,SAAS,sBAAsB,KAAyC;QAAzC,EAAE,SAAS,EAA8B,GAAzC;;IAC5C,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,yKAAQ,EAAC;IAC7C,MAAM,EAAE,MAAM,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,IAAA,yKAAqB,EAAC;IAEtE,IAAI,WAAW;QACb,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC,mJAAQ;oBAAC,WAAU;;;;;;8BACpB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,mJAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC,mJAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC,mJAAQ;4BAAC,WAAU;;;;;;;;;;;;8BAEtB,6LAAC,mJAAQ;oBAAC,WAAU;;;;;;;;;;;;IAG1B;IAEA,IAAI,SAAS,CAAC,aAAa;QACzB,qBACE,6LAAC,2IAAI;sBACH,cAAA,6LAAC,kJAAW;gBAAC,WAAU;0BACrB,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,sOAAW;4BAAC,WAAU;;;;;;sCACvB,6LAAC;4BAAG,WAAU;sCAA2B;;;;;;sCACzC,6LAAC;4BAAE,WAAU;sCACV,CAAA,kBAAA,4BAAA,MAAO,OAAO,KAAI;;;;;;;;;;;;;;;;;;;;;;IAM/B;IAEA,MAAM,EAAE,OAAO,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,aAAa,EAAE,GAAG;IAE5E,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,2IAAI;kCACH,cAAA,6LAAC,kJAAW;4BAAC,WAAU;sCACrB,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,6OAAW;wCAAC,WAAU;;;;;;kDACvB,6LAAC;;0DACC,6LAAC;gDAAE,WAAU;0DAAsB;;;;;;0DACnC,6LAAC;gDAAE,WAAU;;oDAAsB;oDAAqB;;;;;;;0DACxD,6LAAC,mJAAQ;gDAAC,OAAO;gDAAsB,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAMzD,6LAAC,2IAAI;kCACH,cAAA,6LAAC,kJAAW;4BAAC,WAAU;sCACrB,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,sNAAO;wCAAC,WAAU;;;;;;kDACnB,6LAAC;;0DACC,6LAAC;gDAAE,WAAU;0DAAsB;;;;;;0DACnC,6LAAC;gDAAE,WAAU;;oDAAsB,CAAC,QAAQ,cAAc,IAAI,CAAC,EAAE,cAAc;oDAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAM1F,6LAAC,2IAAI;kCACH,cAAA,6LAAC,kJAAW;4BAAC,WAAU;sCACrB,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,gNAAK;wCAAC,WAAU;;;;;;kDACjB,6LAAC;;0DACC,6LAAC;gDAAE,WAAU;0DAAsB;;;;;;0DACnC,6LAAC;gDAAE,WAAU;;oDAAqB;oDAAE,QAAQ,eAAe;oDAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAMpE,6LAAC,2IAAI;kCACH,cAAA,6LAAC,kJAAW;4BAAC,WAAU;sCACrB,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,yNAAQ;wCAAC,WAAU;;;;;;kDACpB,6LAAC;;0DACC,6LAAC;gDAAE,WAAU;0DAAsB;;;;;;0DACnC,6LAAC;gDAAE,WAAU;;oDAAqB;oDAAE,CAAC,qBAAqB,CAAC,EAAE,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQrF,6LAAC,2IAAI;;kCACH,6LAAC,iJAAU;;0CACT,6LAAC,gJAAS;0CAAC;;;;;;0CACX,6LAAC,sJAAe;0CAAC;;;;;;;;;;;;kCAInB,6LAAC,kJAAW;kCACV,cAAA,6LAAC;4BAAI,WAAU;sCACZ,kBAAkB,GAAG,CAAC,CAAC;gCACtB,MAAM,OAAO,KAAK,IAAI;gCACtB,MAAM,cAAc,wBAAwB,KAAK,EAAE,EAAE;gCACrD,MAAM,WAAW,eAAe,KAAK,EAAE;gCAEvC,qBACE,6LAAC,+IAAM;oCAEL,SAAS,WAAW,YAAY;oCAChC,MAAK;oCACL,WAAW,IAAA,4HAAE,EACX,yCACA,eAAe,gCACf,YAAY;oCAEd,SAAS,IAAM,cAAc,KAAK,EAAE;;sDAEpC,6LAAC;4CAAK,WAAW,IAAA,4HAAE,EACjB,gBACA,cAAc,mBAAmB;;;;;;sDAEnC,6LAAC;4CAAK,WAAU;sDAAW,KAAK,EAAE;;;;;;wCACjC,6BACC,6LAAC,6OAAW;4CAAC,WAAU;;;;;;;mCAhBpB,KAAK,EAAE;;;;;4BAoBlB;;;;;;;;;;;;;;;;;0BAMN,6LAAC,2IAAI;;kCACH,6LAAC,iJAAU;kCACT,cAAA,6LAAC;4BAAI,WAAU;;gCACZ,CAAC;oCACA,MAAM,OAAO,iBAAiB,CAAC,WAAW;oCAC1C,MAAM,OAAO,KAAK,IAAI;oCACtB,qBAAO,6LAAC;wCAAK,WAAU;;;;;;gCACzB,CAAC;8CACD,6LAAC;;sDACC,6LAAC,gJAAS;;gDAAC;gDACH;gDAAW;gDAAG,iBAAiB,CAAC,WAAW,CAAC,KAAK;;;;;;;sDAEzD,6LAAC,sJAAe;sDACb,iBAAiB,CAAC,WAAW,CAAC,WAAW;;;;;;;;;;;;;;;;;;;;;;;kCAKlD,6LAAC,kJAAW;kCACT,CAAC;4BACA,MAAM,OAAO,iBAAiB,CAAC,WAAW;4BAC1C,MAAM,YAAY,KAAK,SAAS;4BAEhC,QAAQ,GAAG,CAAC,uBAAuB,YAAY,cAAc,WAAW,SAAS;4BAEjF,qBAAO,6LAAC;gCACN,WAAW;gCACX,WAAW;gCACX,UAAU,KAAK,KAAK;;;;;;wBAExB,CAAC;;;;;;;;;;;;0BAKL,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,+IAAM;wBACL,SAAQ;wBACR,SAAS,IAAM,cAAc,KAAK,GAAG,CAAC,GAAG,aAAa;wBACtD,UAAU,eAAe;kCAC1B;;;;;;kCAGD,6LAAC,+IAAM;wBACL,SAAS,IAAM,cAAc,KAAK,GAAG,CAAC,kBAAkB,MAAM,GAAG,GAAG,aAAa;wBACjF,UAAU,eAAe,kBAAkB,MAAM,GAAG;kCACrD;;;;;;;;;;;;;;;;;;AAMT;GAzLwB;;QAE0B,yKAAqB;;;MAF/C;AA2LxB,SAAS,wBAAwB,MAAc,EAAE,OAAY;IAC3D,gDAAgD;IAChD,IAAI,CAAC,SAAS,OAAO;IAErB,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO,CAAC,QAAQ,gBAAgB,IAAI,CAAC,IAAI;QAC3C,KAAK;YACH,OAAO,CAAC,QAAQ,QAAQ,IAAI,CAAC,IAAI;QACnC,KAAK;YACH,OAAO,CAAC,QAAQ,UAAU,IAAI,CAAC,IAAI,KAAK,CAAC,QAAQ,aAAa,IAAI,CAAC,IAAI;QACzE,KAAK;YACH,OAAO,CAAC,QAAQ,KAAK,IAAI,CAAC,IAAI;QAChC,KAAK;YACH,OAAO,CAAC,QAAQ,SAAS,IAAI,CAAC,IAAI;QACpC,KAAK;YACH,OAAO,CAAC,QAAQ,SAAS,IAAI,CAAC,IAAI;QACpC,KAAK;YACH,OAAO,OAAO,+BAA+B;QAC/C,KAAK;YACH,OAAO,OAAO,+BAA+B;QAC/C;YACE,OAAO;IACX;AACF","debugId":null}}]
}