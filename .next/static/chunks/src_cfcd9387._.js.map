{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,2KAAgB,MAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;IACxB,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,2KAAgB,MAG7B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,6KAAoB;QACnB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;;;AAGb,OAAO,WAAW,GAAG,6KAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,8KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,+BAA+B;QAC5C,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,8KAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,2KAAgB,OAGrC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,iLAAwB;QACvB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,wEACA;QAED,GAAG,KAAK;;;;;;;;AAGb,eAAe,WAAW,GAAG,iLAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-suppliers.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\n\n// Query keys\nexport const supplierKeys = {\n  all: [\"suppliers\"] as const,\n  lists: () => [...supplierKeys.all, \"list\"] as const,\n  list: (filters: string) => [...supplierKeys.lists(), { filters }] as const,\n  details: () => [...supplierKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...supplierKeys.details(), id] as const,\n};\n\nexport interface Supplier {\n  id: string;\n  org_name: string;\n  contact_person: string;\n  phone?: string;\n  email?: string;\n  address?: string;\n  notes?: string;\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface CreateSupplierData {\n  org_name: string;\n  contact_person: string;\n  phone?: string;\n  email?: string;\n  address?: string;\n  notes?: string;\n}\n\nexport interface UpdateSupplierData {\n  id: string;\n  org_name?: string;\n  contact_person?: string;\n  phone?: string;\n  email?: string;\n  address?: string;\n  notes?: string;\n}\n\nexport interface SupplierContact {\n  id: string;\n  supplier_id: string;\n  contact_name: string;\n  position?: string;\n  department?: string;\n  phone?: string;\n  email?: string;\n  is_primary: boolean;\n  is_active: boolean;\n  notes?: string;\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface CreateContactData {\n  contact_name: string;\n  position?: string;\n  department?: string;\n  phone?: string;\n  email?: string;\n  is_primary?: boolean;\n  notes?: string;\n}\n\nexport interface UpdateContactData {\n  contact_name?: string;\n  position?: string;\n  department?: string;\n  phone?: string;\n  email?: string;\n  is_primary?: boolean;\n  notes?: string;\n}\n\nexport interface SupplierMaterial {\n  id: string;\n  supplier_id: string;\n  material_id: string;\n  supplier_part_number?: string;\n  unit_price: number;\n  minimum_order_qty: number;\n  lead_time_days?: number;\n  is_preferred: boolean;\n  last_price_update?: string;\n  notes?: string;\n  created_at: string;\n  updated_at: string;\n  material: {\n    id: string;\n    name: string;\n    category?: string;\n    unit: string;\n    unit_price_eur: number;\n    supplier_name?: string;\n    description?: string;\n    is_active: boolean;\n  };\n  material_name?: string;\n  material_category?: string;\n  material_unit?: string;\n  material_description?: string;\n}\n\nexport interface CreateMaterialData {\n  material_id?: string;\n  material_name?: string;\n  category?: string;\n  unit?: string;\n  supplier_part_number?: string;\n  unit_price: number;\n  minimum_order_qty?: number;\n  lead_time_days?: number;\n  is_preferred?: boolean;\n  notes?: string;\n}\n\nexport interface ProjectAssignment {\n  id: string;\n  project_id: string;\n  supplier_id: string;\n  supplier_role: string;\n  contact_person?: string;\n  contract_reference?: string;\n  start_date?: string;\n  end_date?: string;\n  status: string;\n  notes?: string;\n  created_at: string;\n  updated_at: string;\n  assigned_at?: string; // For compatibility\n  project_name?: string;\n  project_customer?: string;\n  project_city?: string;\n  project_status?: string;\n}\n\nexport interface CreateProjectAssignmentData {\n  project_id: string;\n  supplier_role?: string;\n  contact_person?: string;\n  contract_reference?: string;\n  start_date?: string;\n  end_date?: string;\n  status?: string;\n  notes?: string;\n}\n\n// Fetch suppliers\nasync function fetchSuppliers(): Promise<Supplier[]> {\n  const response = await fetch(\"/api/suppliers\");\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch suppliers\");\n  }\n  const data = await response.json();\n  // Extract items array from paginated response and map name to org_name\n  const suppliers = data.items || [];\n  return suppliers.map((supplier: any) => ({\n    ...supplier,\n    org_name: supplier.name,\n  }));\n}\n\n// Fetch single supplier\nasync function fetchSupplier(id: string): Promise<Supplier> {\n  const response = await fetch(`/api/suppliers/${id}`);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch supplier\");\n  }\n  return response.json();\n}\n\n// Create supplier\nasync function createSupplier(data: CreateSupplierData): Promise<Supplier> {\n  // Map org_name to name for API compatibility\n  const { org_name, ...restData } = data;\n  const apiData = {\n    ...restData,\n    name: org_name,\n  };\n\n  const response = await fetch(\"/api/suppliers\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(apiData),\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to create supplier\");\n  }\n\n  const result = await response.json();\n\n  // Map name back to org_name for frontend compatibility\n  return {\n    ...result,\n    org_name: result.name,\n  };\n}\n\n// Update supplier\nasync function updateSupplier(data: UpdateSupplierData): Promise<Supplier> {\n  const { id, ...updateData } = data;\n  const response = await fetch(`/api/suppliers/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(updateData),\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to update supplier\");\n  }\n\n  return response.json();\n}\n\n// Delete supplier\nasync function deleteSupplier(id: string): Promise<void> {\n  const response = await fetch(`/api/suppliers/${id}`, {\n    method: \"DELETE\",\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to delete supplier\");\n  }\n}\n\n// Fetch supplier contacts\nasync function fetchSupplierContacts(supplierId: string): Promise<SupplierContact[]> {\n  const response = await fetch(`/api/suppliers/${supplierId}/contacts`);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch supplier contacts\");\n  }\n  return response.json();\n}\n\n// Create supplier contact\nasync function createSupplierContact(supplierId: string, data: CreateContactData): Promise<SupplierContact> {\n  const response = await fetch(`/api/suppliers/${supplierId}/contacts`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to create supplier contact\");\n  }\n\n  return response.json();\n}\n\n// Update supplier contact\nasync function updateSupplierContact(supplierId: string, contactId: string, data: UpdateContactData): Promise<SupplierContact> {\n  const response = await fetch(`/api/suppliers/${supplierId}/contacts/${contactId}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to update supplier contact\");\n  }\n\n  return response.json();\n}\n\n// Delete supplier contact\nasync function deleteSupplierContact(supplierId: string, contactId: string): Promise<void> {\n  const response = await fetch(`/api/suppliers/${supplierId}/contacts/${contactId}`, {\n    method: \"DELETE\",\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to delete supplier contact\");\n  }\n}\n\n// Fetch supplier materials\nasync function fetchSupplierMaterials(supplierId: string, projectId?: string): Promise<SupplierMaterial[]> {\n  const url = new URL(`/api/suppliers/${supplierId}/materials`, window.location.origin);\n  if (projectId) {\n    url.searchParams.set('project_id', projectId);\n  }\n\n  const response = await fetch(url.toString());\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch supplier materials\");\n  }\n  return response.json();\n}\n\n// Create supplier material\nasync function createSupplierMaterial(supplierId: string, data: CreateMaterialData): Promise<SupplierMaterial> {\n  const response = await fetch(`/api/suppliers/${supplierId}/materials`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({ error: 'Unknown error' }));\n    throw new Error(errorData.error || `Failed to create supplier material (${response.status})`);\n  }\n\n  return response.json();\n}\n\n// Fetch supplier project assignments\nasync function fetchSupplierProjects(supplierId: string): Promise<ProjectAssignment[]> {\n  const response = await fetch(`/api/suppliers/${supplierId}/projects`);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch supplier projects\");\n  }\n  return response.json();\n}\n\n// Create supplier project assignment\nasync function createSupplierProjectAssignment(supplierId: string, data: CreateProjectAssignmentData): Promise<ProjectAssignment> {\n  const response = await fetch(`/api/suppliers/${supplierId}/projects`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to assign supplier to project\");\n  }\n\n  return response.json();\n}\n\n// Hooks\nexport function useSuppliers() {\n  return useQuery({\n    queryKey: supplierKeys.lists(),\n    queryFn: fetchSuppliers,\n    staleTime: 1000 * 60 * 5, // 5 minutes\n  });\n}\n\nexport function useSupplier(id: string) {\n  return useQuery({\n    queryKey: supplierKeys.detail(id),\n    queryFn: () => fetchSupplier(id),\n    enabled: !!id,\n    staleTime: 1000 * 60 * 5,\n  });\n}\n\nexport function useCreateSupplier() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: createSupplier,\n    onSuccess: (newSupplier) => {\n      // Update suppliers list\n      queryClient.setQueryData<Supplier[]>(\n        supplierKeys.lists(),\n        (oldSuppliers = []) => [...oldSuppliers, newSupplier]\n      );\n\n      // Invalidate suppliers queries\n      queryClient.invalidateQueries({ queryKey: supplierKeys.all });\n\n      toast.success(\"Supplier created successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to create supplier: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateSupplier() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: updateSupplier,\n    onSuccess: (updatedSupplier) => {\n      // Update suppliers list\n      queryClient.setQueryData<Supplier[]>(\n        supplierKeys.lists(),\n        (oldSuppliers = []) =>\n          oldSuppliers.map((supplier) =>\n            supplier.id === updatedSupplier.id ? updatedSupplier : supplier\n          )\n      );\n\n      // Update individual supplier cache\n      queryClient.setQueryData(\n        supplierKeys.detail(updatedSupplier.id),\n        updatedSupplier\n      );\n\n      // Invalidate related queries\n      queryClient.invalidateQueries({ queryKey: supplierKeys.all });\n\n      toast.success(\"Supplier updated successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to update supplier: ${error.message}`);\n    },\n  });\n}\n\nexport function useDeleteSupplier() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: deleteSupplier,\n    onSuccess: (_, deletedId) => {\n      // Remove from suppliers list\n      queryClient.setQueryData<Supplier[]>(\n        supplierKeys.lists(),\n        (oldSuppliers = []) =>\n          oldSuppliers.filter((supplier) => supplier.id !== deletedId)\n      );\n\n      // Remove individual supplier cache\n      queryClient.removeQueries({\n        queryKey: supplierKeys.detail(deletedId),\n      });\n\n      // Invalidate related queries\n      queryClient.invalidateQueries({ queryKey: supplierKeys.all });\n\n      toast.success(\"Supplier deleted successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to delete supplier: ${error.message}`);\n    },\n  });\n}\n\n// Supplier Contacts Hooks\nexport function useSupplierContacts(supplierId: string) {\n  return useQuery({\n    queryKey: [...supplierKeys.detail(supplierId), \"contacts\"],\n    queryFn: () => fetchSupplierContacts(supplierId),\n    enabled: !!supplierId,\n    staleTime: 1000 * 60 * 5,\n  });\n}\n\nexport function useCreateSupplierContact(supplierId: string) {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateContactData) => createSupplierContact(supplierId, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [...supplierKeys.detail(supplierId), \"contacts\"]\n      });\n      toast.success(\"Contact created successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to create contact: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateSupplierContact(supplierId: string) {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ contactId, data }: { contactId: string; data: UpdateContactData }) =>\n      updateSupplierContact(supplierId, contactId, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [...supplierKeys.detail(supplierId), \"contacts\"]\n      });\n      toast.success(\"Contact updated successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to update contact: ${error.message}`);\n    },\n  });\n}\n\nexport function useDeleteSupplierContact(supplierId: string) {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (contactId: string) => deleteSupplierContact(supplierId, contactId),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [...supplierKeys.detail(supplierId), \"contacts\"]\n      });\n      toast.success(\"Contact deleted successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to delete contact: ${error.message}`);\n    },\n  });\n}\n\n// Supplier Materials Hooks\nexport function useSupplierMaterials(supplierId: string, projectId?: string) {\n  return useQuery({\n    queryKey: [...supplierKeys.detail(supplierId), \"materials\", { projectId }],\n    queryFn: () => fetchSupplierMaterials(supplierId, projectId),\n    enabled: !!supplierId,\n    staleTime: 1000 * 60 * 5,\n  });\n}\n\nexport function useCreateSupplierMaterial(supplierId: string) {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateMaterialData) => createSupplierMaterial(supplierId, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [...supplierKeys.detail(supplierId), \"materials\"]\n      });\n      toast.success(\"Material created successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to create material: ${error.message}`);\n    },\n  });\n}\n\n// Supplier Projects Hooks\nexport function useSupplierProjects(supplierId: string) {\n  return useQuery({\n    queryKey: [...supplierKeys.detail(supplierId), \"projects\"],\n    queryFn: () => fetchSupplierProjects(supplierId),\n    enabled: !!supplierId,\n    staleTime: 1000 * 60 * 5,\n  });\n}\n\nexport function useCreateSupplierProjectAssignment(supplierId: string) {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateProjectAssignmentData) => createSupplierProjectAssignment(supplierId, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [...supplierKeys.detail(supplierId), \"projects\"]\n      });\n      toast.success(\"Supplier assigned to project successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to assign supplier to project: ${error.message}`);\n    },\n  });\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA;;;;AAGO,MAAM,eAAe;IAC1B,KAAK;QAAC;KAAY;IAClB,OAAO,IAAM;eAAI,aAAa,GAAG;YAAE;SAAO;IAC1C,MAAM,CAAC,UAAoB;eAAI,aAAa,KAAK;YAAI;gBAAE;YAAQ;SAAE;IACjE,SAAS,IAAM;eAAI,aAAa,GAAG;YAAE;SAAS;IAC9C,QAAQ,CAAC,KAAe;eAAI,aAAa,OAAO;YAAI;SAAG;AACzD;AA6IA,kBAAkB;AAClB,eAAe;IACb,MAAM,WAAW,MAAM,MAAM;IAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,uEAAuE;IACvE,MAAM,YAAY,KAAK,KAAK,IAAI,EAAE;IAClC,OAAO,UAAU,GAAG,CAAC,CAAC,WAAkB,CAAC;YACvC,GAAG,QAAQ;YACX,UAAU,SAAS,IAAI;QACzB,CAAC;AACH;AAEA,wBAAwB;AACxB,eAAe,cAAc,EAAU;IACrC,MAAM,WAAW,MAAM,MAAM,AAAC,kBAAoB,OAAH;IAC/C,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,SAAS,IAAI;AACtB;AAEA,kBAAkB;AAClB,eAAe,eAAe,IAAwB;IACpD,6CAA6C;IAC7C,MAAM,EAAE,QAAQ,EAAE,GAAG,UAAU,GAAG;IAClC,MAAM,UAAU;QACd,GAAG,QAAQ;QACX,MAAM;IACR;IAEA,MAAM,WAAW,MAAM,MAAM,kBAAkB;QAC7C,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,SAAS,MAAM,SAAS,IAAI;IAElC,uDAAuD;IACvD,OAAO;QACL,GAAG,MAAM;QACT,UAAU,OAAO,IAAI;IACvB;AACF;AAEA,kBAAkB;AAClB,eAAe,eAAe,IAAwB;IACpD,MAAM,EAAE,EAAE,EAAE,GAAG,YAAY,GAAG;IAC9B,MAAM,WAAW,MAAM,MAAM,AAAC,kBAAoB,OAAH,KAAM;QACnD,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,SAAS,IAAI;AACtB;AAEA,kBAAkB;AAClB,eAAe,eAAe,EAAU;IACtC,MAAM,WAAW,MAAM,MAAM,AAAC,kBAAoB,OAAH,KAAM;QACnD,QAAQ;IACV;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;AACF;AAEA,0BAA0B;AAC1B,eAAe,sBAAsB,UAAkB;IACrD,MAAM,WAAW,MAAM,MAAM,AAAC,kBAA4B,OAAX,YAAW;IAC1D,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,SAAS,IAAI;AACtB;AAEA,0BAA0B;AAC1B,eAAe,sBAAsB,UAAkB,EAAE,IAAuB;IAC9E,MAAM,WAAW,MAAM,MAAM,AAAC,kBAA4B,OAAX,YAAW,cAAY;QACpE,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,SAAS,IAAI;AACtB;AAEA,0BAA0B;AAC1B,eAAe,sBAAsB,UAAkB,EAAE,SAAiB,EAAE,IAAuB;IACjG,MAAM,WAAW,MAAM,MAAM,AAAC,kBAAwC,OAAvB,YAAW,cAAsB,OAAV,YAAa;QACjF,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,SAAS,IAAI;AACtB;AAEA,0BAA0B;AAC1B,eAAe,sBAAsB,UAAkB,EAAE,SAAiB;IACxE,MAAM,WAAW,MAAM,MAAM,AAAC,kBAAwC,OAAvB,YAAW,cAAsB,OAAV,YAAa;QACjF,QAAQ;IACV;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;AACF;AAEA,2BAA2B;AAC3B,eAAe,uBAAuB,UAAkB,EAAE,SAAkB;IAC1E,MAAM,MAAM,IAAI,IAAI,AAAC,kBAA4B,OAAX,YAAW,eAAa,OAAO,QAAQ,CAAC,MAAM;IACpF,IAAI,WAAW;QACb,IAAI,YAAY,CAAC,GAAG,CAAC,cAAc;IACrC;IAEA,MAAM,WAAW,MAAM,MAAM,IAAI,QAAQ;IACzC,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,SAAS,IAAI;AACtB;AAEA,2BAA2B;AAC3B,eAAe,uBAAuB,UAAkB,EAAE,IAAwB;IAChF,MAAM,WAAW,MAAM,MAAM,AAAC,kBAA4B,OAAX,YAAW,eAAa;QACrE,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC;gBAAE,OAAO;YAAgB,CAAC;QAC/E,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,AAAC,uCAAsD,OAAhB,SAAS,MAAM,EAAC;IAC5F;IAEA,OAAO,SAAS,IAAI;AACtB;AAEA,qCAAqC;AACrC,eAAe,sBAAsB,UAAkB;IACrD,MAAM,WAAW,MAAM,MAAM,AAAC,kBAA4B,OAAX,YAAW;IAC1D,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,SAAS,IAAI;AACtB;AAEA,qCAAqC;AACrC,eAAe,gCAAgC,UAAkB,EAAE,IAAiC;IAClG,MAAM,WAAW,MAAM,MAAM,AAAC,kBAA4B,OAAX,YAAW,cAAY;QACpE,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,SAAS,IAAI;AACtB;AAGO,SAAS;;IACd,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,aAAa,KAAK;QAC5B,SAAS;QACT,WAAW,OAAO,KAAK;IACzB;AACF;GANgB;;QACP,0LAAQ;;;AAOV,SAAS,YAAY,EAAU;;IACpC,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU,aAAa,MAAM,CAAC;QAC9B,OAAO;oCAAE,IAAM,cAAc;;QAC7B,SAAS,CAAC,CAAC;QACX,WAAW,OAAO,KAAK;IACzB;AACF;IAPgB;;QACP,0LAAQ;;;AAQV,SAAS;;IACd,MAAM,cAAc,IAAA,2MAAc;IAElC,OAAO,IAAA,gMAAW,EAAC;QACjB,YAAY;QACZ,SAAS;6CAAE,CAAC;gBACV,wBAAwB;gBACxB,YAAY,YAAY,CACtB,aAAa,KAAK;qDAClB;4BAAC,gFAAe,EAAE;+BAAK;+BAAI;4BAAc;yBAAY;;;gBAGvD,+BAA+B;gBAC/B,YAAY,iBAAiB,CAAC;oBAAE,UAAU,aAAa,GAAG;gBAAC;gBAE3D,oJAAK,CAAC,OAAO,CAAC;YAChB;;QACA,OAAO;6CAAE,CAAC;gBACR,oJAAK,CAAC,KAAK,CAAC,AAAC,8BAA2C,OAAd,MAAM,OAAO;YACzD;;IACF;AACF;IArBgB;;QACM,2MAAc;QAE3B,gMAAW;;;AAoBb,SAAS;;IACd,MAAM,cAAc,IAAA,2MAAc;IAElC,OAAO,IAAA,gMAAW,EAAC;QACjB,YAAY;QACZ,SAAS;6CAAE,CAAC;gBACV,wBAAwB;gBACxB,YAAY,YAAY,CACtB,aAAa,KAAK;qDAClB;4BAAC,gFAAe,EAAE;+BAChB,aAAa,GAAG;6DAAC,CAAC,WAChB,SAAS,EAAE,KAAK,gBAAgB,EAAE,GAAG,kBAAkB;;;;gBAI7D,mCAAmC;gBACnC,YAAY,YAAY,CACtB,aAAa,MAAM,CAAC,gBAAgB,EAAE,GACtC;gBAGF,6BAA6B;gBAC7B,YAAY,iBAAiB,CAAC;oBAAE,UAAU,aAAa,GAAG;gBAAC;gBAE3D,oJAAK,CAAC,OAAO,CAAC;YAChB;;QACA,OAAO;6CAAE,CAAC;gBACR,oJAAK,CAAC,KAAK,CAAC,AAAC,8BAA2C,OAAd,MAAM,OAAO;YACzD;;IACF;AACF;IA9BgB;;QACM,2MAAc;QAE3B,gMAAW;;;AA6Bb,SAAS;;IACd,MAAM,cAAc,IAAA,2MAAc;IAElC,OAAO,IAAA,gMAAW,EAAC;QACjB,YAAY;QACZ,SAAS;6CAAE,CAAC,GAAG;gBACb,6BAA6B;gBAC7B,YAAY,YAAY,CACtB,aAAa,KAAK;qDAClB;4BAAC,gFAAe,EAAE;+BAChB,aAAa,MAAM;6DAAC,CAAC,WAAa,SAAS,EAAE,KAAK;;;;gBAGtD,mCAAmC;gBACnC,YAAY,aAAa,CAAC;oBACxB,UAAU,aAAa,MAAM,CAAC;gBAChC;gBAEA,6BAA6B;gBAC7B,YAAY,iBAAiB,CAAC;oBAAE,UAAU,aAAa,GAAG;gBAAC;gBAE3D,oJAAK,CAAC,OAAO,CAAC;YAChB;;QACA,OAAO;6CAAE,CAAC;gBACR,oJAAK,CAAC,KAAK,CAAC,AAAC,8BAA2C,OAAd,MAAM,OAAO;YACzD;;IACF;AACF;IA3BgB;;QACM,2MAAc;QAE3B,gMAAW;;;AA2Bb,SAAS,oBAAoB,UAAkB;;IACpD,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU;eAAI,aAAa,MAAM,CAAC;YAAa;SAAW;QAC1D,OAAO;4CAAE,IAAM,sBAAsB;;QACrC,SAAS,CAAC,CAAC;QACX,WAAW,OAAO,KAAK;IACzB;AACF;IAPgB;;QACP,0LAAQ;;;AAQV,SAAS,yBAAyB,UAAkB;;IACzD,MAAM,cAAc,IAAA,2MAAc;IAElC,OAAO,IAAA,gMAAW,EAAC;QACjB,UAAU;oDAAE,CAAC,OAA4B,sBAAsB,YAAY;;QAC3E,SAAS;oDAAE;gBACT,YAAY,iBAAiB,CAAC;oBAC5B,UAAU;2BAAI,aAAa,MAAM,CAAC;wBAAa;qBAAW;gBAC5D;gBACA,oJAAK,CAAC,OAAO,CAAC;YAChB;;QACA,OAAO;oDAAE,CAAC;gBACR,oJAAK,CAAC,KAAK,CAAC,AAAC,6BAA0C,OAAd,MAAM,OAAO;YACxD;;IACF;AACF;IAfgB;;QACM,2MAAc;QAE3B,gMAAW;;;AAcb,SAAS,yBAAyB,UAAkB;;IACzD,MAAM,cAAc,IAAA,2MAAc;IAElC,OAAO,IAAA,gMAAW,EAAC;QACjB,UAAU;oDAAE;oBAAC,EAAE,SAAS,EAAE,IAAI,EAAkD;uBAC9E,sBAAsB,YAAY,WAAW;;;QAC/C,SAAS;oDAAE;gBACT,YAAY,iBAAiB,CAAC;oBAC5B,UAAU;2BAAI,aAAa,MAAM,CAAC;wBAAa;qBAAW;gBAC5D;gBACA,oJAAK,CAAC,OAAO,CAAC;YAChB;;QACA,OAAO;oDAAE,CAAC;gBACR,oJAAK,CAAC,KAAK,CAAC,AAAC,6BAA0C,OAAd,MAAM,OAAO;YACxD;;IACF;AACF;IAhBgB;;QACM,2MAAc;QAE3B,gMAAW;;;AAeb,SAAS,yBAAyB,UAAkB;;IACzD,MAAM,cAAc,IAAA,2MAAc;IAElC,OAAO,IAAA,gMAAW,EAAC;QACjB,UAAU;oDAAE,CAAC,YAAsB,sBAAsB,YAAY;;QACrE,SAAS;oDAAE;gBACT,YAAY,iBAAiB,CAAC;oBAC5B,UAAU;2BAAI,aAAa,MAAM,CAAC;wBAAa;qBAAW;gBAC5D;gBACA,oJAAK,CAAC,OAAO,CAAC;YAChB;;QACA,OAAO;oDAAE,CAAC;gBACR,oJAAK,CAAC,KAAK,CAAC,AAAC,6BAA0C,OAAd,MAAM,OAAO;YACxD;;IACF;AACF;IAfgB;;QACM,2MAAc;QAE3B,gMAAW;;;AAeb,SAAS,qBAAqB,UAAkB,EAAE,SAAkB;;IACzE,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU;eAAI,aAAa,MAAM,CAAC;YAAa;YAAa;gBAAE;YAAU;SAAE;QAC1E,OAAO;6CAAE,IAAM,uBAAuB,YAAY;;QAClD,SAAS,CAAC,CAAC;QACX,WAAW,OAAO,KAAK;IACzB;AACF;IAPgB;;QACP,0LAAQ;;;AAQV,SAAS,0BAA0B,UAAkB;;IAC1D,MAAM,cAAc,IAAA,2MAAc;IAElC,OAAO,IAAA,gMAAW,EAAC;QACjB,UAAU;qDAAE,CAAC,OAA6B,uBAAuB,YAAY;;QAC7E,SAAS;qDAAE;gBACT,YAAY,iBAAiB,CAAC;oBAC5B,UAAU;2BAAI,aAAa,MAAM,CAAC;wBAAa;qBAAY;gBAC7D;gBACA,oJAAK,CAAC,OAAO,CAAC;YAChB;;QACA,OAAO;qDAAE,CAAC;gBACR,oJAAK,CAAC,KAAK,CAAC,AAAC,8BAA2C,OAAd,MAAM,OAAO;YACzD;;IACF;AACF;KAfgB;;QACM,2MAAc;QAE3B,gMAAW;;;AAeb,SAAS,oBAAoB,UAAkB;;IACpD,OAAO,IAAA,0LAAQ,EAAC;QACd,UAAU;eAAI,aAAa,MAAM,CAAC;YAAa;SAAW;QAC1D,OAAO;4CAAE,IAAM,sBAAsB;;QACrC,SAAS,CAAC,CAAC;QACX,WAAW,OAAO,KAAK;IACzB;AACF;KAPgB;;QACP,0LAAQ;;;AAQV,SAAS,mCAAmC,UAAkB;;IACnE,MAAM,cAAc,IAAA,2MAAc;IAElC,OAAO,IAAA,gMAAW,EAAC;QACjB,UAAU;8DAAE,CAAC,OAAsC,gCAAgC,YAAY;;QAC/F,SAAS;8DAAE;gBACT,YAAY,iBAAiB,CAAC;oBAC5B,UAAU;2BAAI,aAAa,MAAM,CAAC;wBAAa;qBAAW;gBAC5D;gBACA,oJAAK,CAAC,OAAO,CAAC;YAChB;;QACA,OAAO;8DAAE,CAAC;gBACR,oJAAK,CAAC,KAAK,CAAC,AAAC,yCAAsD,OAAd,MAAM,OAAO;YACpE;;IACF;AACF;KAfgB;;QACM,2MAAc;QAE3B,gMAAW","debugId":null}},
    {"offset": {"line": 709, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-projects.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport {\n  projectsApi,\n  type Project,\n  type ProjectFilters,\n  type CreateProjectRequest,\n  type UpdateProjectRequest,\n  type PaginatedResponse,\n} from \"@/lib/api-client\";\n\n// Query keys\nexport const projectKeys = {\n  all: [\"projects\"] as const,\n  lists: () => [...projectKeys.all, \"list\"] as const,\n  list: (filters: ProjectFilters) => [...projectKeys.lists(), filters] as const,\n  details: () => [...projectKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...projectKeys.details(), id] as const,\n};\n\n// Hooks\nexport function useProjects(filters?: ProjectFilters) {\n  return useQuery({\n    queryKey: projectKeys.list(filters || {}),\n    queryFn: () => projectsApi.getProjects(filters),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useProject(id: string) {\n  return useQuery({\n    queryKey: projectKeys.detail(id),\n    queryFn: () => projectsApi.getProject(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useCreateProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateProjectRequest) => projectsApi.createProject(data),\n    onSuccess: (newProject) => {\n      // Invalidate and refetch projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n\n      // Add the new project to the cache\n      queryClient.setQueryData(projectKeys.detail(newProject.id), newProject);\n\n      toast.success(\"Project created successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to create project: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: UpdateProjectRequest }) =>\n      projectsApi.updateProject(id, data),\n    onMutate: async ({ id, data }) => {\n      // Cancel any outgoing refetches\n      await queryClient.cancelQueries({ queryKey: projectKeys.detail(id) });\n\n      // Snapshot the previous value\n      const previousProject = queryClient.getQueryData(projectKeys.detail(id));\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(projectKeys.detail(id), (old: Project | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Return a context object with the snapshotted value\n      return { previousProject };\n    },\n    onError: (error, { id }, context) => {\n      // If the mutation fails, use the context returned from onMutate to roll back\n      if (context?.previousProject) {\n        queryClient.setQueryData(projectKeys.detail(id), context.previousProject);\n      }\n      toast.error(`Failed to update project: ${error.message}`);\n    },\n    onSuccess: (updatedProject) => {\n      // Invalidate and refetch projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      toast.success(\"Project updated successfully\");\n    },\n    onSettled: (data, error, { id }) => {\n      // Always refetch after error or success\n      queryClient.invalidateQueries({ queryKey: projectKeys.detail(id) });\n    },\n  });\n}\n\nexport function useDeleteProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: string) => projectsApi.deleteProject(id),\n    onSuccess: (_, deletedId) => {\n      // Remove from cache\n      queryClient.removeQueries({ queryKey: projectKeys.detail(deletedId) });\n\n      // Invalidate projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n\n      toast.success(\"Project deleted successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to delete project: ${error.message}`);\n    },\n  });\n}\n\n// Optimistic mutations for better UX\nexport function useOptimisticProjectUpdate() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<Project> }) =>\n      projectsApi.updateProject(id, data),\n    onMutate: async ({ id, data }) => {\n      await queryClient.cancelQueries({ queryKey: projectKeys.detail(id) });\n\n      const previousProject = queryClient.getQueryData(projectKeys.detail(id));\n\n      queryClient.setQueryData(projectKeys.detail(id), (old: Project | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Also update in lists if present\n      queryClient.setQueriesData(\n        { queryKey: projectKeys.lists() },\n        (old: PaginatedResponse<Project> | undefined) => {\n          if (!old) return old;\n\n          return {\n            ...old,\n            items: old.items.map((project) =>\n              project.id === id ? { ...project, ...data } : project\n            ),\n          };\n        }\n      );\n\n      return { previousProject };\n    },\n    onError: (error, { id }, context) => {\n      if (context?.previousProject) {\n        queryClient.setQueryData(projectKeys.detail(id), context.previousProject);\n      }\n      // Invalidate lists to revert optimistic updates\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      toast.error(`Failed to update project: ${error.message}`);\n    },\n    onSuccess: () => {\n      toast.success(\"Project updated successfully\");\n    },\n  });\n}\n\n// Project statistics hook\nexport interface ProjectStats {\n  progress: {\n    totalLength: number;\n    completedLength: number;\n    progressPercentage: number;\n    workEntries: number;\n    pendingApprovals: number;\n    teamMembers: number;\n    materialsCount: number;\n  };\n  phase: {\n    currentPhase: number;\n    totalPhases: number;\n    phaseName: string;\n    phaseProgress: number;\n  };\n  financial: {\n    projectBudget: number;\n    totalSpent: number;\n    spentPercentage: number;\n    remainingBudget: number;\n  };\n}\n\nexport function useProjectStats(projectId: string) {\n  return useQuery({\n    queryKey: [...projectKeys.detail(projectId), \"stats\"],\n    queryFn: async (): Promise<ProjectStats> => {\n      const response = await fetch(`/api/projects/${projectId}/stats`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch project statistics');\n      }\n      return response.json();\n    },\n    staleTime: 2 * 60 * 1000, // 2 minutes - stats change more frequently\n    enabled: !!projectId,\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1029, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/app/%28dashboard%29/dashboard/materials/suppliers/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useParams, useRouter } from \"next/navigation\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport {\n  ArrowLeft,\n  Plus,\n  Edit,\n  Trash2,\n  User,\n  Phone,\n  Mail,\n  MapPin,\n  Building2,\n  Package,\n  Users,\n  Star,\n  Settings\n} from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { toast } from \"sonner\";\n\nimport {\n  useSupplier,\n  useSupplierContacts,\n  useSupplierMaterials,\n  useSupplierProjects,\n  useCreateSupplierContact,\n  useDeleteSupplierContact,\n  useCreateSupplierMaterial,\n  useCreateSupplierProjectAssignment,\n  type CreateContactData,\n  type CreateMaterialData,\n  type CreateProjectAssignmentData,\n  type SupplierContact,\n  type SupplierMaterial,\n  type ProjectAssignment\n} from \"@/hooks/use-suppliers\";\nimport { usePermissions } from \"@/hooks/use-auth\";\nimport { useProjects } from \"@/hooks/use-projects\";\n\nconst contactSchema = z.object({\n  contact_name: z.string().min(1, \"Contact name is required\"),\n  position: z.string().optional(),\n  department: z.string().optional(),\n  phone: z.string().optional(),\n  email: z.string().email(\"Invalid email\").optional().or(z.literal(\"\")),\n  is_primary: z.boolean().default(false),\n  notes: z.string().optional(),\n});\n\nconst materialSchema = z.object({\n  material_name: z.string().min(1, \"Material name is required\"),\n  category: z.string().optional(),\n  unit: z.string().min(1, \"Unit is required\"),\n  supplier_part_number: z.string().optional(),\n  unit_price: z.number().positive(\"Price must be positive\"),\n  minimum_order_qty: z.number().positive(\"Minimum order quantity must be positive\").default(1),\n  lead_time_days: z.string().optional().transform(val => val === \"\" ? undefined : parseInt(val) || undefined),\n  is_preferred: z.boolean().default(false),\n  notes: z.string().optional(),\n});\n\nconst projectAssignmentSchema = z.object({\n  project_id: z.string().min(1, \"Project is required\"),\n  notes: z.string().optional(),\n  assigned_by: z.string().optional(),\n});\n\ntype ContactFormData = z.infer<typeof contactSchema>;\ntype MaterialFormData = z.infer<typeof materialSchema>;\ntype ProjectAssignmentFormData = z.infer<typeof projectAssignmentSchema>;\n\nexport default function SupplierDetailPage() {\n  const params = useParams();\n  const router = useRouter();\n  const { canManageInventory } = usePermissions();\n  const supplierId = params.id as string;\n\n  const [isAddContactOpen, setIsAddContactOpen] = useState(false);\n  const [isAddMaterialOpen, setIsAddMaterialOpen] = useState(false);\n  const [isAssignProjectOpen, setIsAssignProjectOpen] = useState(false);\n  const [editingContact, setEditingContact] = useState<any>(null);\n\n  const { data: supplier, isLoading } = useSupplier(supplierId);\n  const { data: contacts = [], isLoading: contactsLoading } = useSupplierContacts(supplierId);\n  const { data: supplierMaterials = [], isLoading: materialsLoading } = useSupplierMaterials(supplierId);\n  const { data: assignedProjects = [], isLoading: projectsLoading } = useSupplierProjects(supplierId);\n  const { data: projectsResponse, isLoading: allProjectsLoading } = useProjects();\n  const projects = projectsResponse?.items || [];\n\n  const createContact = useCreateSupplierContact(supplierId);\n  const deleteContact = useDeleteSupplierContact(supplierId);\n  const createMaterial = useCreateSupplierMaterial(supplierId);\n  const createProjectAssignment = useCreateSupplierProjectAssignment(supplierId);\n\n  const contactForm = useForm<ContactFormData>({\n    resolver: zodResolver(contactSchema),\n    defaultValues: {\n      contact_name: \"\",\n      position: \"\",\n      department: \"\",\n      phone: \"\",\n      email: \"\",\n      is_primary: false,\n      notes: \"\",\n    },\n  });\n\n  const materialForm = useForm<MaterialFormData>({\n    resolver: zodResolver(materialSchema),\n    defaultValues: {\n      material_name: \"\",\n      category: \"\",\n      unit: \"\",\n      supplier_part_number: \"\",\n      unit_price: 0,\n      minimum_order_qty: 1,\n      lead_time_days: \"\",\n      is_preferred: false,\n      notes: \"\",\n    },\n  });\n\n  const projectAssignmentForm = useForm<ProjectAssignmentFormData>({\n    resolver: zodResolver(projectAssignmentSchema),\n    defaultValues: {\n      project_id: \"\",\n      notes: \"\",\n      assigned_by: \"\",\n    },\n  });\n\n\n  const handleAddContact = async (data: ContactFormData) => {\n    try {\n      await createContact.mutateAsync(data);\n      setIsAddContactOpen(false);\n      contactForm.reset();\n    } catch (error) {\n      // Error is handled by the mutation hook\n    }\n  };\n\n  const handleAddMaterial = async (data: MaterialFormData) => {\n    try {\n      await createMaterial.mutateAsync(data);\n      setIsAddMaterialOpen(false);\n      materialForm.reset();\n    } catch (error) {\n      // Error is handled by the mutation hook\n    }\n  };\n\n  const handleAssignProject = async (data: ProjectAssignmentFormData) => {\n    try {\n      await createProjectAssignment.mutateAsync(data);\n      setIsAssignProjectOpen(false);\n      projectAssignmentForm.reset();\n    } catch (error) {\n      // Error is handled by the mutation hook\n    }\n  };\n\n  const handleDeleteContact = async (contactId: string) => {\n    if (!window.confirm(\"Are you sure you want to delete this contact?\")) return;\n\n    try {\n      await deleteContact.mutateAsync(contactId);\n    } catch (error) {\n      // Error is handled by the mutation hook\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center space-x-4\">\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => router.back()}>\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back\n          </Button>\n          <div className=\"h-8 bg-muted rounded w-64 animate-pulse\"></div>\n        </div>\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          <div className=\"lg:col-span-2 space-y-6\">\n            <Card className=\"animate-pulse\">\n              <CardHeader>\n                <div className=\"h-6 bg-muted rounded w-48\"></div>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"h-4 bg-muted rounded\"></div>\n                <div className=\"h-4 bg-muted rounded w-3/4\"></div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!supplier) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center space-x-4\">\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => router.back()}>\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back\n          </Button>\n        </div>\n        <Card>\n          <CardContent className=\"text-center py-12\">\n            <Building2 className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n            <h3 className=\"mt-4 text-lg font-semibold\">Supplier not found</h3>\n            <p className=\"text-muted-foreground\">The supplier you're looking for doesn't exist.</p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => router.back()}>\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back\n          </Button>\n          <div>\n            <h1 className=\"text-3xl font-bold tracking-tight\">{supplier.org_name}</h1>\n            <p className=\"text-muted-foreground\">Supplier Details & Management</p>\n          </div>\n        </div>\n        {canManageInventory && (\n          <div className=\"flex space-x-2\">\n            <Button variant=\"outline\">\n              <Settings className=\"mr-2 h-4 w-4\" />\n              Settings\n            </Button>\n            <Button>\n              <Edit className=\"mr-2 h-4 w-4\" />\n              Edit Supplier\n            </Button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Main Content */}\n        <div className=\"lg:col-span-2\">\n          <Tabs defaultValue=\"overview\" className=\"space-y-6\">\n            <TabsList>\n              <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n              <TabsTrigger value=\"contacts\">Contacts</TabsTrigger>\n              <TabsTrigger value=\"materials\">Materials</TabsTrigger>\n              <TabsTrigger value=\"projects\">Projects</TabsTrigger>\n            </TabsList>\n\n            {/* Overview Tab */}\n            <TabsContent value=\"overview\" className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Supplier Information</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Organization</label>\n                      <p className=\"text-sm\">{supplier.org_name}</p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Status</label>\n                      <Badge variant={supplier.is_active ? \"default\" : \"secondary\"}>\n                        {supplier.is_active ? \"Active\" : \"Inactive\"}\n                      </Badge>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Primary Contact</label>\n                      <p className=\"text-sm\">{supplier.contact_person}</p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Phone</label>\n                      <p className=\"text-sm\">{supplier.phone || \"Not provided\"}</p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Email</label>\n                      <p className=\"text-sm\">{supplier.email || \"Not provided\"}</p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Address</label>\n                      <p className=\"text-sm\">{supplier.address || \"Not provided\"}</p>\n                    </div>\n                  </div>\n                  {supplier.notes && (\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Notes</label>\n                      <p className=\"text-sm\">{supplier.notes}</p>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            {/* Contacts Tab */}\n            <TabsContent value=\"contacts\" className=\"space-y-6\">\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between\">\n                  <div>\n                    <CardTitle>Contact Persons</CardTitle>\n                    <CardDescription>Manage contacts for this supplier</CardDescription>\n                  </div>\n                  {canManageInventory && (\n                    <Dialog open={isAddContactOpen} onOpenChange={setIsAddContactOpen}>\n                      <DialogTrigger asChild>\n                        <Button size=\"sm\">\n                          <Plus className=\"mr-2 h-4 w-4\" />\n                          Add Contact\n                        </Button>\n                      </DialogTrigger>\n                      <DialogContent>\n                        <DialogHeader>\n                          <DialogTitle>Add New Contact</DialogTitle>\n                          <DialogDescription>\n                            Add a new contact person for {supplier.org_name}\n                          </DialogDescription>\n                        </DialogHeader>\n                        <Form {...contactForm}>\n                          <form onSubmit={contactForm.handleSubmit(handleAddContact)} className=\"space-y-4\">\n                            <FormField\n                              control={contactForm.control}\n                              name=\"contact_name\"\n                              render={({ field }) => (\n                                <FormItem>\n                                  <FormLabel>Contact Name *</FormLabel>\n                                  <FormControl>\n                                    <Input placeholder=\"e.g., John Smith\" {...field} />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n                            <div className=\"grid grid-cols-2 gap-4\">\n                              <FormField\n                                control={contactForm.control}\n                                name=\"position\"\n                                render={({ field }) => (\n                                  <FormItem>\n                                    <FormLabel>Position</FormLabel>\n                                    <FormControl>\n                                      <Input placeholder=\"e.g., Sales Manager\" {...field} />\n                                    </FormControl>\n                                    <FormMessage />\n                                  </FormItem>\n                                )}\n                              />\n                              <FormField\n                                control={contactForm.control}\n                                name=\"department\"\n                                render={({ field }) => (\n                                  <FormItem>\n                                    <FormLabel>Department</FormLabel>\n                                    <FormControl>\n                                      <Input placeholder=\"e.g., Sales\" {...field} />\n                                    </FormControl>\n                                    <FormMessage />\n                                  </FormItem>\n                                )}\n                              />\n                            </div>\n                            <div className=\"grid grid-cols-2 gap-4\">\n                              <FormField\n                                control={contactForm.control}\n                                name=\"phone\"\n                                render={({ field }) => (\n                                  <FormItem>\n                                    <FormLabel>Phone</FormLabel>\n                                    <FormControl>\n                                      <Input placeholder=\"+1234567890\" {...field} />\n                                    </FormControl>\n                                    <FormMessage />\n                                  </FormItem>\n                                )}\n                              />\n                              <FormField\n                                control={contactForm.control}\n                                name=\"email\"\n                                render={({ field }) => (\n                                  <FormItem>\n                                    <FormLabel>Email</FormLabel>\n                                    <FormControl>\n                                      <Input placeholder=\"contact@company.com\" {...field} />\n                                    </FormControl>\n                                    <FormMessage />\n                                  </FormItem>\n                                )}\n                              />\n                            </div>\n                            <FormField\n                              control={contactForm.control}\n                              name=\"is_primary\"\n                              render={({ field }) => (\n                                <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-3\">\n                                  <div className=\"space-y-0.5\">\n                                    <FormLabel>Primary Contact</FormLabel>\n                                    <div className=\"text-sm text-muted-foreground\">\n                                      Set as the main contact for this supplier\n                                    </div>\n                                  </div>\n                                  <FormControl>\n                                    <Switch\n                                      checked={field.value}\n                                      onCheckedChange={field.onChange}\n                                    />\n                                  </FormControl>\n                                </FormItem>\n                              )}\n                            />\n                            <FormField\n                              control={contactForm.control}\n                              name=\"notes\"\n                              render={({ field }) => (\n                                <FormItem>\n                                  <FormLabel>Notes</FormLabel>\n                                  <FormControl>\n                                    <Textarea placeholder=\"Additional notes...\" rows={2} {...field} />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n                            <DialogFooter>\n                              <Button type=\"button\" variant=\"outline\" onClick={() => setIsAddContactOpen(false)}>\n                                Cancel\n                              </Button>\n                              <Button type=\"submit\">Add Contact</Button>\n                            </DialogFooter>\n                          </form>\n                        </Form>\n                      </DialogContent>\n                    </Dialog>\n                  )}\n                </CardHeader>\n                <CardContent>\n                  {contactsLoading ? (\n                    <div className=\"space-y-4\">\n                      {[...Array(2)].map((_, i) => (\n                        <div key={i} className=\"flex items-center justify-between p-4 border rounded-lg animate-pulse\">\n                          <div className=\"flex items-center space-x-4\">\n                            <div className=\"h-10 w-10 bg-muted rounded-full\"></div>\n                            <div>\n                              <div className=\"h-4 bg-muted rounded w-32 mb-2\"></div>\n                              <div className=\"h-3 bg-muted rounded w-24\"></div>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : contacts.length === 0 ? (\n                    <div className=\"text-center py-8\">\n                      <User className=\"mx-auto h-8 w-8 text-muted-foreground\" />\n                      <h3 className=\"mt-2 text-sm font-semibold\">No contacts</h3>\n                      <p className=\"mt-1 text-sm text-muted-foreground\">\n                        Get started by adding a contact person.\n                      </p>\n                      {canManageInventory && (\n                        <Button className=\"mt-4\" onClick={() => setIsAddContactOpen(true)}>\n                          <Plus className=\"mr-2 h-4 w-4\" />\n                          Add Contact\n                        </Button>\n                      )}\n                    </div>\n                  ) : (\n                    <div className=\"space-y-4\">\n                      {contacts.map((contact) => (\n                      <div key={contact.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                        <div className=\"flex items-center space-x-4\">\n                          <Avatar>\n                            <AvatarFallback>\n                              <User className=\"h-4 w-4\" />\n                            </AvatarFallback>\n                          </Avatar>\n                          <div>\n                            <div className=\"flex items-center space-x-2\">\n                              <h4 className=\"font-medium\">{contact.contact_name}</h4>\n                              {contact.is_primary && (\n                                <Badge variant=\"default\" className=\"text-xs\">\n                                  <Star className=\"h-3 w-3 mr-1\" />\n                                  Primary\n                                </Badge>\n                              )}\n                            </div>\n                            <p className=\"text-sm text-muted-foreground\">\n                              {contact.position} • {contact.department}\n                            </p>\n                            <div className=\"flex items-center space-x-4 text-xs text-muted-foreground mt-1\">\n                              {contact.phone && (\n                                <span className=\"flex items-center\">\n                                  <Phone className=\"h-3 w-3 mr-1\" />\n                                  {contact.phone}\n                                </span>\n                              )}\n                              {contact.email && (\n                                <span className=\"flex items-center\">\n                                  <Mail className=\"h-3 w-3 mr-1\" />\n                                  {contact.email}\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                        {canManageInventory && (\n                          <div className=\"flex space-x-1\">\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <Edit className=\"h-3 w-3\" />\n                            </Button>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => handleDeleteContact(contact.id)}\n                            >\n                              <Trash2 className=\"h-3 w-3\" />\n                            </Button>\n                          </div>\n                        )}\n                      </div>\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            {/* Materials Tab */}\n            <TabsContent value=\"materials\" className=\"space-y-6\">\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between\">\n                  <div>\n                    <CardTitle>Supplier Materials</CardTitle>\n                    <CardDescription>Materials and equipment available from this supplier</CardDescription>\n                  </div>\n                  {canManageInventory && (\n                    <Button size=\"sm\" onClick={() => setIsAddMaterialOpen(true)}>\n                      <Plus className=\"mr-2 h-4 w-4\" />\n                      Add Material\n                    </Button>\n                  )}\n                </CardHeader>\n                <CardContent>\n                  {materialsLoading ? (\n                    <div className=\"space-y-4\">\n                      {[...Array(2)].map((_, i) => (\n                        <div key={i} className=\"flex items-center justify-between p-4 border rounded-lg animate-pulse\">\n                          <div className=\"flex items-center space-x-4\">\n                            <div className=\"h-10 w-10 bg-muted rounded-lg\"></div>\n                            <div>\n                              <div className=\"h-4 bg-muted rounded w-48 mb-2\"></div>\n                              <div className=\"h-3 bg-muted rounded w-32\"></div>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : supplierMaterials.length === 0 ? (\n                    <div className=\"text-center py-8\">\n                      <Package className=\"mx-auto h-8 w-8 text-muted-foreground\" />\n                      <h3 className=\"mt-2 text-sm font-semibold\">No materials</h3>\n                      <p className=\"mt-1 text-sm text-muted-foreground\">\n                        Get started by adding materials or equipment to this supplier.\n                      </p>\n                      {canManageInventory && (\n                        <Button className=\"mt-4\" onClick={() => setIsAddMaterialOpen(true)}>\n                          <Plus className=\"mr-2 h-4 w-4\" />\n                          Add Material\n                        </Button>\n                      )}\n                    </div>\n                  ) : (\n                    <div className=\"space-y-4\">\n                      {supplierMaterials.map((material) => (\n                      <div key={material.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                        <div className=\"flex items-center space-x-4\">\n                          <div className=\"h-10 w-10 bg-muted rounded-lg flex items-center justify-center\">\n                            <Package className=\"h-5 w-5\" />\n                          </div>\n                          <div>\n                            <h4 className=\"font-medium\">{material.material?.name || material.material_name}</h4>\n                            <p className=\"text-sm text-muted-foreground\">\n                              €{material.unit_price} per {material.material?.unit || material.material_unit} • Min order: {material.minimum_order_qty} {material.material?.unit || material.material_unit}\n                            </p>\n                            {material.supplier_part_number && (\n                              <p className=\"text-xs text-muted-foreground\">\n                                Part #: {material.supplier_part_number}\n                              </p>\n                            )}\n                            {material.is_preferred && (\n                              <Badge variant=\"secondary\" className=\"text-xs\">Preferred</Badge>\n                            )}\n                          </div>\n                        </div>\n                        {canManageInventory && (\n                          <div className=\"flex space-x-1\">\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <Edit className=\"h-3 w-3\" />\n                            </Button>\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <Trash2 className=\"h-3 w-3\" />\n                            </Button>\n                          </div>\n                        )}\n                      </div>\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            {/* Projects Tab */}\n            <TabsContent value=\"projects\" className=\"space-y-6\">\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between\">\n                  <div>\n                    <CardTitle>Assigned Projects</CardTitle>\n                    <CardDescription>Projects where this supplier is assigned</CardDescription>\n                  </div>\n                  {canManageInventory && (\n                    <Button size=\"sm\" onClick={() => setIsAssignProjectOpen(true)}>\n                      <Plus className=\"mr-2 h-4 w-4\" />\n                      Assign to Project\n                    </Button>\n                  )}\n                </CardHeader>\n                <CardContent>\n                  {projectsLoading ? (\n                    <div className=\"space-y-4\">\n                      {[...Array(2)].map((_, i) => (\n                        <div key={i} className=\"flex items-center justify-between p-4 border rounded-lg animate-pulse\">\n                          <div>\n                            <div className=\"h-4 bg-muted rounded w-56 mb-2\"></div>\n                            <div className=\"h-3 bg-muted rounded w-32\"></div>\n                          </div>\n                          <div className=\"h-6 w-16 bg-muted rounded\"></div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : assignedProjects.length === 0 ? (\n                    <div className=\"text-center py-8\">\n                      <Building2 className=\"mx-auto h-8 w-8 text-muted-foreground\" />\n                      <h3 className=\"mt-2 text-sm font-semibold\">No project assignments</h3>\n                      <p className=\"mt-1 text-sm text-muted-foreground\">\n                        Assign this supplier to projects to track material orders.\n                      </p>\n                      {canManageInventory && (\n                        <Button className=\"mt-4\" onClick={() => setIsAssignProjectOpen(true)}>\n                          <Plus className=\"mr-2 h-4 w-4\" />\n                          Assign to Project\n                        </Button>\n                      )}\n                    </div>\n                  ) : (\n                    <div className=\"space-y-4\">\n                      {assignedProjects.map((project) => (\n                      <div key={project.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                        <div>\n                          <h4 className=\"font-medium\">{project.project_name}</h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            Assigned on {project.assigned_at ? new Date(project.assigned_at).toLocaleDateString() : 'Unknown'}\n                          </p>\n                          {project.notes && (\n                            <p className=\"text-xs text-muted-foreground mt-1\">{project.notes}</p>\n                          )}\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Badge variant={project.status === 'active' ? 'default' : 'secondary'}>\n                            {project.status}\n                          </Badge>\n                          {canManageInventory && (\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <Edit className=\"h-3 w-3\" />\n                            </Button>\n                          )}\n                        </div>\n                      </div>\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </Tabs>\n        </div>\n\n        {/* Sidebar */}\n        <div className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Quick Stats</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Users className=\"h-4 w-4 text-muted-foreground\" />\n                  <span className=\"text-sm\">Contacts</span>\n                </div>\n                <span className=\"text-sm font-medium\">{contacts.length}</span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Package className=\"h-4 w-4 text-muted-foreground\" />\n                  <span className=\"text-sm\">Materials</span>\n                </div>\n                <span className=\"text-sm font-medium\">{supplierMaterials.length}</span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Building2 className=\"h-4 w-4 text-muted-foreground\" />\n                  <span className=\"text-sm\">Projects</span>\n                </div>\n                <span className=\"text-sm font-medium\">{assignedProjects.length}</span>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Recent Activity</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3 text-sm\">\n                <div>\n                  <p className=\"font-medium\">Material order placed</p>\n                  <p className=\"text-muted-foreground\">2 days ago</p>\n                </div>\n                <div>\n                  <p className=\"font-medium\">Contact updated</p>\n                  <p className=\"text-muted-foreground\">1 week ago</p>\n                </div>\n                <div>\n                  <p className=\"font-medium\">Assigned to new project</p>\n                  <p className=\"text-muted-foreground\">2 weeks ago</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      {/* Add Material Dialog */}\n      <Dialog open={isAddMaterialOpen} onOpenChange={setIsAddMaterialOpen}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Add New Material</DialogTitle>\n            <DialogDescription>\n              Add a new material or equipment item for {supplier.org_name}\n            </DialogDescription>\n          </DialogHeader>\n          <Form {...materialForm}>\n            <form onSubmit={materialForm.handleSubmit(handleAddMaterial)} className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <FormField\n                  control={materialForm.control}\n                  name=\"material_name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Material Name *</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., Fiber optic cable, Cable duct\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={materialForm.control}\n                  name=\"category\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Category</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., Cables, Equipment\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <FormField\n                  control={materialForm.control}\n                  name=\"unit\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Unit *</FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select unit\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          <SelectItem value=\"meter\">Meter</SelectItem>\n                          <SelectItem value=\"piece\">Piece</SelectItem>\n                          <SelectItem value=\"box\">Box</SelectItem>\n                          <SelectItem value=\"roll\">Roll</SelectItem>\n                          <SelectItem value=\"kg\">Kilogram</SelectItem>\n                          <SelectItem value=\"ton\">Ton</SelectItem>\n                          <SelectItem value=\"m3\">Cubic Meter</SelectItem>\n                          <SelectItem value=\"liter\">Liter</SelectItem>\n                          <SelectItem value=\"pallet\">Pallet</SelectItem>\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={materialForm.control}\n                  name=\"supplier_part_number\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Supplier Part Number</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Optional part number\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <FormField\n                  control={materialForm.control}\n                  name=\"unit_price\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Unit Price (EUR) *</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          step=\"0.01\"\n                          placeholder=\"0.00\"\n                          {...field}\n                          onChange={(e) => field.onChange(parseFloat(e.target.value) || 0)}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={materialForm.control}\n                  name=\"minimum_order_qty\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Minimum Order Quantity *</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          placeholder=\"1\"\n                          {...field}\n                          onChange={(e) => field.onChange(parseInt(e.target.value) || 1)}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <FormField\n                  control={materialForm.control}\n                  name=\"lead_time_days\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Lead Time (Days)</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          placeholder=\"Optional lead time\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={materialForm.control}\n                  name=\"is_preferred\"\n                  render={({ field }) => (\n                    <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-3\">\n                      <div className=\"space-y-0.5\">\n                        <FormLabel>Preferred Supplier</FormLabel>\n                        <div className=\"text-sm text-muted-foreground\">\n                          Mark this as preferred supplier for this material\n                        </div>\n                      </div>\n                      <FormControl>\n                        <Switch\n                          checked={field.value}\n                          onCheckedChange={field.onChange}\n                        />\n                      </FormControl>\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={materialForm.control}\n                name=\"notes\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Notes</FormLabel>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"Additional notes about this material...\"\n                        rows={3}\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <DialogFooter>\n                <Button type=\"button\" variant=\"outline\" onClick={() => setIsAddMaterialOpen(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\" disabled={createMaterial.isPending}>\n                  {createMaterial.isPending ? \"Adding...\" : \"Add Material\"}\n                </Button>\n              </DialogFooter>\n            </form>\n          </Form>\n        </DialogContent>\n      </Dialog>\n\n      {/* Assign Project Dialog */}\n      <Dialog open={isAssignProjectOpen} onOpenChange={setIsAssignProjectOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Assign to Project</DialogTitle>\n            <DialogDescription>\n              Assign {supplier.org_name} to a project for material tracking\n            </DialogDescription>\n          </DialogHeader>\n          <Form {...projectAssignmentForm}>\n            <form onSubmit={projectAssignmentForm.handleSubmit(handleAssignProject)} className=\"space-y-4\">\n              <FormField\n                control={projectAssignmentForm.control}\n                name=\"project_id\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Project *</FormLabel>\n                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select a project\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        {allProjectsLoading ? (\n                          <SelectItem value=\"loading\" disabled>Loading projects...</SelectItem>\n                        ) : projects.length === 0 ? (\n                          <SelectItem value=\"no-projects\" disabled>No projects available</SelectItem>\n                        ) : projects\n                          .filter(project => !assignedProjects.some(assigned => assigned.project_id === project.id))\n                          .map((project) => (\n                            <SelectItem key={project.id} value={project.id}>\n                              {project.name} - {project.customer || 'No customer'}\n                            </SelectItem>\n                          ))}\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={projectAssignmentForm.control}\n                name=\"notes\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Notes</FormLabel>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"Assignment notes...\"\n                        rows={3}\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <DialogFooter>\n                <Button type=\"button\" variant=\"outline\" onClick={() => setIsAssignProjectOpen(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\" disabled={createProjectAssignment.isPending}>\n                  {createProjectAssignment.isPending ? \"Assigning...\" : \"Assign Project\"}\n                </Button>\n              </DialogFooter>\n            </form>\n          </Form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}