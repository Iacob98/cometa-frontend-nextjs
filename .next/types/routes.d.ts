// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/dashboard" | "/dashboard/activities" | "/dashboard/calendar" | "/dashboard/documents" | "/dashboard/equipment" | "/dashboard/equipment/[id]/edit" | "/dashboard/equipment/assignments/[id]" | "/dashboard/equipment/assignments/new" | "/dashboard/equipment/new" | "/dashboard/financial" | "/dashboard/geospatial" | "/dashboard/houses" | "/dashboard/materials" | "/dashboard/materials/[id]" | "/dashboard/materials/allocate" | "/dashboard/materials/inventory" | "/dashboard/materials/new" | "/dashboard/materials/order" | "/dashboard/materials/orders/[id]" | "/dashboard/materials/suppliers" | "/dashboard/materials/suppliers/[id]" | "/dashboard/notifications" | "/dashboard/projects" | "/dashboard/projects/[id]" | "/dashboard/projects/[id]/edit" | "/dashboard/projects/new" | "/dashboard/reports" | "/dashboard/settings" | "/dashboard/teams" | "/dashboard/teams/[id]" | "/dashboard/teams/[id]/members" | "/dashboard/teams/new" | "/dashboard/vehicles/[id]/edit" | "/dashboard/vehicles/new" | "/dashboard/work-entries" | "/dashboard/work-entries/[id]" | "/dashboard/work-entries/new" | "/login"
type AppRouteHandlerRoutes = "/api/activities" | "/api/activities/stats" | "/api/admin/clear-database" | "/api/auth/login" | "/api/auth/register" | "/api/auth/skills" | "/api/crews" | "/api/crews/[id]" | "/api/crews/[id]/members" | "/api/crews/[id]/members/[userId]" | "/api/dashboard/stats" | "/api/documents" | "/api/documents/[id]" | "/api/documents/search" | "/api/equipment" | "/api/equipment/[id]" | "/api/equipment/analytics" | "/api/financial/summary" | "/api/geo-layers" | "/api/geo-measurements" | "/api/geo-routes" | "/api/geospatial/features" | "/api/houses/[id]" | "/api/housing-units" | "/api/housing-units/[id]" | "/api/material-allocations" | "/api/material-orders" | "/api/materials" | "/api/materials/[id]" | "/api/materials/[id]/adjust" | "/api/materials/[id]/transactions" | "/api/materials/allocations" | "/api/materials/allocations/[id]" | "/api/materials/assignments" | "/api/materials/assignments/[id]" | "/api/materials/consume" | "/api/materials/low-stock" | "/api/materials/order" | "/api/materials/orders" | "/api/materials/orders/[id]" | "/api/materials/orders/[id]/budget" | "/api/materials/project/[id]" | "/api/materials/unified" | "/api/materials/warehouse" | "/api/notifications" | "/api/notifications/[id]" | "/api/notifications/[id]/read" | "/api/notifications/document-expiration" | "/api/notifications/user/[userId]/read-all" | "/api/notifications/user/[userId]/unread-count" | "/api/project-preparation" | "/api/project-preparation/costs" | "/api/project-preparation/facilities" | "/api/project-preparation/facilities/[id]" | "/api/project-preparation/housing" | "/api/project-preparation/housing/[id]" | "/api/project-preparation/plans" | "/api/project-preparation/plans/[id]" | "/api/project-preparation/plans/[id]/download" | "/api/project-preparation/utility-contacts" | "/api/project-preparation/utility-contacts/[id]" | "/api/project-readiness/[id]" | "/api/project-readiness/[id]/checklist" | "/api/projects" | "/api/projects-optimized" | "/api/projects-simple" | "/api/projects/[id]" | "/api/projects/[id]/constraints" | "/api/projects/[id]/contacts" | "/api/projects/[id]/documents" | "/api/projects/[id]/resources" | "/api/projects/[id]/soil-types" | "/api/projects/[id]/stats" | "/api/projects/[id]/team" | "/api/reports/generate" | "/api/resources/assignments/equipment/[id]" | "/api/resources/assignments/vehicle/[id]" | "/api/resources/equipment-assignments" | "/api/resources/rental-equipment" | "/api/resources/rental-vehicles" | "/api/resources/unified-assignments" | "/api/resources/vehicle-assignments" | "/api/storage/buckets" | "/api/storage/buckets/[name]" | "/api/suppliers" | "/api/suppliers/[id]" | "/api/suppliers/[id]/contacts" | "/api/suppliers/[id]/contacts/[contactId]" | "/api/suppliers/[id]/materials" | "/api/suppliers/[id]/projects" | "/api/teams/crews" | "/api/teams/crews/[id]" | "/api/test" | "/api/transactions" | "/api/upload" | "/api/upload/project-photos" | "/api/upload/work-photos" | "/api/users" | "/api/users/[id]" | "/api/users/[id]/documents" | "/api/users/[id]/documents/[documentId]" | "/api/users/[id]/documents/[documentId]/download" | "/api/users/[id]/documents/[documentId]/view" | "/api/vehicles" | "/api/vehicles/[id]" | "/api/work-entries" | "/api/work-entries/[id]" | "/api/work-entries/[id]/approve" | "/api/work-stages" | "/api/zone-layout/cabinets" | "/api/zone-layout/cabinets/[id]" | "/api/zone-layout/cabinets/[id]/upload" | "/api/zone-layout/segments"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/activities": {}
  "/api/activities/stats": {}
  "/api/admin/clear-database": {}
  "/api/auth/login": {}
  "/api/auth/register": {}
  "/api/auth/skills": {}
  "/api/crews": {}
  "/api/crews/[id]": { "id": string; }
  "/api/crews/[id]/members": { "id": string; }
  "/api/crews/[id]/members/[userId]": { "id": string; "userId": string; }
  "/api/dashboard/stats": {}
  "/api/documents": {}
  "/api/documents/[id]": { "id": string; }
  "/api/documents/search": {}
  "/api/equipment": {}
  "/api/equipment/[id]": { "id": string; }
  "/api/equipment/analytics": {}
  "/api/financial/summary": {}
  "/api/geo-layers": {}
  "/api/geo-measurements": {}
  "/api/geo-routes": {}
  "/api/geospatial/features": {}
  "/api/houses/[id]": { "id": string; }
  "/api/housing-units": {}
  "/api/housing-units/[id]": { "id": string; }
  "/api/material-allocations": {}
  "/api/material-orders": {}
  "/api/materials": {}
  "/api/materials/[id]": { "id": string; }
  "/api/materials/[id]/adjust": { "id": string; }
  "/api/materials/[id]/transactions": { "id": string; }
  "/api/materials/allocations": {}
  "/api/materials/allocations/[id]": { "id": string; }
  "/api/materials/assignments": {}
  "/api/materials/assignments/[id]": { "id": string; }
  "/api/materials/consume": {}
  "/api/materials/low-stock": {}
  "/api/materials/order": {}
  "/api/materials/orders": {}
  "/api/materials/orders/[id]": { "id": string; }
  "/api/materials/orders/[id]/budget": { "id": string; }
  "/api/materials/project/[id]": { "id": string; }
  "/api/materials/unified": {}
  "/api/materials/warehouse": {}
  "/api/notifications": {}
  "/api/notifications/[id]": { "id": string; }
  "/api/notifications/[id]/read": { "id": string; }
  "/api/notifications/document-expiration": {}
  "/api/notifications/user/[userId]/read-all": { "userId": string; }
  "/api/notifications/user/[userId]/unread-count": { "userId": string; }
  "/api/project-preparation": {}
  "/api/project-preparation/costs": {}
  "/api/project-preparation/facilities": {}
  "/api/project-preparation/facilities/[id]": { "id": string; }
  "/api/project-preparation/housing": {}
  "/api/project-preparation/housing/[id]": { "id": string; }
  "/api/project-preparation/plans": {}
  "/api/project-preparation/plans/[id]": { "id": string; }
  "/api/project-preparation/plans/[id]/download": { "id": string; }
  "/api/project-preparation/utility-contacts": {}
  "/api/project-preparation/utility-contacts/[id]": { "id": string; }
  "/api/project-readiness/[id]": { "id": string; }
  "/api/project-readiness/[id]/checklist": { "id": string; }
  "/api/projects": {}
  "/api/projects-optimized": {}
  "/api/projects-simple": {}
  "/api/projects/[id]": { "id": string; }
  "/api/projects/[id]/constraints": { "id": string; }
  "/api/projects/[id]/contacts": { "id": string; }
  "/api/projects/[id]/documents": { "id": string; }
  "/api/projects/[id]/resources": { "id": string; }
  "/api/projects/[id]/soil-types": { "id": string; }
  "/api/projects/[id]/stats": { "id": string; }
  "/api/projects/[id]/team": { "id": string; }
  "/api/reports/generate": {}
  "/api/resources/assignments/equipment/[id]": { "id": string; }
  "/api/resources/assignments/vehicle/[id]": { "id": string; }
  "/api/resources/equipment-assignments": {}
  "/api/resources/rental-equipment": {}
  "/api/resources/rental-vehicles": {}
  "/api/resources/unified-assignments": {}
  "/api/resources/vehicle-assignments": {}
  "/api/storage/buckets": {}
  "/api/storage/buckets/[name]": { "name": string; }
  "/api/suppliers": {}
  "/api/suppliers/[id]": { "id": string; }
  "/api/suppliers/[id]/contacts": { "id": string; }
  "/api/suppliers/[id]/contacts/[contactId]": { "id": string; "contactId": string; }
  "/api/suppliers/[id]/materials": { "id": string; }
  "/api/suppliers/[id]/projects": { "id": string; }
  "/api/teams/crews": {}
  "/api/teams/crews/[id]": { "id": string; }
  "/api/test": {}
  "/api/transactions": {}
  "/api/upload": {}
  "/api/upload/project-photos": {}
  "/api/upload/work-photos": {}
  "/api/users": {}
  "/api/users/[id]": { "id": string; }
  "/api/users/[id]/documents": { "id": string; }
  "/api/users/[id]/documents/[documentId]": { "id": string; "documentId": string; }
  "/api/users/[id]/documents/[documentId]/download": { "id": string; "documentId": string; }
  "/api/users/[id]/documents/[documentId]/view": { "id": string; "documentId": string; }
  "/api/vehicles": {}
  "/api/vehicles/[id]": { "id": string; }
  "/api/work-entries": {}
  "/api/work-entries/[id]": { "id": string; }
  "/api/work-entries/[id]/approve": { "id": string; }
  "/api/work-stages": {}
  "/api/zone-layout/cabinets": {}
  "/api/zone-layout/cabinets/[id]": { "id": string; }
  "/api/zone-layout/cabinets/[id]/upload": { "id": string; }
  "/api/zone-layout/segments": {}
  "/dashboard": {}
  "/dashboard/activities": {}
  "/dashboard/calendar": {}
  "/dashboard/documents": {}
  "/dashboard/equipment": {}
  "/dashboard/equipment/[id]/edit": { "id": string; }
  "/dashboard/equipment/assignments/[id]": { "id": string; }
  "/dashboard/equipment/assignments/new": {}
  "/dashboard/equipment/new": {}
  "/dashboard/financial": {}
  "/dashboard/geospatial": {}
  "/dashboard/houses": {}
  "/dashboard/materials": {}
  "/dashboard/materials/[id]": { "id": string; }
  "/dashboard/materials/allocate": {}
  "/dashboard/materials/inventory": {}
  "/dashboard/materials/new": {}
  "/dashboard/materials/order": {}
  "/dashboard/materials/orders/[id]": { "id": string; }
  "/dashboard/materials/suppliers": {}
  "/dashboard/materials/suppliers/[id]": { "id": string; }
  "/dashboard/notifications": {}
  "/dashboard/projects": {}
  "/dashboard/projects/[id]": { "id": string; }
  "/dashboard/projects/[id]/edit": { "id": string; }
  "/dashboard/projects/new": {}
  "/dashboard/reports": {}
  "/dashboard/settings": {}
  "/dashboard/teams": {}
  "/dashboard/teams/[id]": { "id": string; }
  "/dashboard/teams/[id]/members": { "id": string; }
  "/dashboard/teams/new": {}
  "/dashboard/vehicles/[id]/edit": { "id": string; }
  "/dashboard/vehicles/new": {}
  "/dashboard/work-entries": {}
  "/dashboard/work-entries/[id]": { "id": string; }
  "/dashboard/work-entries/new": {}
  "/login": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
