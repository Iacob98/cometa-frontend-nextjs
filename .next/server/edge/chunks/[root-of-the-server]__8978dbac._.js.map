{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\n// Define public routes that don't require authentication\nconst publicRoutes = ['/login', '/register', '/'];\n\n// Define routes that require specific roles\nconst roleBasedRoutes = {\n  admin: ['/admin'],\n  pm: ['/admin', '/reports'],\n  foreman: ['/teams'],\n  crew: [],\n  worker: [],\n  viewer: ['/reports'],\n};\n\nexport function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n\n  // Allow public routes\n  if (publicRoutes.includes(pathname)) {\n    return NextResponse.next();\n  }\n\n  // Check for auth token\n  const token = request.cookies.get('cometa_auth_token')?.value;\n\n  if (!token) {\n    // Redirect to login if no token\n    return NextResponse.redirect(new URL('/login', request.url));\n  }\n\n  // For now, just check if token exists\n  // In production, you would validate the token with the auth service\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - api (API routes)\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     */\n    '/((?!api|_next/static|_next/image|favicon.ico).*)',\n  ],\n};"],"names":[],"mappings":";;;;;;AAAA;AAAA;;AAGA,yDAAyD;AACzD,MAAM,eAAe;IAAC;IAAU;IAAa;CAAI;AAEjD,4CAA4C;AAC5C,MAAM,kBAAkB;IACtB,OAAO;QAAC;KAAS;IACjB,IAAI;QAAC;QAAU;KAAW;IAC1B,SAAS;QAAC;KAAS;IACnB,MAAM,EAAE;IACR,QAAQ,EAAE;IACV,QAAQ;QAAC;KAAW;AACtB;AAEO,SAAS,WAAW,OAAoB;IAC7C,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,sBAAsB;IACtB,IAAI,aAAa,QAAQ,CAAC,WAAW;QACnC,OAAO,gMAAY,CAAC,IAAI;IAC1B;IAEA,uBAAuB;IACvB,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,sBAAsB;IAExD,IAAI,CAAC,OAAO;QACV,gCAAgC;QAChC,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,sCAAsC;IACtC,oEAAoE;IACpE,OAAO,gMAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}