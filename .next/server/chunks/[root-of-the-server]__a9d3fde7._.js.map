{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/app/api/auth/login/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport { sign } from \"jsonwebtoken\";\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nconst JWT_SECRET =\n  process.env.JWT_SECRET || \"your-super-secret-jwt-key-change-in-production\";\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { email, phone, pin_code, remember_me } = body;\n\n    if (!email && !phone) {\n      return NextResponse.json(\n        { message: \"Email or phone required\" },\n        { status: 400 }\n      );\n    }\n\n    if (!pin_code) {\n      return NextResponse.json(\n        { message: \"PIN code required\" },\n        { status: 400 }\n      );\n    }\n\n    // Validate PIN code format (4-6 digits)\n    if (!/^\\d{4,6}$/.test(pin_code)) {\n      return NextResponse.json(\n        { message: \"Invalid PIN code format\" },\n        { status: 400 }\n      );\n    }\n\n    // FIXED: Query user from Supabase with correct field names\n    let query = supabase\n      .from(\"users\")\n      .select(\n        \"id, email, phone, first_name, last_name, role, is_active, language_preference, pin_code\"\n      )\n      .eq(\"pin_code\", pin_code);\n\n    if (email) {\n      query = query.eq(\"email\", email);\n    } else if (phone) {\n      query = query.eq(\"phone\", phone);\n    }\n\n    const { data: users, error } = await query;\n\n    if (error) {\n      console.error(\"Supabase authentication error:\", error);\n      return NextResponse.json(\n        { message: \"Authentication service error\" },\n        { status: 500 }\n      );\n    }\n\n    if (!users || users.length === 0) {\n      return NextResponse.json(\n        { message: \"Invalid credentials\" },\n        { status: 401 }\n      );\n    }\n\n    const user = users[0];\n\n    if (!user.is_active) {\n      return NextResponse.json(\n        { message: \"Account is deactivated\" },\n        { status: 403 }\n      );\n    }\n\n    // Generate JWT token\n    const tokenPayload = {\n      user_id: user.id,\n      email: user.email,\n      role: user.role,\n      exp:\n        Math.floor(Date.now() / 1000) +\n        (remember_me ? 30 * 24 * 60 * 60 : 8 * 60 * 60), // 30 days or 8 hours\n    };\n\n    const token = sign(tokenPayload, JWT_SECRET);\n\n    // FIXED: Return authentication response with correct field mapping\n    return NextResponse.json({\n      message: \"Authentication successful\",\n      access_token: token,\n      token_type: \"bearer\",\n      user: {\n        id: user.id,\n        email: user.email,\n        phone: user.phone,\n        first_name: user.first_name,\n        last_name: user.last_name,\n        role: user.role,\n        language_preference: user.language_preference,\n      },\n    });\n  } catch (error) {\n    console.error(\"Login API error:\", error);\n    return NextResponse.json(\n      { message: \"Internal server error\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,MAAM,WAAW,IAAA,yMAAY;AAK7B,MAAM,aACJ,QAAQ,GAAG,CAAC,UAAU,IAAI;AAErB,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG;QAEhD,IAAI,CAAC,SAAS,CAAC,OAAO;YACpB,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA0B,GACrC;gBAAE,QAAQ;YAAI;QAElB;QAEA,IAAI,CAAC,UAAU;YACb,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAoB,GAC/B;gBAAE,QAAQ;YAAI;QAElB;QAEA,wCAAwC;QACxC,IAAI,CAAC,YAAY,IAAI,CAAC,WAAW;YAC/B,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA0B,GACrC;gBAAE,QAAQ;YAAI;QAElB;QAEA,2DAA2D;QAC3D,IAAI,QAAQ,SACT,IAAI,CAAC,SACL,MAAM,CACL,2FAED,EAAE,CAAC,YAAY;QAElB,IAAI,OAAO;YACT,QAAQ,MAAM,EAAE,CAAC,SAAS;QAC5B,OAAO,IAAI,OAAO;YAChB,QAAQ,MAAM,EAAE,CAAC,SAAS;QAC5B;QAEA,MAAM,EAAE,MAAM,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM;QAErC,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,kCAAkC;YAChD,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA+B,GAC1C;gBAAE,QAAQ;YAAI;QAElB;QAEA,IAAI,CAAC,SAAS,MAAM,MAAM,KAAK,GAAG;YAChC,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAsB,GACjC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,OAAO,KAAK,CAAC,EAAE;QAErB,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAyB,GACpC;gBAAE,QAAQ;YAAI;QAElB;QAEA,qBAAqB;QACrB,MAAM,eAAe;YACnB,SAAS,KAAK,EAAE;YAChB,OAAO,KAAK,KAAK;YACjB,MAAM,KAAK,IAAI;YACf,KACE,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK,QACxB,CAAC,cAAc,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,EAAE;QAClD;QAEA,MAAM,QAAQ,IAAA,+IAAI,EAAC,cAAc;QAEjC,mEAAmE;QACnE,OAAO,gJAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,cAAc;YACd,YAAY;YACZ,MAAM;gBACJ,IAAI,KAAK,EAAE;gBACX,OAAO,KAAK,KAAK;gBACjB,OAAO,KAAK,KAAK;gBACjB,YAAY,KAAK,UAAU;gBAC3B,WAAW,KAAK,SAAS;gBACzB,MAAM,KAAK,IAAI;gBACf,qBAAqB,KAAK,mBAAmB;YAC/C;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oBAAoB;QAClC,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAAwB,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}