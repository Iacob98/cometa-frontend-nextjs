{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/app/api/geo-layers/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { createClient } from \"@supabase/supabase-js\";\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const project_id = searchParams.get(\"project_id\");\n\n    let query = supabase\n      .from(\"geo_layers\")\n      .select(`\n        id,\n        name,\n        description,\n        layer_type,\n        style,\n        is_visible,\n        opacity,\n        z_index,\n        project_id,\n        created_by,\n        created_at,\n        updated_at\n      `);\n\n    if (project_id) {\n      query = query.eq(\"project_id\", project_id);\n    }\n\n    const { data: layers, error } = await query.order(\"z_index\", { ascending: true });\n\n    if (error) {\n      console.error(\"Supabase geo layers query error:\", error);\n      return NextResponse.json(\n        { error: \"Failed to fetch geo layers\" },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json(layers || []);\n  } catch (error) {\n    console.error(\"Geo layers API error:\", error);\n    return NextResponse.json(\n      { error: \"Internal server error\" },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n\n    const layerData = {\n      name: body.name,\n      description: body.description,\n      layer_type: body.layer_type,\n      style: body.style || {},\n      is_visible: body.is_visible !== undefined ? body.is_visible : true,\n      opacity: body.opacity !== undefined ? body.opacity : 1.0,\n      z_index: body.z_index || 0,\n      project_id: body.project_id || null,\n      created_by: body.created_by || \"system\",\n    };\n\n    const { data: layer, error } = await supabase\n      .from(\"geo_layers\")\n      .insert([layerData])\n      .select()\n      .single();\n\n    if (error) {\n      console.error(\"Supabase geo layer creation error:\", error);\n      return NextResponse.json(\n        { error: \"Failed to create geo layer\" },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json(layer, { status: 201 });\n  } catch (error) {\n    console.error(\"Geo layer creation API error:\", error);\n    return NextResponse.json(\n      { error: \"Internal server error\" },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEA,MAAM,WAAW,IAAA,yMAAY;AAKtB,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,aAAa,aAAa,GAAG,CAAC;QAEpC,IAAI,QAAQ,SACT,IAAI,CAAC,cACL,MAAM,CAAC,CAAC;;;;;;;;;;;;;MAaT,CAAC;QAEH,IAAI,YAAY;YACd,QAAQ,MAAM,EAAE,CAAC,cAAc;QACjC;QAEA,MAAM,EAAE,MAAM,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,MAAM,KAAK,CAAC,WAAW;YAAE,WAAW;QAAK;QAE/E,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,oCAAoC;YAClD,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA6B,GACtC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC,UAAU,EAAE;IACvC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,MAAM,YAAY;YAChB,MAAM,KAAK,IAAI;YACf,aAAa,KAAK,WAAW;YAC7B,YAAY,KAAK,UAAU;YAC3B,OAAO,KAAK,KAAK,IAAI,CAAC;YACtB,YAAY,KAAK,UAAU,KAAK,YAAY,KAAK,UAAU,GAAG;YAC9D,SAAS,KAAK,OAAO,KAAK,YAAY,KAAK,OAAO,GAAG;YACrD,SAAS,KAAK,OAAO,IAAI;YACzB,YAAY,KAAK,UAAU,IAAI;YAC/B,YAAY,KAAK,UAAU,IAAI;QACjC;QAEA,MAAM,EAAE,MAAM,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,SAClC,IAAI,CAAC,cACL,MAAM,CAAC;YAAC;SAAU,EAClB,MAAM,GACN,MAAM;QAET,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,sCAAsC;YACpD,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA6B,GACtC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC,OAAO;YAAE,QAAQ;QAAI;IAChD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}