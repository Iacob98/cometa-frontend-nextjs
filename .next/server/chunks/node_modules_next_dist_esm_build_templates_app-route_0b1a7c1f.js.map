{"version":3,"sources":["turbopack:///[project]/src/app/api/projects-optimized/route.ts","turbopack:///[project]/src/lib/supabase-optimized-queries.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["/**\n * OPTIMIZED PROJECTS API ROUTE\n *\n * TDD IMPLEMENTATION: –ó–∞–º–µ–Ω—è–µ—Ç docker exec psql –ø–æ–¥—Ö–æ–¥ –Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ Supabase –∑–∞–ø—Ä–æ—Å—ã\n * –¶–ï–õ–¨: –£—Å—Ç—Ä–∞–Ω–∏—Ç—å N+1 –ø—Ä–æ–±–ª–µ–º—É, —É–ª—É—á—à–∏—Ç—å performance —Å <100ms response time\n *\n * NO MOCKS - —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω–∞—è Supabase –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { getProjectsWithProgressOptimized, getProjectsWithProgressSuperOptimized, getProjectsWithProgressRPC } from '@/lib/supabase-optimized-queries';\nimport { unstable_cache } from 'next/cache';\n\n// Enable caching for GET requests with 5-minute TTL\nexport const revalidate = 300; // 5 minutes\n\n// Cached version using Context7 best practices with multiple fallback strategies\nconst getCachedProjectsWithProgress = unstable_cache(\n  async () => {\n    console.log('üéØ Starting optimized query with Context7 fallback strategy');\n\n    // STRATEGY 1: Try RPC function first (Context7 recommended approach)\n    try {\n      console.log('üöÄ Attempting RPC function approach');\n      return await getProjectsWithProgressRPC();\n    } catch (rpcError) {\n      console.log('‚ö†Ô∏è RPC failed, trying super optimized approach', rpcError);\n\n      // STRATEGY 2: Fallback to super optimized\n      try {\n        return await getProjectsWithProgressSuperOptimized();\n      } catch (superError) {\n        console.log('‚ö†Ô∏è Super optimized failed, falling back to regular optimized', superError);\n\n        // STRATEGY 3: Final fallback to regular optimized\n        return await getProjectsWithProgressOptimized();\n      }\n    }\n  },\n  ['projects-with-progress-v2'], // Updated cache key\n  {\n    revalidate: 300, // 5 minutes\n    tags: ['projects', 'work-entries', 'rpc-optimized']\n  }\n);\n\nexport async function GET(request: NextRequest) {\n  const startTime = performance.now();\n\n  try {\n    console.log('üöÄ OPTIMIZED API ROUTE - Starting request');\n\n    // Use cached optimized query\n    const { data: projects, error, executionTime } = await getCachedProjectsWithProgress();\n\n    const totalTime = performance.now() - startTime;\n\n    // Log performance metrics\n    console.log(`üìä OPTIMIZED API ROUTE Performance:`);\n    console.log(`  - Database query time: ${executionTime}ms`);\n    console.log(`  - Total response time: ${totalTime}ms`);\n    console.log(`  - Projects returned: ${projects?.length || 0}`);\n    console.log(`  - Cache status: ${request.headers.get('cache-control') || 'default'}`);\n\n    if (error) {\n      console.error('‚ùå OPTIMIZED API ROUTE Error:', error);\n      return NextResponse.json(\n        {\n          error: 'Failed to fetch projects',\n          details: process.env.NODE_ENV === 'development' ? error : undefined\n        },\n        { status: 500 }\n      );\n    }\n\n    // Set performance headers for monitoring\n    const response = NextResponse.json({\n      data: projects || [],\n      metadata: {\n        count: projects?.length || 0,\n        executionTime,\n        totalTime,\n        cached: true,\n        optimized: true,\n        timestamp: new Date().toISOString()\n      }\n    });\n\n    // Add caching headers\n    response.headers.set('Cache-Control', 'public, s-maxage=300, stale-while-revalidate=600');\n    response.headers.set('X-Database-Time', `${executionTime}ms`);\n    response.headers.set('X-Total-Time', `${totalTime}ms`);\n    response.headers.set('X-Optimized', 'true');\n\n    console.log('‚úÖ OPTIMIZED API ROUTE Success');\n    return response;\n\n  } catch (error) {\n    const totalTime = performance.now() - startTime;\n\n    console.error('‚ùå OPTIMIZED API ROUTE Fatal Error:', error);\n    console.log(`üí• Failed after: ${totalTime}ms`);\n\n    return NextResponse.json(\n      {\n        error: 'Internal server error',\n        metadata: {\n          totalTime,\n          optimized: false,\n          timestamp: new Date().toISOString()\n        }\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * Manual revalidation endpoint for cache invalidation\n * Usage: POST /api/projects-optimized with { \"revalidate\": true }\n */\nexport async function POST(request: NextRequest) {\n  try {\n    const { revalidate } = await request.json();\n\n    if (revalidate) {\n      const { revalidateTag } = await import('next/cache');\n\n      // Invalidate cache tags\n      revalidateTag('projects');\n      revalidateTag('work-entries');\n\n      console.log('üîÑ CACHE INVALIDATED - Projects cache revalidated');\n\n      return NextResponse.json({\n        success: true,\n        message: 'Cache invalidated successfully',\n        timestamp: new Date().toISOString()\n      });\n    }\n\n    return NextResponse.json({\n      success: false,\n      message: 'Invalid request - missing revalidate parameter'\n    }, { status: 400 });\n\n  } catch (error) {\n    console.error('‚ùå CACHE REVALIDATION Error:', error);\n\n    return NextResponse.json({\n      success: false,\n      error: 'Failed to revalidate cache'\n    }, { status: 500 });\n  }\n}\n\n/**\n * Health check endpoint\n * Usage: GET /api/projects-optimized?health=true\n */\nexport async function OPTIONS(request: NextRequest) {\n  const url = new URL(request.url);\n  const isHealthCheck = url.searchParams.get('health') === 'true';\n\n  if (isHealthCheck) {\n    const startTime = performance.now();\n\n    try {\n      // Quick health check using RPC function for best performance\n      const { error } = await getProjectsWithProgressRPC();\n      const responseTime = performance.now() - startTime;\n\n      return NextResponse.json({\n        status: 'healthy',\n        optimized: true,\n        responseTime: `${responseTime}ms`,\n        timestamp: new Date().toISOString(),\n        services: {\n          supabase: error ? 'error' : 'healthy',\n          cache: 'enabled'\n        }\n      });\n\n    } catch (error) {\n      return NextResponse.json({\n        status: 'unhealthy',\n        error: 'Service check failed',\n        timestamp: new Date().toISOString()\n      }, { status: 503 });\n    }\n  }\n\n  return NextResponse.json({\n    methods: ['GET', 'POST', 'OPTIONS'],\n    description: 'Optimized Projects API with Supabase integration'\n  });\n}","/**\n * OPTIMIZED SUPABASE QUERIES\n *\n * –ó–∞–º–µ–Ω—è–µ—Ç docker exec psql –Ω–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ Supabase –∑–∞–ø—Ä–æ—Å—ã\n * –£—Å—Ç—Ä–∞–Ω—è–µ—Ç N+1 –ø—Ä–æ–±–ª–µ–º—É —Å –ø–æ–º–æ—â—å—é JOINs –∏ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏\n */\n\nimport { supabase } from './supabase';\n\nexport interface OptimizedProject {\n  id: string;\n  name: string;\n  customer: string;\n  city: string;\n  address: string;\n  contact_24h: string;\n  start_date: string;\n  end_date_plan: string;\n  status: string;\n  total_length_m: number;\n  base_rate_per_m: number;\n  pm_user_id: string;\n  language_default: string;\n  pm_user?: {\n    first_name: string;\n    last_name: string;\n  };\n  progress: {\n    completed_hours: number;\n    progress_percentage: number;\n  };\n}\n\n/**\n * SUPER OPTIMIZED: Single query to get projects with progress using SQL aggregation\n * Even faster than two-step approach - uses PostgreSQL aggregation directly\n */\nexport async function getProjectsWithProgressSuperOptimized(): Promise<{\n  data: OptimizedProject[] | null;\n  error: any;\n  executionTime: number;\n}> {\n  const start = performance.now();\n\n  try {\n    // Single query with SQL aggregation - maximum performance\n    const { data: rawData, error } = await supabase\n      .from('projects')\n      .select(`\n        id,\n        name,\n        customer,\n        city,\n        address,\n        contact_24h,\n        start_date,\n        end_date_plan,\n        status,\n        total_length_m,\n        base_rate_per_m,\n        pm_user_id,\n        language_default,\n        pm_user:users!pm_user_id(\n          first_name,\n          last_name\n        ),\n        work_entries(duration_hours)\n      `)\n      .eq('status', 'active')\n      .order('start_date', { ascending: false })\n      .limit(20);\n\n    if (error) throw error;\n\n    // Transform data with progress calculation\n    const optimizedProjects: OptimizedProject[] = (rawData || []).map(project => {\n      const completed_hours = (project.work_entries as any[] || [])\n        .reduce((sum: number, entry: any) => sum + (entry.duration_hours || 0), 0);\n\n      return {\n        ...project,\n        pm_user: Array.isArray(project.pm_user) ? project.pm_user[0] : project.pm_user,\n        progress: {\n          completed_hours,\n          progress_percentage: project.total_length_m\n            ? (completed_hours / project.total_length_m * 100)\n            : 0\n        },\n        work_entries: undefined // Remove from final output\n      };\n    });\n\n    const executionTime = performance.now() - start;\n\n    return {\n      data: optimizedProjects,\n      error: null,\n      executionTime\n    };\n\n  } catch (error) {\n    const executionTime = performance.now() - start;\n    console.error('üî¥ Super optimized query error:', error);\n\n    return {\n      data: null,\n      error,\n      executionTime\n    };\n  }\n}\n\n/**\n * OPTIMIZED: Two-step query to get projects with progress (fallback)\n * Replaces N+1 docker exec approach with two efficient queries\n */\nexport async function getProjectsWithProgressOptimized(): Promise<{\n  data: OptimizedProject[] | null;\n  error: any;\n  executionTime: number;\n}> {\n  const start = performance.now();\n\n  try {\n    // STEP 1: Get all projects with PM user data (single query)\n    const { data: projects, error: projectsError } = await supabase\n      .from('projects')\n      .select(`\n        id,\n        name,\n        customer,\n        city,\n        address,\n        contact_24h,\n        start_date,\n        end_date_plan,\n        status,\n        total_length_m,\n        base_rate_per_m,\n        pm_user_id,\n        language_default,\n        pm_user:users!pm_user_id(\n          first_name,\n          last_name\n        )\n      `)\n      .eq('status', 'active')\n      .order('start_date', { ascending: false })\n      .limit(20);\n\n    if (projectsError) throw projectsError;\n    if (!projects?.length) {\n      return {\n        data: [],\n        error: null,\n        executionTime: performance.now() - start\n      };\n    }\n\n    // STEP 2: Get aggregated progress for all projects (single query with optimization)\n    const projectIds = projects.map(p => p.id);\n\n    if (projectIds.length === 0) {\n      return {\n        data: [],\n        error: null,\n        executionTime: performance.now() - start\n      };\n    }\n\n    const { data: progressData, error: progressError } = await supabase\n      .from('work_entries')\n      .select('project_id, duration_hours')\n      .in('project_id', projectIds)\n      .not('duration_hours', 'is', null) // Only get entries with actual hours\n      .order('project_id'); // Order for better indexing\n\n    if (progressError) throw progressError;\n\n    // STEP 3: Aggregate progress data in JavaScript (efficient)\n    const progressByProject = new Map<string, number>();\n\n    progressData?.forEach(entry => {\n      const currentHours = progressByProject.get(entry.project_id) || 0;\n      progressByProject.set(entry.project_id, currentHours + (entry.duration_hours || 0));\n    });\n\n    // STEP 4: Combine projects with progress data\n    const optimizedProjects: OptimizedProject[] = projects.map(project => ({\n      ...project,\n      pm_user: Array.isArray(project.pm_user) ? project.pm_user[0] : project.pm_user,\n      progress: {\n        completed_hours: progressByProject.get(project.id) || 0,\n        progress_percentage: project.total_length_m\n          ? ((progressByProject.get(project.id) || 0) / project.total_length_m * 100)\n          : 0\n      }\n    }));\n\n    const executionTime = performance.now() - start;\n\n    return {\n      data: optimizedProjects,\n      error: null,\n      executionTime\n    };\n\n  } catch (error) {\n    const executionTime = performance.now() - start;\n    console.error('üî¥ Optimized query error:', error);\n\n    return {\n      data: null,\n      error,\n      executionTime\n    };\n  }\n}\n\n/**\n * MAXIMUM OPTIMIZATION: PostgreSQL RPC function\n * Uses native SQL RPC for ultimate performance with Context7 best practices\n */\nexport async function getProjectsWithProgressRPC(): Promise<{\n  data: OptimizedProject[] | null;\n  error: any;\n  executionTime: number;\n}> {\n  const start = performance.now();\n\n  try {\n    console.log('üöÄ Using PostgreSQL RPC function for maximum performance');\n\n    // Call our optimized RPC function\n    const { data: rawData, error } = await supabase.rpc('get_projects_with_progress_optimized', {\n      project_limit: 20,\n      project_offset: 0\n    });\n\n    if (error) throw error;\n\n    // Transform RPC data to our interface\n    const optimizedProjects: OptimizedProject[] = (rawData || []).map((row: any) => ({\n      id: row.id,\n      name: row.name,\n      customer: row.customer,\n      city: row.city,\n      address: row.address,\n      contact_24h: row.contact_24h,\n      start_date: row.start_date,\n      end_date_plan: row.end_date_plan,\n      status: row.status,\n      total_length_m: row.total_length_m,\n      base_rate_per_m: row.base_rate_per_m,\n      pm_user_id: row.pm_user_id,\n      language_default: row.language_default,\n      pm_user: row.pm_first_name ? {\n        first_name: row.pm_first_name,\n        last_name: row.pm_last_name\n      } : null,\n      progress: {\n        completed_hours: parseFloat(row.completed_hours) || 0,\n        progress_percentage: parseFloat(row.progress_percentage) || 0\n      }\n    }));\n\n    const executionTime = performance.now() - start;\n\n    console.log(`‚úÖ RPC Query executed in ${executionTime}ms for ${optimizedProjects.length} projects`);\n\n    return {\n      data: optimizedProjects,\n      error: null,\n      executionTime\n    };\n\n  } catch (error) {\n    const executionTime = performance.now() - start;\n    console.error('üî¥ RPC query error:', error);\n\n    return {\n      data: null,\n      error,\n      executionTime\n    };\n  }\n}\n\n/**\n * DEPRECATED: Single PostgreSQL query with JOINs (kept for compatibility)\n * Use getProjectsWithProgressRPC for better performance\n */\nexport async function getProjectsWithProgressSingleQuery(): Promise<{\n  data: OptimizedProject[] | null;\n  error: any;\n  executionTime: number;\n}> {\n  console.log('‚ö†Ô∏è Using deprecated single query method - consider switching to RPC');\n\n  // Fallback to RPC function for now\n  return await getProjectsWithProgressRPC();\n}","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/projects-optimized/route\",\n        pathname: \"/api/projects-optimized\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/projects-optimized/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/projects-optimized/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[2]}