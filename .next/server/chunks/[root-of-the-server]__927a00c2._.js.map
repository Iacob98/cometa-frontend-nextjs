{"version":3,"sources":["turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/src/app/api/transactions/route.ts"],"sourcesContent":["import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/transactions/route\",\n        pathname: \"/api/transactions\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/transactions/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/transactions/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","import { NextRequest, NextResponse } from \"next/server\";\nimport { createClient } from \"@supabase/supabase-js\";\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\n// FIXED: Add TypeScript interface for unified transactions\ninterface UnifiedTransaction {\n  id: string;\n  transaction_type: \"cost\" | \"material_order\" | \"rental_expense\";\n  category: string;\n  amount_eur: number;\n  date: string;\n  description: string;\n  project_id?: string | null;\n  project?: any;\n  reference_type?: string;\n  reference_id?: string;\n  status: string;\n  quantity?: number;\n  unit_price_eur?: number;\n  days?: number;\n  daily_rate_eur?: number;\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n\n    // Parse pagination parameters\n    const page = parseInt(searchParams.get(\"page\") || \"1\");\n    const per_page = parseInt(searchParams.get(\"per_page\") || \"20\");\n    const offset = (page - 1) * per_page;\n\n    // Parse filtering parameters\n    const project_id = searchParams.get(\"project_id\");\n    const transaction_type = searchParams.get(\"transaction_type\");\n    const date_from = searchParams.get(\"date_from\");\n    const date_to = searchParams.get(\"date_to\");\n\n    // Start with just costs for simplicity\n    let costsQuery = supabase\n      .from(\"costs\")\n      .select(\n        `\n        id,\n        project_id,\n        cost_type,\n        amount_eur,\n        date,\n        description,\n        reference_type,\n        reference_id,\n        project:projects(id, name, status)\n      `\n      )\n      .order(\"date\", { ascending: false });\n\n    if (project_id) {\n      costsQuery = costsQuery.eq(\"project_id\", project_id);\n    }\n    if (date_from) {\n      costsQuery = costsQuery.gte(\"date\", date_from);\n    }\n    if (date_to) {\n      costsQuery = costsQuery.lte(\"date\", date_to);\n    }\n\n    const { data: costsData, error: costsError } = await costsQuery;\n\n    if (costsError) {\n      console.error(\"Costs query error:\", costsError);\n      // Return empty data instead of error\n      return NextResponse.json({\n        items: [],\n        total: 0,\n        page,\n        per_page,\n        total_pages: 0,\n        summary: {\n          total_amount: 0,\n          by_type: {\n            costs: 0,\n            material_orders: 0,\n            rental_expenses: 0,\n          },\n        },\n      });\n    }\n\n    // Transform costs data to unified transaction format\n    const transactions: UnifiedTransaction[] = [];\n\n    // Transform costs\n    (costsData || []).forEach((cost: any) => {\n      transactions.push({\n        id: cost.id,\n        transaction_type: \"cost\",\n        category: cost.cost_type,\n        amount_eur: cost.amount_eur,\n        date: cost.date,\n        description: cost.description || `${cost.cost_type} expense`,\n        project_id: cost.project_id,\n        project: cost.project,\n        reference_type: cost.reference_type,\n        reference_id: cost.reference_id,\n        status: \"completed\",\n      });\n    });\n\n    // Sort by date and apply pagination\n    transactions.sort(\n      (a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()\n    );\n\n    // Apply transaction type filter\n    const filteredTransactions = transaction_type\n      ? transactions.filter((t) => t.transaction_type === transaction_type)\n      : transactions;\n\n    const total = filteredTransactions.length;\n    const paginatedTransactions = filteredTransactions.slice(\n      offset,\n      offset + per_page\n    );\n\n    return NextResponse.json({\n      items: paginatedTransactions,\n      total,\n      page,\n      per_page,\n      total_pages: Math.ceil(total / per_page),\n      summary: {\n        total_amount: transactions.reduce(\n          (sum, t) => sum + (t.amount_eur || 0),\n          0\n        ),\n        by_type: {\n          costs: transactions.filter((t) => t.transaction_type === \"cost\")\n            .length,\n          material_orders: transactions.filter(\n            (t) => t.transaction_type === \"material_order\"\n          ).length,\n          rental_expenses: transactions.filter(\n            (t) => t.transaction_type === \"rental_expense\"\n          ).length,\n        },\n      },\n    });\n  } catch (error) {\n    console.error(\"Transactions API error:\", error);\n    return NextResponse.json(\n      { error: \"Internal server error\" },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { transaction_type, project_id, amount_eur, description, category } =\n      body;\n\n    // Validate required fields\n    if (!transaction_type || !amount_eur) {\n      return NextResponse.json(\n        { error: \"transaction_type and amount_eur are required\" },\n        { status: 400 }\n      );\n    }\n\n    // Validate transaction_type\n    if (\n      ![\"cost\", \"material_order\", \"rental_expense\"].includes(transaction_type)\n    ) {\n      return NextResponse.json(\n        {\n          error:\n            \"Invalid transaction_type. Must be: cost, material_order, or rental_expense\",\n        },\n        { status: 400 }\n      );\n    }\n\n    let result;\n\n    // FIXED: Route to appropriate table based on transaction type\n    switch (transaction_type) {\n      case \"cost\":\n        if (!project_id) {\n          return NextResponse.json(\n            { error: \"project_id is required for cost transactions\" },\n            { status: 400 }\n          );\n        }\n\n        const { data: cost, error: costError } = await supabase\n          .from(\"costs\")\n          .insert([\n            {\n              project_id,\n              cost_type: category || \"other\",\n              amount_eur,\n              date: new Date().toISOString().split(\"T\")[0],\n              description: description || \"Manual cost entry\",\n            },\n          ])\n          .select(\n            `\n            id,\n            project_id,\n            cost_type,\n            amount_eur,\n            date,\n            description,\n            project:projects(id, name, status)\n          `\n          )\n          .single();\n\n        if (costError) {\n          throw costError;\n        }\n\n        result = {\n          id: cost.id,\n          transaction_type: \"cost\",\n          category: cost.cost_type,\n          amount_eur: cost.amount_eur,\n          date: cost.date,\n          description: cost.description,\n          project_id: cost.project_id,\n          project: cost.project,\n        };\n        break;\n\n      case \"material_order\":\n        return NextResponse.json(\n          {\n            error:\n              \"Material orders should be created via /api/materials/orders endpoint\",\n          },\n          { status: 400 }\n        );\n\n      case \"rental_expense\":\n        return NextResponse.json(\n          {\n            error:\n              \"Rental expenses should be created via rental management endpoints\",\n          },\n          { status: 400 }\n        );\n\n      default:\n        return NextResponse.json(\n          { error: \"Invalid transaction type\" },\n          { status: 400 }\n        );\n    }\n\n    return NextResponse.json(\n      {\n        message: \"Transaction created successfully\",\n        transaction: result,\n      },\n      { status: 201 }\n    );\n  } catch (error) {\n    console.error(\"Transaction creation error:\", error);\n    return NextResponse.json(\n      { error: \"Failed to create transaction\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}