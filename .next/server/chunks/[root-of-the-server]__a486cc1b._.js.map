{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/app/api/materials/low-stock/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const threshold = parseInt(searchParams.get('threshold') || '10');\n\n    // Get materials with real stock tracking columns\n    const { data: materials, error } = await supabase\n      .from('materials')\n      .select(`\n        id,\n        name,\n        category,\n        unit,\n        unit_price_eur,\n        supplier_name,\n        description,\n        is_active,\n        current_stock,\n        min_stock_threshold,\n        created_at\n      `)\n      .eq('is_active', true)\n      .order('name', { ascending: true });\n\n    if (error) {\n      console.error('Supabase error:', error);\n      return NextResponse.json(\n        { error: 'Failed to fetch low stock materials' },\n        { status: 500 }\n      );\n    }\n\n    // Filter for low stock materials using real data (current stock <= min stock threshold)\n    const lowStockMaterials = (materials || []).filter(material => {\n      const currentStock = material.current_stock || 0;\n      const minThreshold = material.min_stock_threshold || 0;\n      return currentStock <= minThreshold;\n    }).map(material => ({\n      ...material,\n      unit_cost: material.unit_price_eur || 0,\n    }));\n\n    return NextResponse.json({ materials: lowStockMaterials });\n  } catch (error) {\n    console.error('Low stock materials API error:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,WAAW,IAAA,yMAAY;AAKtB,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,YAAY,SAAS,aAAa,GAAG,CAAC,gBAAgB;QAE5D,iDAAiD;QACjD,MAAM,EAAE,MAAM,SAAS,EAAE,KAAK,EAAE,GAAG,MAAM,SACtC,IAAI,CAAC,aACL,MAAM,CAAC,CAAC;;;;;;;;;;;;MAYT,CAAC,EACA,EAAE,CAAC,aAAa,MAChB,KAAK,CAAC,QAAQ;YAAE,WAAW;QAAK;QAEnC,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,mBAAmB;YACjC,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAsC,GAC/C;gBAAE,QAAQ;YAAI;QAElB;QAEA,wFAAwF;QACxF,MAAM,oBAAoB,CAAC,aAAa,EAAE,EAAE,MAAM,CAAC,CAAA;YACjD,MAAM,eAAe,SAAS,aAAa,IAAI;YAC/C,MAAM,eAAe,SAAS,mBAAmB,IAAI;YACrD,OAAO,gBAAgB;QACzB,GAAG,GAAG,CAAC,CAAA,WAAY,CAAC;gBAClB,GAAG,QAAQ;gBACX,WAAW,SAAS,cAAc,IAAI;YACxC,CAAC;QAED,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,WAAW;QAAkB;IAC1D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}