{"version":3,"sources":["turbopack:///[project]/src/app/api/resources/unified-assignments/route.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { createClient } from \"@supabase/supabase-js\";\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const crew_id = searchParams.get(\"crew_id\");\n    const project_id = searchParams.get(\"project_id\");\n    const active_only = searchParams.get(\"active_only\") === \"true\";\n\n    const assignments: any[] = [];\n\n    // Get equipment assignments\n    let equipmentQuery = supabase\n      .from(\"equipment_assignments\")\n      .select(`\n        id,\n        equipment_id,\n        crew_id,\n        project_id,\n        from_ts,\n        to_ts,\n        is_permanent,\n        rental_cost_per_day,\n        is_active,\n        equipment:equipment(\n          id,\n          name,\n          type,\n          inventory_no\n        )\n      `);\n\n    if (crew_id) {\n      equipmentQuery = equipmentQuery.eq(\"crew_id\", crew_id);\n    }\n    if (project_id) {\n      equipmentQuery = equipmentQuery.eq(\"project_id\", project_id);\n    }\n    if (active_only) {\n      equipmentQuery = equipmentQuery.eq(\"is_active\", true);\n    }\n\n    const { data: equipmentData, error: equipmentError } = await equipmentQuery.order(\"from_ts\", { ascending: false });\n\n    if (equipmentError) {\n      console.error(\"Equipment assignments query error:\", equipmentError);\n    } else {\n      // Transform equipment assignments\n      (equipmentData || []).forEach((assignment: any) => {\n        assignments.push({\n          id: assignment.id,\n          resource_id: assignment.equipment_id,\n          resource_type: \"equipment\",\n          assignment_type: \"equipment\",\n          crew_id: assignment.crew_id,\n          project_id: assignment.project_id,\n          from_ts: assignment.from_ts,\n          to_ts: assignment.to_ts,\n          is_permanent: assignment.is_permanent,\n          rental_cost_per_day: assignment.rental_cost_per_day,\n          is_active: assignment.is_active,\n          equipment: assignment.equipment,\n          // For unified interface\n          name: assignment.equipment?.name || 'Unknown Equipment',\n          type: assignment.equipment?.type || 'equipment',\n          inventory_no: assignment.equipment?.inventory_no,\n        });\n      });\n    }\n\n    // Get vehicle assignments\n    let vehicleQuery = supabase\n      .from(\"vehicle_assignments\")\n      .select(`\n        id,\n        vehicle_id,\n        crew_id,\n        project_id,\n        from_ts,\n        to_ts,\n        is_permanent,\n        rental_cost_per_day,\n        is_active,\n        vehicle:vehicles(\n          id,\n          brand,\n          model,\n          plate_number,\n          type\n        )\n      `);\n\n    if (crew_id) {\n      vehicleQuery = vehicleQuery.eq(\"crew_id\", crew_id);\n    }\n    if (project_id) {\n      vehicleQuery = vehicleQuery.eq(\"project_id\", project_id);\n    }\n    if (active_only) {\n      vehicleQuery = vehicleQuery.eq(\"is_active\", true);\n    }\n\n    const { data: vehicleData, error: vehicleError } = await vehicleQuery.order(\"from_ts\", { ascending: false });\n\n    if (vehicleError) {\n      console.error(\"Vehicle assignments query error:\", vehicleError);\n    } else {\n      // Transform vehicle assignments\n      (vehicleData || []).forEach((assignment: any) => {\n        assignments.push({\n          id: assignment.id,\n          resource_id: assignment.vehicle_id,\n          resource_type: \"vehicle\",\n          assignment_type: \"vehicle\",\n          crew_id: assignment.crew_id,\n          project_id: assignment.project_id,\n          from_ts: assignment.from_ts,\n          to_ts: assignment.to_ts,\n          is_permanent: assignment.is_permanent,\n          rental_cost_per_day: assignment.rental_cost_per_day,\n          is_active: assignment.is_active,\n          vehicle: assignment.vehicle,\n          // For unified interface\n          name: assignment.vehicle ? `${assignment.vehicle.brand} ${assignment.vehicle.model}` : 'Unknown Vehicle',\n          type: assignment.vehicle?.type || 'vehicle',\n          plate_number: assignment.vehicle?.plate_number,\n        });\n      });\n    }\n\n    // Sort by from_ts descending\n    assignments.sort((a, b) => {\n      const dateA = new Date(a.from_ts || 0).getTime();\n      const dateB = new Date(b.from_ts || 0).getTime();\n      return dateB - dateA;\n    });\n\n    return NextResponse.json(assignments);\n  } catch (error) {\n    console.error(\"Unified assignments API error:\", error);\n    return NextResponse.json(\n      { error: \"Internal server error\" },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { resource_type, resource_id, crew_id, project_id, from_ts, to_ts, is_permanent, rental_cost_per_day } = body;\n\n    // Validate required fields\n    if (!resource_type || !resource_id || !crew_id) {\n      return NextResponse.json(\n        { error: \"resource_type, resource_id, and crew_id are required\" },\n        { status: 400 }\n      );\n    }\n\n    let result;\n\n    if (resource_type === \"equipment\") {\n      const { data: assignment, error } = await supabase\n        .from(\"equipment_assignments\")\n        .insert([{\n          equipment_id: resource_id,\n          crew_id,\n          project_id,\n          from_ts,\n          to_ts,\n          is_permanent: is_permanent || false,\n          rental_cost_per_day: rental_cost_per_day || 0,\n          is_active: true,\n        }])\n        .select(`\n          id,\n          equipment_id,\n          crew_id,\n          project_id,\n          from_ts,\n          to_ts,\n          is_permanent,\n          rental_cost_per_day,\n          is_active,\n          equipment:equipment(id, name, type, inventory_no)\n        `)\n        .single();\n\n      if (error) throw error;\n      result = assignment;\n    } else if (resource_type === \"vehicle\") {\n      const { data: assignment, error } = await supabase\n        .from(\"vehicle_assignments\")\n        .insert([{\n          vehicle_id: resource_id,\n          crew_id,\n          project_id,\n          from_ts,\n          to_ts,\n          is_permanent: is_permanent || false,\n          rental_cost_per_day: rental_cost_per_day || 0,\n          is_active: true,\n        }])\n        .select(`\n          id,\n          vehicle_id,\n          crew_id,\n          project_id,\n          from_ts,\n          to_ts,\n          is_permanent,\n          rental_cost_per_day,\n          is_active,\n          vehicle:vehicles(id, brand, model, plate_number, type)\n        `)\n        .single();\n\n      if (error) throw error;\n      result = assignment;\n    } else {\n      return NextResponse.json(\n        { error: \"Invalid resource_type. Must be 'equipment' or 'vehicle'\" },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      {\n        success: true,\n        assignment_id: result.id,\n        message: `${resource_type} assignment created successfully`,\n        assignment: result,\n      },\n      { status: 201 }\n    );\n  } catch (error) {\n    console.error(\"Unified assignment creation error:\", error);\n    return NextResponse.json(\n      { error: \"Failed to create assignment\" },\n      { status: 500 }\n    );\n  }\n}","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/resources/unified-assignments/route\",\n        pathname: \"/api/resources/unified-assignments\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/resources/unified-assignments/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/resources/unified-assignments/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"6+CCAA,IAAA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,CAAA,CAAA,OAAA,IAAA,EAAA,EAAA,CAAA,CAAA,2CDfA,IAAA,EAAA,EAAA,CAAA,CAAA,OAGA,IAAM,EAAW,CAAA,EAFjB,AAEiB,EAFjB,CAAA,CAAA,OAEiB,YAAY,AAAZ,EAAY,2CAAA,oNAKtB,eAAe,EAAI,CAAoB,EAC5C,GAAI,CACF,GAAM,cAAE,CAAY,CAAE,CAAG,IAAI,IAAI,EAAQ,GAAG,EACtC,EAAU,EAAa,GAAG,CAAC,WAC3B,EAAa,EAAa,GAAG,CAAC,cAC9B,EAAc,AAAoC,WAAvB,GAAG,CAAC,eAE/B,EAAqB,EAAE,CAGzB,EAAiB,EAClB,IAAI,CAAC,yBACL,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;MAgBT,CAAC,EAEC,IACF,EAAiB,EAAe,CADrB,CACuB,CAAC,UAAW,EAAA,EAE5C,IACF,EAAiB,EAAe,EAAE,CAAC,CADrB,YACmC,EAAA,EAE/C,IACF,EAAiB,EAAe,EAAE,CAAC,EADpB,WACiC,EAAA,EAGlD,GAAM,CAAE,KAAM,CAAa,CAAE,MAAO,CAAc,CAAE,CAAG,MAAM,EAAe,KAAK,CAAC,UAAW,CAAE,WAAW,CAAM,GAE5G,EACF,QAAQ,KAAK,CADK,AACJ,qCAAsC,GAGpD,CAAC,GAAiB,EAAA,AAAE,EAAE,OAAO,CAAC,AAAC,IAC7B,EAAY,IAAI,CAAC,CACf,GAAI,EAAW,EAAE,CACjB,YAAa,EAAW,YAAY,CACpC,cAAe,YACf,gBAAiB,YACjB,QAAS,EAAW,OAAO,CAC3B,WAAY,EAAW,UAAU,CACjC,QAAS,EAAW,OAAO,CAC3B,MAAO,EAAW,KAAK,CACvB,aAAc,EAAW,YAAY,CACrC,oBAAqB,EAAW,mBAAmB,CACnD,UAAW,EAAW,SAAS,CAC/B,UAAW,EAAW,SAAS,CAE/B,KAAM,EAAW,SAAS,EAAE,MAAQ,oBACpC,KAAM,EAAW,SAAS,EAAE,MAAQ,YACpC,aAAc,EAAW,SAAS,EAAE,YACtC,EACF,GAIF,IAAI,EAAe,EAChB,IAAI,CAAC,uBACL,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;MAiBT,CAAC,EAEC,IACF,EAAe,EAAa,CADjB,CACmB,CAAC,UAAW,EAAA,EAExC,IACF,EAAe,EAAa,EAAE,CAAC,CADjB,YAC+B,EAAA,EAE3C,IACF,EAAe,EAAa,EAAE,CAAC,EADhB,WAC6B,EAAA,EAG9C,GAAM,CAAE,KAAM,CAAW,CAAE,MAAO,CAAY,CAAE,CAAG,MAAM,EAAa,KAAK,CAAC,UAAW,CAAE,UAAW,EAAM,GAmC1G,OAjCI,EACF,QAAQ,IADQ,CACH,CAAC,mCAAoC,GAGlD,CAAC,GAAe,EAAA,AAAE,EAAE,OAAO,CAAC,AAAC,IAC3B,EAAY,IAAI,CAAC,CACf,GAAI,EAAW,EAAE,CACjB,YAAa,EAAW,UAAU,CAClC,cAAe,UACf,gBAAiB,UACjB,QAAS,EAAW,OAAO,CAC3B,WAAY,EAAW,UAAU,CACjC,QAAS,EAAW,OAAO,CAC3B,MAAO,EAAW,KAAK,CACvB,aAAc,EAAW,YAAY,CACrC,oBAAqB,EAAW,mBAAmB,CACnD,UAAW,EAAW,SAAS,CAC/B,QAAS,EAAW,OAAO,CAE3B,KAAM,EAAW,OAAO,CAAG,CAAA,EAAG,EAAW,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,EAAW,OAAO,CAAC,KAAK,CAAA,CAAE,CAAG,kBACvF,KAAM,EAAW,OAAO,EAAE,MAAQ,UAClC,aAAc,EAAW,OAAO,EAAE,YACpC,EACF,GAIF,EAAY,IAAI,CAAC,CAAC,EAAG,KACnB,IAAM,EAAQ,IAAI,KAAK,EAAE,OAAO,EAAI,GAAG,OAAO,GAE9C,OADc,AACP,IADW,KAAK,EAAE,OAAO,EAAI,GAAG,OAAO,GAC/B,CACjB,GAEO,EAAA,YAAY,CAAC,IAAI,CAAC,EAC3B,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,iCAAkC,GACzC,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,uBAAwB,EACjC,CAAE,OAAQ,GAAI,EAElB,CACF,CAEO,eAAe,EAAK,CAAoB,EAC7C,GAAI,CAEF,IAUI,EAVE,eAAE,CAAa,aAAE,CAAW,SAAE,CAAO,YAAE,CAAU,SAAE,CAAO,OAAE,CAAK,cAAE,CAAY,qBAAE,CAAmB,CAAE,CAD/F,EACkG,IAD5F,EAAQ,IAAI,GAI/B,GAAI,CAAC,GAAiB,CAAC,GAAe,CAAC,EACrC,OAD8C,AACvC,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,sDAAuD,EAChE,CAAE,OAAQ,GAAI,GAMlB,GAAsB,cAAlB,EAA+B,CACjC,GAAM,CAAE,KAAM,CAAU,OAAE,CAAK,CAAE,CAAG,MAAM,EACvC,IAAI,CAAC,yBACL,MAAM,CAAC,CAAC,CACP,aAAc,UACd,aACA,UACA,QACA,EACA,aAAc,GAAgB,GAC9B,oBAAqB,GAAuB,EAC5C,WAAW,CACb,EAAE,EACD,MAAM,CAAC,CAAC;;;;;;;;;;;QAWT,CAAC,EACA,MAAM,GAET,GAAI,EAAO,MAAM,EACjB,EAAS,CACX,KAAwC,CAAjC,GAAI,AAAkB,cA8B3B,OAAO,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,yDAA0D,EACnE,CAAE,OAAQ,GAAI,GA/BhB,GAAM,CAAE,KAAM,CAAU,OAAE,CAAK,CAAE,CAAG,MAAM,EACvC,IAAI,CAAC,uBACL,MAAM,CAAC,CAAC,CACP,WAAY,UACZ,EACA,qBACA,QACA,EACA,aAAc,IAAgB,EAC9B,oBAAqB,GAAuB,EAC5C,WAAW,CACb,EAAE,EACD,MAAM,CAAC,CAAC;;;;;;;;;;;QAWT,CAAC,EACA,MAAM,GAET,GAAI,EAAO,MAAM,EACjB,EAAS,CACX,CAOA,MAPO,CAOA,EAAA,YAAY,CAAC,IAAI,CACtB,CACE,SAAS,EACT,cAAe,EAAO,EAAE,CACxB,QAAS,CAAA,EAAG,EAAc,gCAAgC,CAAC,CAC3D,WAAY,CACd,EACA,CAAE,OAAQ,GAAI,EAElB,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,qCAAsC,GAC7C,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,6BAA8B,EACvC,CAAE,OAAQ,GAAI,EAElB,CACF,CCzOA,IAAA,EAAA,EAAA,CAAA,CAAA,OAIA,IAAM,EAAc,IAAI,EAAA,mBAAmB,CAAC,CACxC,WAAY,CACR,KAAM,EAAA,SAAS,CAAC,SAAS,CACzB,KAAM,2CACN,SAAU,qCACV,SAAU,QACV,WAAY,EAChB,EACA,QAAS,CAAA,OACT,IADiD,eACc,CAA3C,EACpB,iBAAkB,+DAClB,iBAZqB,GAarB,SAAA,CACJ,GAIM,CAAE,kBAAgB,sBAAE,CAAoB,aAAE,CAAW,CAAE,CAAG,EAChE,SAAS,IACL,MAAO,CAAA,EAAA,EAAA,UAAA,AAAW,EAAC,kBACf,uBACA,CACJ,EACJ,CAEO,eAAe,EAAQ,CAAG,CAAE,CAAG,CAAE,CAAG,EACvC,IAAI,EACJ,IAAI,EAAU,2CAKV,EAAU,EAAQ,OAAO,CAAC,WAAY,KAAO,IAMjD,IAAM,EAAgB,MAAM,EAAY,OAAO,CAAC,EAAK,EAAK,SACtD,EACA,mBAHE,CAAA,CAIN,GACA,GAAI,CAAC,EAID,OAHA,EAAI,IADY,MACF,CAAG,IACjB,EAAI,GAAG,CAAC,eACS,MAAjB,CAAwB,CAApB,IAAyB,KAAhB,EAAoB,EAAI,SAAS,CAAC,IAAI,CAAC,EAAK,QAAQ,OAAO,IACjE,KAEX,GAAM,SAAE,CAAO,QAAE,CAAM,YAAE,CAAU,aAAE,CAAW,mBAAE,CAAiB,qBAAE,CAAmB,sBAAE,CAAoB,yBAAE,CAAuB,kBAAE,CAAgB,CAAE,CAAG,EACxJ,EAAoB,CAAA,EAAA,EAAA,gBAAA,AAAgB,EAAC,GACvC,GAAQ,EAAQ,EAAkB,aAAa,CAAC,EAAkB,EAAI,EAAkB,MAAM,CAAC,EAAA,AAAiB,EACpH,GAAI,GAAS,CAAC,EAAa,CACvB,IAAM,GAAgB,CAAQ,EAAkB,MAAM,CAAC,EAAiB,CAClE,EAAgB,EAAkB,aAAa,CAAC,EAAkB,CACxE,GAAI,IAC+B,IAA3B,EAAc,KADH,GACW,EAAc,CAAC,EACrC,MAAM,IAAI,EAAA,CAD0C,cAC3B,AAGrC,CACA,IAAI,EAAW,MACX,GAAU,EAAY,IAAb,CAAkB,EAAK,EAAD,CAG/B,GAAW,AAAa,OAHqB,KAC7C,EAAW,CAAA,EAEwB,IAAM,CAAA,EAE7C,IAAM,GACgB,IAAtB,EAAY,EAAkB,GAAb,EAEjB,CAAC,EAKK,EAAe,GAAS,CAAC,EACzB,EAAS,EAAI,MAAM,EAAI,MACvB,EAAS,CAAA,EAAA,EAAA,SAAA,AAAS,IAClB,EAAa,EAAO,WAVyE,OAUvD,GACtC,EAAU,QACZ,oBACA,EACA,WAAY,CACR,aAAc,CACV,iBAAiB,CAAQ,EAAW,YAAY,CAAC,eAAe,CAChE,gBAAgB,CAAQ,EAAW,YAAY,CAAC,cAAc,AAClE,0BACA,EACA,iBAAkB,CAAA,EAAA,EAAA,cAAA,AAAc,EAAC,EAAK,oBACtC,kBAAmB,AAAwD,OAAvD,EAA2B,EAAW,YAAA,AAAY,EAAY,KAAK,EAAI,EAAyB,SAAS,cAC7H,EACA,UAAW,EAAI,SAAS,CACxB,QAAU,AAAD,IACL,EAAI,EAAE,CAAC,QAAS,EACpB,EACA,sBAAkB,EAClB,8BAA+B,CAAC,EAAO,EAAU,IAAe,EAAY,cAAc,CAAC,EAAK,EAAO,EAAc,EACzH,EACA,cAAe,SACX,CACJ,CACJ,EACM,EAAc,IAAI,EAAA,eAAe,CAAC,GAClC,EAAc,IAAI,EAAA,gBAAgB,CAAC,GACnC,EAAU,EAAA,kBAAkB,CAAC,mBAAmB,CAAC,EAAa,CAAA,EAAA,EAAA,sBAAA,AAAsB,EAAC,IAC3F,GAAI,CACA,IAAM,EAAoB,MAAO,GACtB,EAAY,MAAM,CAAC,EAAS,GAAS,OAAO,CAAC,KAChD,GAAI,CAAC,EAAM,OACX,EAAK,aAAa,CAAC,CACf,mBAAoB,EAAI,UAAU,CAClC,YAAY,CAChB,GACA,IAAM,EAAqB,EAAO,qBAAqB,GAEvD,GAAI,CAAC,EACD,OAEJ,GAAI,EAAmB,GAAG,CAAC,EAHF,kBAGwB,EAAA,cAAc,CAAC,aAAa,CAAE,YAC3E,QAAQ,IAAI,CAAC,CAAC,2BAA2B,EAAE,EAAmB,GAAG,CAAC,kBAAkB,qEAAqE,CAAC,EAG9J,IAAM,EAAQ,EAAmB,GAAG,CAAC,cACrC,GAAI,EAAO,CACP,IAAM,EAAO,CAAA,EAAG,EAAO,CAAC,EAAE,EAAA,CAAO,CACjC,EAAK,aAAa,CAAC,CACf,aAAc,EACd,aAAc,EACd,iBAAkB,CACtB,GACA,EAAK,UAAU,CAAC,EACpB,MACI,CADG,CACE,UAAU,CAAC,CAAA,EAAG,EAAO,CAAC,EAAE,EAAI,GAAG,CAAA,CAAE,CAE9C,GAEE,EAAiB,MAAO,QACtB,EA0FI,EAzFR,IAAM,EAAoB,MAAO,CAAE,oBAAkB,CAAE,IACnD,GAAI,CACA,GAAI,CAAC,CAAA,EAAA,EAAA,cAAA,AAAc,EAAC,EAAK,gBAAkB,GAAwB,GAA2B,CAAC,EAK3F,OAJA,EAAI,SAD2G,CACjG,CAAG,IAEjB,EAAI,SAAS,CAAC,iBAAkB,eAChC,EAAI,GAAG,CAAC,gCACD,KAEX,IAAM,EAAW,MAAM,EAAkB,GACzC,EAAI,YAAY,CAAG,EAAQ,UAAU,CAAC,YAAY,CAClD,IAAI,EAAmB,EAAQ,UAAU,CAAC,gBAAgB,CAGtD,GACI,EAAI,SAAS,EAAE,CACf,CAFc,CAEV,SAAS,CAAC,GACd,OAAmB,GAG3B,IAAM,EAAY,EAAQ,UAAU,CAAC,aAAa,CAGlD,IAAI,EA6BA,OADA,MAAM,CAAA,EAAA,EAAA,YAAA,AAAY,EAAC,EAAa,EAAa,EAAU,EAAQ,UAAU,CAAC,gBAAgB,EACnF,IA7BA,EACP,IAAM,EAAO,MAAM,EAAS,IAAI,GAE1B,EAAU,CAAA,EAAA,EAAA,yBAAA,AAAyB,EAAC,EAAS,OAAO,EACtD,IACA,CAAO,CAAC,EAAA,GADG,mBACmB,CAAC,CAAG,CAAA,EAElC,CAAC,CAAO,CAAC,eAAe,EAAI,EAAK,IAAI,EAAE,CACvC,CAAO,CAAC,eAAe,CAAG,EAAK,IAAA,AAAI,EAEvC,IAAM,EAAa,KAAkD,IAA3C,EAAQ,UAAU,CAAC,mBAAmB,IAAoB,EAAQ,UAAU,CAAC,mBAAmB,EAAI,EAAA,cAAA,AAAc,GAAG,AAAQ,EAAQ,UAAU,CAAC,mBAAmB,CACvL,EAAS,KAA8C,IAAvC,EAAQ,UAAU,CAAC,eAAe,EAAoB,EAAQ,UAAU,CAAC,eAAe,EAAI,EAAA,cAAc,MAAG,EAAY,EAAQ,UAAU,CAAC,eAAe,CAcjL,MAZmB,CAYZ,AAXH,MAAO,CACH,KAAM,EAAA,eAAe,CAAC,SAAS,CAC/B,OAAQ,EAAS,MAAM,CACvB,KAAM,OAAO,IAAI,CAAC,MAAM,EAAK,WAAW,YACxC,CACJ,EACA,aAAc,YACV,SACA,CACJ,CACJ,CAEJ,CAKJ,CAAE,KALS,CAKF,EAAK,CAcV,KAXI,CAAsB,QAAO,KAAK,EAAI,EAAmB,OAAA,AAAO,EAAE,CAClE,MAAM,EAAY,cAAc,CAAC,EAAK,EAAK,CACvC,WAAY,aACZ,UAAW,EACX,UAAW,QACX,iBAAkB,CAAA,EAAA,EAAA,mBAAA,AAAmB,EAAC,cAClC,uBACA,CACJ,EACJ,EAAG,GAED,CACV,CACJ,EACM,EAAa,MAAM,EAAY,cAAc,CAAC,KAChD,aACA,WACA,EACA,UAAW,EAAA,SAAS,CAAC,SAAS,CAC9B,YAAY,EACZ,oBACA,mBAAmB,uBACnB,0BACA,oBACA,EACA,UAAW,EAAI,SACnB,AAD4B,GAG5B,GAAI,CAAC,EACD,KADQ,EACD,KAEX,GAAI,CAAe,MAAd,CAAqB,EAAS,AAA0C,GAA9C,IAAK,EAAoB,EAAW,KAAA,AAAK,EAAY,KAAK,EAAI,EAAkB,IAAI,IAAM,EAAA,eAAe,CAAC,SAAS,CAE9I,CAFgJ,KAE1I,OAAO,cAAc,CAAC,AAAI,MAAM,CAAC,kDAAkD,EAAgB,MAAd,CAAqB,EAAS,AAA2C,GAA/C,IAAK,EAAqB,EAAW,KAAK,AAAL,EAAiB,KAAK,EAAI,EAAmB,IAAI,CAAA,CAAE,EAAG,oBAAqB,CACjO,MAAO,OACP,YAAY,EACZ,cAAc,CAClB,EAEA,CAAC,CAAA,EAAA,EAAA,cAAA,AAAc,EAAC,EAAK,gBAAgB,AACrC,EAAI,SAAS,CAAC,iBAAkB,EAAuB,cAAgB,EAAW,MAAM,CAAG,OAAS,EAAW,OAAO,CAAG,QAAU,OAGnI,GACA,EAAI,QADS,CACA,CAAC,gBAAiB,2DAEnC,IAAM,EAAU,CAAA,EAAA,EAAA,2BAAA,AAA2B,EAAC,EAAW,KAAK,CAAC,OAAO,EAapE,MAZM,AAAF,AAAE,CAAA,AAAD,EAAC,EAAA,cAAA,AAAc,EAAC,EAAK,gBAAkB,GACxC,EAD6C,AACrC,GADwC,GAClC,CAAC,EAAA,sBAAsB,GAIrC,EAAW,YAAY,EAAK,EAAD,AAAK,SAAS,CAAC,kBAAqB,EAAD,AAAS,GAAG,CAAC,kBAAkB,AAC7F,EAAQ,GAAG,CAAC,gBAAiB,CAAA,EAAA,EAAA,qBAAqB,AAArB,EAAsB,EAAW,YAAY,GAE9E,MAAM,CAAA,EAAA,EAAA,YAAA,AAAY,EAAC,EAAa,EAAa,IAAI,SAAS,EAAW,KAAK,CAAC,IAAI,CAAE,SAC7E,EACA,OAAQ,EAAW,KAAK,CAAC,MAAM,EAAI,GACvC,IACO,IACX,EAGI,EACA,MAAM,EAAe,EADT,CAGZ,MAAM,EAAO,qBAAqB,CAAC,EAAI,OAAO,CAAE,IAAI,EAAO,KAAK,CAAC,EAAA,cAAc,CAAC,aAAa,CAAE,CACvF,SAAU,CAAA,EAAG,EAAO,CAAC,EAAE,EAAI,GAAG,CAAA,CAAE,CAChC,KAAM,EAAA,QAAQ,CAAC,MAAM,CACrB,WAAY,CACR,cAAe,EACf,cAAe,EAAI,GACvB,AAD0B,CAE9B,EAAG,GAEf,CAAE,MAAO,EAAK,CAeV,GAbI,AAAC,GAAgB,WAAF,CAAC,CAAgB,EAAA,eAAe,EAC/C,CADkD,KAC5C,EAAY,cAAc,CAAC,EAAK,EAAK,CACvC,WAAY,aACZ,UAAW,EACX,UAAW,QACX,iBAAkB,CAAA,EAAA,EAAA,mBAAA,AAAmB,EAAC,cAClC,uBACA,CACJ,EACJ,GAIA,EAAO,MAAM,EAKjB,OAHA,MAAM,CAAA,EAAA,EAAA,YAAA,AAAY,EAAC,EAAa,EAAa,IAAI,SAAS,KAAM,CAC5D,OAAQ,GACZ,IACO,IACX,CACJ,EAEA,qCAAqC","ignoreList":[1]}