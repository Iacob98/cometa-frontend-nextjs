{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,mNAAgB,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-materials.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport {\n  materialsApi,\n  suppliersApi,\n  materialAllocationsApi,\n  materialOrdersApi,\n  type Material,\n  type Supplier,\n  type MaterialAllocation,\n  type MaterialOrder,\n  type MaterialFilters,\n  type AllocationFilters,\n  type OrderFilters,\n  type AllocationRequest,\n  type MaterialOrderStatus,\n  type PaginatedResponse,\n} from \"@/lib/api-client\";\n\n// Query keys\nexport const materialKeys = {\n  all: [\"materials\"] as const,\n  lists: () => [...materialKeys.all, \"list\"] as const,\n  list: (filters: MaterialFilters) => [...materialKeys.lists(), filters] as const,\n  details: () => [...materialKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...materialKeys.details(), id] as const,\n  lowStock: () => [...materialKeys.all, \"low-stock\"] as const,\n};\n\nexport const supplierKeys = {\n  all: [\"suppliers\"] as const,\n  lists: () => [...supplierKeys.all, \"list\"] as const,\n  details: () => [...supplierKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...supplierKeys.details(), id] as const,\n};\n\nexport const allocationKeys = {\n  all: [\"allocations\"] as const,\n  lists: () => [...allocationKeys.all, \"list\"] as const,\n  list: (filters: AllocationFilters) => [...allocationKeys.lists(), filters] as const,\n  details: () => [...allocationKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...allocationKeys.details(), id] as const,\n};\n\nexport const orderKeys = {\n  all: [\"orders\"] as const,\n  lists: () => [...orderKeys.all, \"list\"] as const,\n  list: (filters: OrderFilters) => [...orderKeys.lists(), filters] as const,\n  details: () => [...orderKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...orderKeys.details(), id] as const,\n};\n\n// Centralized cache invalidation function for all material-related queries\nexport function invalidateAllMaterialQueries(queryClient: any) {\n  // Invalidate all material queries\n  queryClient.invalidateQueries({ queryKey: materialKeys.all });\n  queryClient.invalidateQueries({ queryKey: allocationKeys.all });\n  queryClient.invalidateQueries({ queryKey: orderKeys.all });\n\n  // Invalidate unified material views\n  queryClient.invalidateQueries({ queryKey: [...materialKeys.all, \"unified-warehouse\"] });\n  queryClient.invalidateQueries({ queryKey: [...materialKeys.all, \"allocation-targets\"] });\n\n  // Force refetch critical queries\n  queryClient.refetchQueries({\n    queryKey: [...materialKeys.all, \"unified-warehouse\"],\n    type: 'active'\n  });\n}\n\n// Unified Material Hooks with consistent data source\nexport function useMaterials(filters?: MaterialFilters) {\n  return useQuery({\n    queryKey: materialKeys.list(filters || {}),\n    queryFn: () => materialsApi.getMaterials(filters),\n    staleTime: 2 * 60 * 1000, // 2 minutes - shorter for inventory accuracy\n  });\n}\n\nexport function useMaterial(id: string) {\n  return useQuery({\n    queryKey: materialKeys.detail(id),\n    queryFn: () => materialsApi.getMaterial(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000,\n  });\n}\n\nexport function useLowStockMaterials() {\n  return useQuery({\n    queryKey: materialKeys.lowStock(),\n    queryFn: async () => {\n      const response = await fetch('/api/materials/low-stock');\n      if (!response.ok) {\n        throw new Error('Failed to fetch low stock materials');\n      }\n      const data = await response.json();\n      return data.materials || []; // Extract materials array from API response\n    },\n    staleTime: 2 * 60 * 1000, // 2 minutes - more frequent updates for stock alerts\n  });\n}\n\n// Unified Warehouse Materials Hook - Single source of truth for inventory\nexport function useUnifiedWarehouseMaterials() {\n  return useQuery({\n    queryKey: [...materialKeys.all, \"unified-warehouse\"],\n    queryFn: async () => {\n      const response = await fetch('/api/materials/unified?view=warehouse');\n      if (!response.ok) {\n        throw new Error('Failed to fetch warehouse materials');\n      }\n      const data = await response.json();\n      return data.materials || [];\n    },\n    staleTime: 30 * 1000, // 30 seconds for faster updates\n    gcTime: 5 * 60 * 1000, // Keep in cache for 5 minutes\n    refetchOnWindowFocus: true, // Refetch when user returns to window\n    refetchInterval: 60 * 1000, // Auto-refetch every minute\n  });\n}\n\n// Project Material Allocations Hook with unified data\nexport function useUnifiedProjectMaterials(projectId: string) {\n  return useQuery({\n    queryKey: [...allocationKeys.all, \"project\", projectId, \"unified\"],\n    queryFn: async () => {\n      const response = await fetch(`/api/materials/unified?view=project_allocations&project_id=${projectId}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch project materials');\n      }\n      const data = await response.json();\n      return { materials: data.materials || [], summary: data.allocation_summary };\n    },\n    enabled: !!projectId,\n    staleTime: 1 * 60 * 1000, // 1 minute\n    gcTime: 5 * 60 * 1000,\n  });\n}\n\n// Material Allocation Targets Hook\nexport function useMaterialAllocationTargets() {\n  return useQuery({\n    queryKey: [...materialKeys.all, \"allocation-targets\"],\n    queryFn: async () => {\n      const response = await fetch('/api/materials/unified?view=allocation_targets');\n      if (!response.ok) {\n        throw new Error('Failed to fetch allocation targets');\n      }\n      const data = await response.json();\n      return data.materials || [];\n    },\n    staleTime: 30 * 1000, // 30 seconds for responsive allocation targets\n    refetchOnWindowFocus: true,\n  });\n}\n\nexport function useCreateMaterial() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: Partial<Material>) => materialsApi.createMaterial(data),\n    onSuccess: (newMaterial) => {\n      queryClient.invalidateQueries({ queryKey: materialKeys.lists() });\n      queryClient.setQueryData(materialKeys.detail(newMaterial.id), newMaterial);\n      toast.success(\"Material created successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to create material: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateMaterial() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<Material> }) =>\n      materialsApi.updateMaterial(id, data),\n    onMutate: async ({ id, data }) => {\n      await queryClient.cancelQueries({ queryKey: materialKeys.detail(id) });\n      const previousMaterial = queryClient.getQueryData(materialKeys.detail(id));\n\n      queryClient.setQueryData(materialKeys.detail(id), (old: Material | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      return { previousMaterial };\n    },\n    onError: (error, { id }, context) => {\n      if (context?.previousMaterial) {\n        queryClient.setQueryData(materialKeys.detail(id), context.previousMaterial);\n      }\n      toast.error(`Failed to update material: ${error.message}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: materialKeys.lists() });\n      queryClient.invalidateQueries({ queryKey: materialKeys.lowStock() });\n      toast.success(\"Material updated successfully\");\n    },\n    onSettled: (data, error, { id }) => {\n      queryClient.invalidateQueries({ queryKey: materialKeys.detail(id) });\n    },\n  });\n}\n\nexport function useDeleteMaterial() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: string) => materialsApi.deleteMaterial(id),\n    onSuccess: (_, deletedId) => {\n      queryClient.removeQueries({ queryKey: materialKeys.detail(deletedId) });\n      queryClient.invalidateQueries({ queryKey: materialKeys.lists() });\n      queryClient.invalidateQueries({ queryKey: materialKeys.lowStock() });\n      toast.success(\"Material deleted successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to delete material: ${error.message}`);\n    },\n  });\n}\n\nexport function useAdjustStock() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, adjustment }: { id: string; adjustment: { quantity: number; reason: string } }) =>\n      materialsApi.adjustStock(id, adjustment),\n    onSuccess: (updatedMaterial) => {\n      queryClient.setQueryData(materialKeys.detail(updatedMaterial.id), updatedMaterial);\n      queryClient.invalidateQueries({ queryKey: materialKeys.lists() });\n      queryClient.invalidateQueries({ queryKey: materialKeys.lowStock() });\n      // Invalidate unified warehouse and allocation views\n      queryClient.invalidateQueries({ queryKey: [...materialKeys.all, \"unified-warehouse\"] });\n      queryClient.invalidateQueries({ queryKey: [...materialKeys.all, \"allocation-targets\"] });\n      toast.success(\"Stock adjusted successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to adjust stock: ${error.message}`);\n    },\n  });\n}\n\n// Material Consumption Hook\nexport function useConsumeMaterial() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: {\n      allocation_id: string;\n      consumed_qty: number;\n      work_entry_id?: string;\n      notes?: string\n    }) => {\n      return fetch('/api/materials/consume', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      }).then(response => {\n        if (!response.ok) {\n          return response.json().then(err => Promise.reject(new Error(err.error || 'Failed to consume material')));\n        }\n        return response.json();\n      });\n    },\n    onSuccess: (result, variables) => {\n      // Invalidate all material-related queries to ensure consistency\n      queryClient.invalidateQueries({ queryKey: materialKeys.all });\n      queryClient.invalidateQueries({ queryKey: [...allocationKeys.all] });\n      queryClient.invalidateQueries({ queryKey: [...materialKeys.all, \"unified-warehouse\"] });\n      queryClient.invalidateQueries({ queryKey: [...materialKeys.all, \"allocation-targets\"] });\n\n      // If we know the project, invalidate project-specific queries\n      if (variables.work_entry_id) {\n        queryClient.invalidateQueries({ queryKey: [...allocationKeys.all, \"project\"] });\n      }\n\n      toast.success(result.message || \"Material consumed successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to consume material: ${error.message}`);\n    },\n  });\n}\n\n// Supplier Hooks\nexport function useSuppliers() {\n  return useQuery({\n    queryKey: supplierKeys.lists(),\n    queryFn: () => suppliersApi.getSuppliers(),\n    staleTime: 10 * 60 * 1000, // 10 minutes - suppliers change less frequently\n  });\n}\n\nexport function useSupplier(id: string) {\n  return useQuery({\n    queryKey: supplierKeys.detail(id),\n    queryFn: () => suppliersApi.getSupplier(id),\n    enabled: !!id,\n    staleTime: 10 * 60 * 1000,\n  });\n}\n\nexport function useCreateSupplier() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: Partial<Supplier>) => suppliersApi.createSupplier(data),\n    onSuccess: (newSupplier) => {\n      queryClient.invalidateQueries({ queryKey: supplierKeys.lists() });\n      queryClient.setQueryData(supplierKeys.detail(newSupplier.id), newSupplier);\n      toast.success(\"Supplier created successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to create supplier: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateSupplier() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<Supplier> }) =>\n      suppliersApi.updateSupplier(id, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: supplierKeys.lists() });\n      toast.success(\"Supplier updated successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to update supplier: ${error.message}`);\n    },\n  });\n}\n\nexport function useDeleteSupplier() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: string) => suppliersApi.deleteSupplier(id),\n    onSuccess: (_, deletedId) => {\n      queryClient.removeQueries({ queryKey: supplierKeys.detail(deletedId) });\n      queryClient.invalidateQueries({ queryKey: supplierKeys.lists() });\n      toast.success(\"Supplier deleted successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to delete supplier: ${error.message}`);\n    },\n  });\n}\n\n// Allocation Hooks\nexport function useAllocations(filters?: AllocationFilters) {\n  return useQuery({\n    queryKey: allocationKeys.list(filters || {}),\n    queryFn: () => materialAllocationsApi.getAllocations(filters),\n    staleTime: 2 * 60 * 1000, // 2 minutes - allocations change frequently\n  });\n}\n\nexport function useAllocation(id: string) {\n  return useQuery({\n    queryKey: allocationKeys.detail(id),\n    queryFn: () => materialAllocationsApi.getAllocation(id),\n    enabled: !!id,\n    staleTime: 2 * 60 * 1000,\n  });\n}\n\nexport function useCreateAllocation() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: AllocationRequest) => materialAllocationsApi.createAllocation(data),\n    onSuccess: (newAllocation) => {\n      queryClient.invalidateQueries({ queryKey: allocationKeys.lists() });\n      queryClient.invalidateQueries({ queryKey: materialKeys.lists() });\n      queryClient.invalidateQueries({ queryKey: materialKeys.lowStock() });\n      queryClient.setQueryData(allocationKeys.detail(newAllocation.id), newAllocation);\n      toast.success(\"Material allocated successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to allocate material: ${error.message}`);\n    },\n  });\n}\n\nexport function useRecordUsage() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, usage }: { id: string; usage: { used_qty: number; notes?: string } }) =>\n      materialAllocationsApi.recordUsage(id, usage),\n    onSuccess: (updatedAllocation) => {\n      queryClient.setQueryData(allocationKeys.detail(updatedAllocation.id), updatedAllocation);\n      queryClient.invalidateQueries({ queryKey: allocationKeys.lists() });\n      queryClient.invalidateQueries({ queryKey: materialKeys.lists() });\n      toast.success(\"Usage recorded successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to record usage: ${error.message}`);\n    },\n  });\n}\n\n// Order Hooks\nexport function useOrders(filters?: OrderFilters) {\n  return useQuery({\n    queryKey: orderKeys.list(filters || {}),\n    queryFn: () => materialOrdersApi.getOrders(filters),\n    staleTime: 3 * 60 * 1000, // 3 minutes\n  });\n}\n\nexport function useOrder(id: string) {\n  return useQuery({\n    queryKey: orderKeys.detail(id),\n    queryFn: () => materialOrdersApi.getOrder(id),\n    enabled: !!id,\n    staleTime: 3 * 60 * 1000,\n  });\n}\n\nexport function useCreateOrder() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: Partial<MaterialOrder>) => materialOrdersApi.createOrder(data),\n    onSuccess: (newOrder) => {\n      queryClient.invalidateQueries({ queryKey: orderKeys.lists() });\n      queryClient.setQueryData(orderKeys.detail(newOrder.id), newOrder);\n      toast.success(\"Order created successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to create order: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateOrderStatus() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, status }: { id: string; status: MaterialOrderStatus }) =>\n      materialOrdersApi.updateOrderStatus(id, status),\n    onSuccess: (updatedOrder) => {\n      queryClient.setQueryData(orderKeys.detail(updatedOrder.id), updatedOrder);\n      queryClient.invalidateQueries({ queryKey: orderKeys.lists() });\n\n      // If order is delivered, update material stock levels\n      if (updatedOrder.status === \"delivered\") {\n        queryClient.invalidateQueries({ queryKey: materialKeys.lists() });\n        queryClient.invalidateQueries({ queryKey: materialKeys.lowStock() });\n      }\n\n      toast.success(\"Order status updated successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to update order status: ${error.message}`);\n    },\n  });\n}\n\n// Specialized hooks\nexport function useProjectAllocations(projectId: string) {\n  return useAllocations({ project_id: projectId });\n}\n\nexport function useTeamAllocations(teamId: string) {\n  return useAllocations({ team_id: teamId });\n}\n\nexport function usePendingOrders() {\n  return useOrders({ status: \"pending\" });\n}\n\nexport function useSupplierOrders(supplierId: string) {\n  return useOrders({ supplier_id: supplierId });\n}\n\n// Project Preparation specific hooks\nexport interface ProjectMaterial {\n  id: string;\n  material_id: string;\n  name: string;\n  sku?: string;\n  unit: string;\n  description?: string;\n  allocated_qty: number;\n  unit_price: number;\n  total_cost: number;\n  allocation_date: string;\n  return_date?: string;\n  status: 'allocated' | 'used' | 'returned' | 'cancelled';\n  notes?: string;\n  allocated_by_name?: string;\n}\n\nexport interface WarehouseMaterial {\n  id: string;\n  name: string;\n  sku?: string;\n  unit: string;\n  description?: string;\n  available_qty: number;\n  total_qty: number;\n  reserved_qty: number;\n  min_stock: number;\n  price: number;\n}\n\nexport interface ProjectMaterialsResponse {\n  materials: ProjectMaterial[];\n  summary: {\n    total_materials: number;\n    pending_count: number;\n    used_count: number;\n    total_cost: number;\n  };\n}\n\nexport interface MaterialAssignmentData {\n  project_id: string;\n  material_id: string;\n  quantity: number;\n  from_date: string;\n  to_date?: string;\n  notes?: string;\n}\n\nexport interface UpdateMaterialAssignmentData {\n  assignment_id: string;\n  quantity: number;\n  unit_price: number;\n  from_date: string;\n  to_date?: string;\n  notes?: string;\n}\n\nexport function useProjectMaterials(projectId: string) {\n  return useQuery({\n    queryKey: [...materialKeys.all, \"project\", projectId],\n    queryFn: async (): Promise<ProjectMaterialsResponse> => {\n      const response = await fetch(`/api/materials/project/${projectId}`, {\n        headers: {\n          'Cache-Control': 'no-cache',\n          'Pragma': 'no-cache'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch project materials');\n      }\n      return response.json();\n    },\n    enabled: !!projectId,\n    staleTime: 0, // Force fresh data every time\n    gcTime: 0, // Don't keep old data in memory\n  });\n}\n\nexport function useWarehouseMaterials() {\n  return useQuery({\n    queryKey: [...materialKeys.all, \"warehouse\"],\n    queryFn: async (): Promise<WarehouseMaterial[]> => {\n      const response = await fetch('/api/materials/warehouse');\n      if (!response.ok) {\n        throw new Error('Failed to fetch warehouse materials');\n      }\n      return response.json();\n    },\n    staleTime: 2 * 60 * 1000, // 2 minutes\n  });\n}\n\nexport function useAssignMaterialToProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (data: MaterialAssignmentData) => {\n      const response = await fetch('/api/materials/assignments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to assign material');\n      }\n\n      return response.json();\n    },\n    onSuccess: (data, variables) => {\n      // Invalidate legacy project materials\n      queryClient.invalidateQueries({\n        queryKey: [...materialKeys.all, \"project\", variables.project_id]\n      });\n\n      // Invalidate unified project materials\n      queryClient.invalidateQueries({\n        queryKey: [...allocationKeys.all, \"project\", variables.project_id, \"unified\"]\n      });\n\n      // Invalidate warehouse materials (stock has changed)\n      queryClient.invalidateQueries({\n        queryKey: [...materialKeys.all, \"warehouse\"]\n      });\n\n      // Invalidate unified warehouse materials\n      queryClient.invalidateQueries({\n        queryKey: [...materialKeys.all, \"unified-warehouse\"]\n      });\n\n      // Invalidate allocation targets (availability may have changed)\n      queryClient.invalidateQueries({\n        queryKey: [...materialKeys.all, \"allocation-targets\"]\n      });\n\n      // Force immediate refetch for real-time updates\n      queryClient.refetchQueries({\n        queryKey: [...allocationKeys.all, \"project\", variables.project_id, \"unified\"]\n      });\n\n      queryClient.refetchQueries({\n        queryKey: [...materialKeys.all, \"unified-warehouse\"]\n      });\n\n      toast.success('Material assigned successfully');\n    },\n    onError: (error) => {\n      toast.error(`Failed to assign material: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateMaterialAssignment() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (data: UpdateMaterialAssignmentData) => {\n      const { assignment_id, ...updateData } = data;\n      const response = await fetch(`/api/materials/assignments/${assignment_id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updateData),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to update material assignment');\n      }\n\n      return response.json();\n    },\n    onSuccess: (data, variables) => {\n      // Invalidate legacy project materials queries\n      queryClient.invalidateQueries({\n        predicate: (query) => {\n          return query.queryKey[0] === \"materials\" &&\n                 query.queryKey[1] === \"project\";\n        }\n      });\n\n      // Invalidate unified project materials queries\n      queryClient.invalidateQueries({\n        predicate: (query) => {\n          return query.queryKey.includes(\"unified\");\n        }\n      });\n\n      // Invalidate warehouse and allocation targets (stock may have changed)\n      queryClient.invalidateQueries({\n        queryKey: [...materialKeys.all, \"warehouse\"]\n      });\n\n      queryClient.invalidateQueries({\n        queryKey: [...materialKeys.all, \"unified-warehouse\"]\n      });\n\n      queryClient.invalidateQueries({\n        queryKey: [...materialKeys.all, \"allocation-targets\"]\n      });\n\n      toast.success('Material assignment updated successfully');\n    },\n    onError: (error) => {\n      toast.error(`Failed to update material assignment: ${error.message}`);\n    },\n  });\n}\n\nexport function useDeleteMaterialAssignment() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (assignmentId: string) => {\n      const response = await fetch(`/api/materials/assignments/${assignmentId}`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to delete material assignment');\n      }\n\n      return response.json();\n    },\n    onSuccess: (data, assignmentId) => {\n      // Invalidate all legacy project materials queries\n      queryClient.invalidateQueries({\n        predicate: (query) => {\n          return query.queryKey[0] === \"materials\" &&\n                 query.queryKey[1] === \"project\";\n        }\n      });\n\n      // Invalidate all unified queries\n      queryClient.invalidateQueries({\n        predicate: (query) => {\n          return query.queryKey.includes(\"unified\");\n        }\n      });\n\n      // Invalidate warehouse materials (stock has been restored)\n      queryClient.invalidateQueries({\n        queryKey: [...materialKeys.all, \"warehouse\"]\n      });\n\n      queryClient.invalidateQueries({\n        queryKey: [...materialKeys.all, \"unified-warehouse\"]\n      });\n\n      // Invalidate allocation targets (availability increased)\n      queryClient.invalidateQueries({\n        queryKey: [...materialKeys.all, \"allocation-targets\"]\n      });\n\n      toast.success('Material assignment deleted successfully');\n    },\n    onError: (error) => {\n      toast.error(`Failed to delete material assignment: ${error.message}`);\n    },\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1008, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-allocations.ts"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { toast } from 'sonner';\nimport { invalidateAllMaterialQueries } from './use-materials';\n\nexport interface MaterialAllocation {\n  id: string;\n  material_id: string;\n  project_id?: string;\n  crew_id?: string;\n  quantity_allocated: number;\n  quantity_used: number;\n  quantity_remaining: number;\n  allocated_date: string;\n  return_date?: string;\n  status: 'allocated' | 'partially_used' | 'fully_used' | 'returned';\n  notes?: string;\n  allocated_by?: string;\n  material?: {\n    id: string;\n    name: string;\n    category: string;\n    unit: string;\n    unit_price_eur: number;\n    supplier_name: string;\n  };\n  project?: {\n    id: string;\n    name: string;\n    city: string;\n    address: string;\n  };\n  allocator?: {\n    id: string;\n    name: string;\n    first_name: string;\n    last_name: string;\n    email: string;\n    role: string;\n  };\n  total_value: number;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface CreateAllocationData {\n  material_id: string;\n  project_id?: string;\n  crew_id?: string;\n  quantity_allocated: number;\n  allocated_date: string;\n  notes?: string;\n  allocated_by?: string;\n}\n\nexport interface UpdateAllocationData {\n  quantity_used?: number;\n  status?: string;\n  notes?: string;\n  return_date?: string;\n}\n\ninterface AllocationsFilters {\n  project_id?: string;\n  crew_id?: string;\n  status?: string;\n  material_id?: string;\n}\n\nconst api = {\n  getAllocations: async (filters?: AllocationsFilters): Promise<MaterialAllocation[]> => {\n    const params = new URLSearchParams();\n    if (filters?.project_id) params.append('project_id', filters.project_id);\n    if (filters?.crew_id) params.append('crew_id', filters.crew_id);\n    if (filters?.status) params.append('status', filters.status);\n    if (filters?.material_id) params.append('material_id', filters.material_id);\n\n    const url = `/api/materials/allocations${params.toString() ? `?${params.toString()}` : ''}`;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch allocations');\n    }\n\n    const data = await response.json();\n    return data.allocations || [];\n  },\n\n  getAllocation: async (id: string): Promise<MaterialAllocation> => {\n    const response = await fetch(`/api/materials/allocations/${id}`);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch allocation');\n    }\n\n    return response.json();\n  },\n\n  createAllocation: async (data: CreateAllocationData): Promise<{ success: boolean; allocation_id: string; message: string }> => {\n    const response = await fetch('/api/materials/allocations', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to create allocation');\n    }\n\n    return response.json();\n  },\n\n  updateAllocation: async (id: string, data: UpdateAllocationData): Promise<{ success: boolean }> => {\n    const response = await fetch(`/api/materials/allocations/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to update allocation');\n    }\n\n    return response.json();\n  },\n\n  deleteAllocation: async (id: string): Promise<{ success: boolean }> => {\n    const response = await fetch(`/api/materials/allocations/${id}`, {\n      method: 'DELETE',\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to delete allocation');\n    }\n\n    return response.json();\n  },\n};\n\nexport function useAllocations(filters?: AllocationsFilters) {\n  return useQuery({\n    queryKey: ['allocations', filters],\n    queryFn: () => api.getAllocations(filters),\n  });\n}\n\nexport function useAllocation(id: string) {\n  return useQuery({\n    queryKey: ['allocation', id],\n    queryFn: () => api.getAllocation(id),\n    enabled: !!id,\n  });\n}\n\nexport function useCreateAllocation() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: api.createAllocation,\n    onSuccess: (data) => {\n      // Use centralized cache invalidation for consistency\n      invalidateAllMaterialQueries(queryClient);\n\n      // Invalidate project-specific allocation views\n      queryClient.invalidateQueries({ queryKey: ['allocations', 'project'] });\n\n      toast.success(data.message || 'Allocation created successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}\n\nexport function useUpdateAllocation() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: UpdateAllocationData }) =>\n      api.updateAllocation(id, data),\n    onSuccess: (_, { id }) => {\n      // Use centralized cache invalidation\n      invalidateAllMaterialQueries(queryClient);\n      queryClient.invalidateQueries({ queryKey: ['allocation', id] });\n\n      toast.success('Allocation updated successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}\n\nexport function useDeleteAllocation() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: api.deleteAllocation,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['allocations'] });\n      queryClient.invalidateQueries({ queryKey: ['materials'] });\n      toast.success('Allocation deleted successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1175, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-material-order-budget.ts"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { toast } from 'sonner';\nimport type {\n  MaterialOrderBudgetImpact,\n  CreateBudgetTransactionRequest,\n  BudgetTransactionResponse\n} from '@/types';\n\n// Get budget impact for a material order\nexport function useMaterialOrderBudgetImpact(orderId: string) {\n  return useQuery({\n    queryKey: ['material-order-budget', orderId],\n    queryFn: async (): Promise<MaterialOrderBudgetImpact> => {\n      const response = await fetch(`/api/materials/orders/${orderId}/budget`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch budget impact');\n      }\n      return response.json();\n    },\n    enabled: !!orderId,\n  });\n}\n\n// Create budget transaction for material order\nexport function useCreateBudgetTransaction() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async ({\n      orderId,\n      data\n    }: {\n      orderId: string;\n      data: CreateBudgetTransactionRequest\n    }): Promise<BudgetTransactionResponse> => {\n      const response = await fetch(`/api/materials/orders/${orderId}/budget`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to create budget transaction');\n      }\n\n      return response.json();\n    },\n    onSuccess: (data, variables) => {\n      // Invalidate related queries\n      queryClient.invalidateQueries({\n        queryKey: ['material-order-budget', variables.orderId]\n      });\n      queryClient.invalidateQueries({\n        queryKey: ['material-orders']\n      });\n      queryClient.invalidateQueries({\n        queryKey: ['financial-summary']\n      });\n      queryClient.invalidateQueries({\n        queryKey: ['project', data.project_id]\n      });\n\n      toast.success(`Budget transaction created: €${data.amount_deducted.toFixed(2)} deducted`);\n    },\n    onError: (error: Error) => {\n      toast.error(error.message || 'Failed to create budget transaction');\n    },\n  });\n}\n\n// Hook to automatically deduct budget on order creation\nexport function useAutoBudgetDeduction() {\n  const createBudgetTransaction = useCreateBudgetTransaction();\n\n  const deductFromBudget = async (orderId: string, deduct: boolean = true) => {\n    if (!deduct) return null;\n\n    try {\n      return await createBudgetTransaction.mutateAsync({\n        orderId,\n        data: { deduct_from_budget: true }\n      });\n    } catch (error) {\n      console.error('Auto budget deduction failed:', error);\n      return null;\n    }\n  };\n\n  return {\n    deductFromBudget,\n    isLoading: createBudgetTransaction.isPending,\n    error: createBudgetTransaction.error,\n  };\n}"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AAAA;AACA;;;AAQO,SAAS,6BAA6B,OAAe;IAC1D,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU;YAAC;YAAyB;SAAQ;QAC5C,SAAS;YACP,MAAM,WAAW,MAAM,MAAM,CAAC,sBAAsB,EAAE,QAAQ,OAAO,CAAC;YACtE,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YACA,OAAO,SAAS,IAAI;QACtB;QACA,SAAS,CAAC,CAAC;IACb;AACF;AAGO,SAAS;IACd,MAAM,cAAc,IAAA,wMAAc;IAElC,OAAO,IAAA,6LAAW,EAAC;QACjB,YAAY,OAAO,EACjB,OAAO,EACP,IAAI,EAIL;YACC,MAAM,WAAW,MAAM,MAAM,CAAC,sBAAsB,EAAE,QAAQ,OAAO,CAAC,EAAE;gBACtE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,MAAM,IAAI,MAAM,MAAM,KAAK,IAAI;YACjC;YAEA,OAAO,SAAS,IAAI;QACtB;QACA,WAAW,CAAC,MAAM;YAChB,6BAA6B;YAC7B,YAAY,iBAAiB,CAAC;gBAC5B,UAAU;oBAAC;oBAAyB,UAAU,OAAO;iBAAC;YACxD;YACA,YAAY,iBAAiB,CAAC;gBAC5B,UAAU;oBAAC;iBAAkB;YAC/B;YACA,YAAY,iBAAiB,CAAC;gBAC5B,UAAU;oBAAC;iBAAoB;YACjC;YACA,YAAY,iBAAiB,CAAC;gBAC5B,UAAU;oBAAC;oBAAW,KAAK,UAAU;iBAAC;YACxC;YAEA,iJAAK,CAAC,OAAO,CAAC,CAAC,6BAA6B,EAAE,KAAK,eAAe,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;QAC1F;QACA,SAAS,CAAC;YACR,iJAAK,CAAC,KAAK,CAAC,MAAM,OAAO,IAAI;QAC/B;IACF;AACF;AAGO,SAAS;IACd,MAAM,0BAA0B;IAEhC,MAAM,mBAAmB,OAAO,SAAiB,SAAkB,IAAI;QACrE,IAAI,CAAC,QAAQ,OAAO;QAEpB,IAAI;YACF,OAAO,MAAM,wBAAwB,WAAW,CAAC;gBAC/C;gBACA,MAAM;oBAAE,oBAAoB;gBAAK;YACnC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iCAAiC;YAC/C,OAAO;QACT;IACF;IAEA,OAAO;QACL;QACA,WAAW,wBAAwB,SAAS;QAC5C,OAAO,wBAAwB,KAAK;IACtC;AACF","debugId":null}},
    {"offset": {"line": 1279, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-material-orders.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport type {\n  ProjectMaterialOrder,\n  CreateMaterialOrderRequest,\n  MaterialOrderStatus\n} from \"@/types\";\nimport { useAutoBudgetDeduction } from \"./use-material-order-budget\";\n\n// Query keys\nexport const materialOrderKeys = {\n  all: [\"material-orders\"] as const,\n  lists: () => [...materialOrderKeys.all, \"list\"] as const,\n  list: (filters: any) => [...materialOrderKeys.lists(), filters] as const,\n  details: () => [...materialOrderKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...materialOrderKeys.details(), id] as const,\n};\n\nexport interface MaterialOrderFilters {\n  project_id?: string;\n  supplier_id?: string;\n  status?: MaterialOrderStatus;\n  page?: number;\n  per_page?: number;\n}\n\n// Fetch material orders\nasync function fetchMaterialOrders(filters?: MaterialOrderFilters): Promise<{\n  items: ProjectMaterialOrder[];\n  total: number;\n  page: number;\n  per_page: number;\n  total_pages: number;\n}> {\n  const params = new URLSearchParams();\n\n  if (filters?.project_id) params.set('project_id', filters.project_id);\n  if (filters?.supplier_id) params.set('supplier_id', filters.supplier_id);\n  if (filters?.status) params.set('status', filters.status);\n  if (filters?.page) params.set('page', filters.page.toString());\n  if (filters?.per_page) params.set('per_page', filters.per_page.toString());\n\n  const response = await fetch(`/api/materials/orders?${params.toString()}`);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch material orders\");\n  }\n  return response.json();\n}\n\n// Fetch single material order\nasync function fetchMaterialOrder(id: string): Promise<ProjectMaterialOrder> {\n  const response = await fetch(`/api/materials/orders/${id}`);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch material order\");\n  }\n  return response.json();\n}\n\n// Create material order\nasync function createMaterialOrder(data: CreateMaterialOrderRequest): Promise<ProjectMaterialOrder> {\n  const response = await fetch(\"/api/materials/orders\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || \"Failed to create material order\");\n  }\n\n  return response.json();\n}\n\n// Update material order\nasync function updateMaterialOrder(id: string, data: {\n  status?: MaterialOrderStatus;\n  actual_delivery_date?: string;\n  notes?: string;\n}): Promise<ProjectMaterialOrder> {\n  const response = await fetch(`/api/materials/orders/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || \"Failed to update material order\");\n  }\n\n  return response.json();\n}\n\n// Delete material order\nasync function deleteMaterialOrder(id: string): Promise<void> {\n  const response = await fetch(`/api/materials/orders/${id}`, {\n    method: \"DELETE\",\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || \"Failed to delete material order\");\n  }\n}\n\n// Hooks\nexport function useMaterialOrders(filters?: MaterialOrderFilters) {\n  return useQuery({\n    queryKey: materialOrderKeys.list(filters || {}),\n    queryFn: () => fetchMaterialOrders(filters),\n    staleTime: 1000 * 60 * 5, // 5 minutes\n  });\n}\n\nexport function useMaterialOrder(id: string) {\n  return useQuery({\n    queryKey: materialOrderKeys.detail(id),\n    queryFn: () => fetchMaterialOrder(id),\n    enabled: !!id,\n    staleTime: 1000 * 60 * 5,\n  });\n}\n\nexport function useCreateMaterialOrder() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: createMaterialOrder,\n    onSuccess: (newOrder) => {\n      // Invalidate orders lists\n      queryClient.invalidateQueries({ queryKey: materialOrderKeys.lists() });\n\n      // Add the new order to cache\n      queryClient.setQueryData(materialOrderKeys.detail(newOrder.id), newOrder);\n\n      toast.success(\"Material order created successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to create order: ${error.message}`);\n    },\n  });\n}\n\n// Enhanced hook with automatic budget deduction\nexport function useCreateMaterialOrderWithBudget() {\n  const createOrder = useCreateMaterialOrder();\n  const { deductFromBudget } = useAutoBudgetDeduction();\n\n  return useMutation({\n    mutationFn: async (data: CreateMaterialOrderRequest & { deduct_from_budget?: boolean }) => {\n      const { deduct_from_budget = true, ...orderData } = data;\n\n      // Create the order first\n      const newOrder = await createOrder.mutateAsync(orderData);\n\n      // Then deduct from budget if requested\n      if (deduct_from_budget && newOrder.project_id) {\n        try {\n          await deductFromBudget(newOrder.id, true);\n        } catch (budgetError) {\n          console.warn('Budget deduction failed, but order was created:', budgetError);\n          toast.warning('Order created but budget deduction failed. Please manage manually.');\n        }\n      }\n\n      return newOrder;\n    },\n    onSuccess: (newOrder) => {\n      toast.success(`Order created and €${newOrder.total_cost_eur.toFixed(2)} deducted from project budget`);\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to create order: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateMaterialOrder() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: any }) =>\n      updateMaterialOrder(id, data),\n    onSuccess: (updatedOrder) => {\n      // Update individual order cache\n      queryClient.setQueryData(\n        materialOrderKeys.detail(updatedOrder.id),\n        updatedOrder\n      );\n\n      // Invalidate orders lists\n      queryClient.invalidateQueries({ queryKey: materialOrderKeys.lists() });\n\n      toast.success(\"Order updated successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to update order: ${error.message}`);\n    },\n  });\n}\n\nexport function useDeleteMaterialOrder() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: deleteMaterialOrder,\n    onSuccess: (_, deletedId) => {\n      // Remove from cache\n      queryClient.removeQueries({\n        queryKey: materialOrderKeys.detail(deletedId),\n      });\n\n      // Invalidate orders lists\n      queryClient.invalidateQueries({ queryKey: materialOrderKeys.lists() });\n\n      toast.success(\"Order deleted successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to delete order: ${error.message}`);\n    },\n  });\n}\n\n// Project-specific hooks\nexport function useProjectMaterialOrders(projectId: string) {\n  return useMaterialOrders({ project_id: projectId });\n}\n\nexport function useSupplierMaterialOrders(supplierId: string) {\n  return useMaterialOrders({ supplier_id: supplierId });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1502, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/app/%28dashboard%29/dashboard/materials/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport {\n  Plus,\n  Search,\n  Package,\n  TrendingDown,\n  AlertTriangle,\n  Truck,\n  ClipboardList,\n  DollarSign,\n  Building2,\n  Eye,\n  Edit,\n  Trash2,\n  MoreHorizontal,\n  ArrowUpDown,\n  Calendar,\n  CheckCircle,\n  Clock,\n  XCircle,\n  Filter,\n  TrendingUp,\n  Users,\n  MapPin,\n} from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, LineChart, Line } from 'recharts';\n\nimport {\n  useMaterials,\n  useLowStockMaterials,\n  useSuppliers,\n  useDeleteMaterial,\n  useAdjustStock,\n} from \"@/hooks/use-materials\";\nimport { useAllocations } from \"@/hooks/use-allocations\";\nimport { useMaterialOrders } from \"@/hooks/use-material-orders\";\nimport { usePermissions } from \"@/hooks/use-auth\";\nimport type { MaterialFilters, Material, MaterialUnit } from \"@/types\";\n\nexport default function MaterialsPage() {\n  const router = useRouter();\n  const { canManageInventory } = usePermissions();\n  const deleteMaterial = useDeleteMaterial();\n  const adjustStock = useAdjustStock();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [categoryFilter, setCategoryFilter] = useState<string>(\"all\");\n  const [stockFilter, setStockFilter] = useState<\"all\" | \"low\" | \"normal\">(\"all\");\n\n  const filters: MaterialFilters = {\n    search: searchQuery || undefined,\n    category: categoryFilter === \"all\" ? undefined : categoryFilter,\n    low_stock: stockFilter === \"low\" ? true : undefined,\n    page: 1,\n    per_page: 20,\n  };\n\n  const { data: materialsResponse, isLoading: materialsLoading, error: materialsError } = useMaterials(filters);\n  const { data: lowStockMaterials } = useLowStockMaterials();\n  const { data: suppliers } = useSuppliers();\n  const { data: allocations } = useAllocations();\n  const { data: ordersResponse } = useMaterialOrders({ page: 1, per_page: 10 });\n\n  const materials = materialsResponse?.items || [];\n  const orders = ordersResponse?.items || [];\n\n  const handleDeleteMaterial = async (materialId: string, materialName: string) => {\n    if (confirm(`Are you sure you want to delete \"${materialName}\"? This action cannot be undone.`)) {\n      await deleteMaterial.mutateAsync(materialId);\n    }\n  };\n\n  const handleStockAdjustment = async (materialId: string, quantity: number, reason: string) => {\n    try {\n      await adjustStock.mutateAsync({ id: materialId, adjustment: { quantity, reason } });\n    } catch (error) {\n      console.error(\"Failed to adjust stock:\", error);\n    }\n  };\n\n  const getStockBadgeVariant = (material: Material) => {\n    if (material.current_stock <= material.min_stock_threshold) return \"destructive\";\n    if (material.current_stock <= material.min_stock_threshold * 1.2) return \"outline\";\n    return \"secondary\";\n  };\n\n  const getStockStatus = (material: Material) => {\n    if (material.current_stock <= material.min_stock_threshold) return \"Low Stock\";\n    if (material.current_stock <= material.min_stock_threshold * 1.2) return \"Warning\";\n    return \"Normal\";\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat(\"de-DE\", {\n      style: \"currency\",\n      currency: \"EUR\",\n    }).format(amount);\n  };\n\n  const formatUnit = (unit: MaterialUnit) => {\n    const unitLabels: Record<MaterialUnit, string> = {\n      piece: \"pcs\",\n      meter: \"m\",\n      kg: \"kg\",\n      ton: \"t\",\n      liter: \"L\",\n      m3: \"m³\",\n      box: \"box\",\n      pallet: \"plt\",\n      roll: \"roll\",\n    };\n    return unitLabels[unit] || unit;\n  };\n\n  if (materialsError) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <h1 className=\"text-3xl font-bold tracking-tight\">Materials</h1>\n        </div>\n        <Card>\n          <CardContent className=\"py-8\">\n            <div className=\"text-center text-muted-foreground\">\n              Failed to load materials. Please try again later.\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Materials & Inventory</h1>\n          <p className=\"text-muted-foreground\">\n            Manage materials, track inventory, and monitor stock levels\n          </p>\n        </div>\n        {canManageInventory && (\n          <div className=\"flex space-x-2\">\n            <Button variant=\"outline\" onClick={() => router.push(\"/dashboard/materials/suppliers\")}>\n              <Building2 className=\"mr-2 h-4 w-4\" />\n              Suppliers\n            </Button>\n            <Button variant=\"outline\" onClick={() => router.push(\"/dashboard/materials/new\")}>\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Add Material\n            </Button>\n            <Button onClick={() => router.push(\"/dashboard/materials/order\")}>\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Order Materials\n            </Button>\n          </div>\n        )}\n      </div>\n\n      {/* Overview Cards */}\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Materials</CardTitle>\n            <Package className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{materialsResponse?.total || 0}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              In inventory system\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Low Stock Items</CardTitle>\n            <AlertTriangle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-destructive\">{lowStockMaterials?.length || 0}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Need reordering\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Orders</CardTitle>\n            <Truck className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {orders.filter(order => [\"pending\", \"ordered\"].includes(order.status)).length}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Pending delivery\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Inventory Value</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {formatCurrency(\n                materials.reduce((sum, material) =>\n                  sum + (material.current_stock * material.unit_cost), 0\n                )\n              )}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Total stock value\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Tabs defaultValue=\"inventory\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"inventory\">Inventory ({materials.length})</TabsTrigger>\n          <TabsTrigger value=\"low-stock\">\n            Low Stock ({lowStockMaterials?.length || 0})\n          </TabsTrigger>\n          <TabsTrigger value=\"allocations\">Allocations ({allocations?.length || 0})</TabsTrigger>\n          <TabsTrigger value=\"orders\">Orders ({orders.length})</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"inventory\" className=\"space-y-6\">\n          {/* Filters */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Filter Materials</CardTitle>\n              <CardDescription>\n                Search and filter materials by various criteria\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex flex-col space-y-4 md:flex-row md:space-y-0 md:space-x-4\">\n                <div className=\"flex-1\">\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                    <Input\n                      placeholder=\"Search materials by name or description...\"\n                      value={searchQuery}\n                      onChange={(e) => setSearchQuery(e.target.value)}\n                      className=\"pl-8\"\n                    />\n                  </div>\n                </div>\n                <Select value={categoryFilter} onValueChange={setCategoryFilter}>\n                  <SelectTrigger className=\"w-48\">\n                    <SelectValue placeholder=\"Filter by category\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Categories</SelectItem>\n                    <SelectItem value=\"cables\">Cables</SelectItem>\n                    <SelectItem value=\"conduits\">Conduits</SelectItem>\n                    <SelectItem value=\"tools\">Tools</SelectItem>\n                    <SelectItem value=\"equipment\">Equipment</SelectItem>\n                    <SelectItem value=\"consumables\">Consumables</SelectItem>\n                  </SelectContent>\n                </Select>\n                <Select value={stockFilter} onValueChange={(value: \"all\" | \"low\" | \"normal\") => setStockFilter(value)}>\n                  <SelectTrigger className=\"w-48\">\n                    <SelectValue placeholder=\"Filter by stock\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Stock Levels</SelectItem>\n                    <SelectItem value=\"low\">Low Stock</SelectItem>\n                    <SelectItem value=\"normal\">Normal Stock</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Materials Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Package className=\"h-5 w-5\" />\n                Materials Inventory\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {materialsLoading ? (\n                <div className=\"space-y-4\">\n                  {[...Array(5)].map((_, i) => (\n                    <div key={i} className=\"flex space-x-4\">\n                      <div className=\"h-4 bg-muted animate-pulse rounded flex-1\" />\n                      <div className=\"h-4 bg-muted animate-pulse rounded w-20\" />\n                      <div className=\"h-4 bg-muted animate-pulse rounded w-16\" />\n                    </div>\n                  ))}\n                </div>\n              ) : materials.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Package className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                  <h3 className=\"mt-2 text-sm font-semibold\">No materials found</h3>\n                  <p className=\"mt-1 text-sm text-muted-foreground\">\n                    {searchQuery || categoryFilter !== \"all\" || stockFilter !== \"all\"\n                      ? \"No materials match your current filters.\"\n                      : \"Get started by adding your first material.\"}\n                  </p>\n                  {canManageInventory && (\n                    <Button\n                      className=\"mt-4\"\n                      onClick={() => router.push(\"/dashboard/materials/new\")}\n                    >\n                      <Plus className=\"mr-2 h-4 w-4\" />\n                      Add Material\n                    </Button>\n                  )}\n                </div>\n              ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Material</TableHead>\n                      <TableHead>Category</TableHead>\n                      <TableHead>Stock Level</TableHead>\n                      <TableHead>Unit Cost</TableHead>\n                      <TableHead>Total Value</TableHead>\n                      <TableHead>Supplier</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead className=\"w-[70px]\">Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {materials.map((material) => (\n                      <TableRow key={material.id}>\n                        <TableCell>\n                          <div>\n                            <div className=\"font-medium\">{material.name}</div>\n                            <div className=\"text-sm text-muted-foreground\">\n                              {material.description}\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <Badge variant=\"outline\">{material.category}</Badge>\n                        </TableCell>\n                        <TableCell>\n                          <div>\n                            <div className=\"font-medium\">\n                              {material.current_stock} {formatUnit(material.unit)}\n                            </div>\n                            <div className=\"text-sm text-muted-foreground\">\n                              Min: {material.min_stock_threshold} {formatUnit(material.unit)}\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"font-mono\">\n                            {formatCurrency(material.unit_cost)}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"font-mono font-medium\">\n                            {formatCurrency(material.current_stock * material.unit_cost)}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"text-sm\">\n                            {material.supplier?.name || \"—\"}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <Badge variant={getStockBadgeVariant(material)}>\n                            {getStockStatus(material)}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>\n                          <DropdownMenu>\n                            <DropdownMenuTrigger asChild>\n                              <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                                <span className=\"sr-only\">Open menu</span>\n                                <MoreHorizontal className=\"h-4 w-4\" />\n                              </Button>\n                            </DropdownMenuTrigger>\n                            <DropdownMenuContent align=\"end\">\n                              <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                              <DropdownMenuItem\n                                onClick={() => router.push(`/dashboard/materials/${material.id}`)}\n                              >\n                                <Eye className=\"mr-2 h-4 w-4\" />\n                                View Details\n                              </DropdownMenuItem>\n                              {canManageInventory && (\n                                <>\n                                  <DropdownMenuItem\n                                    onClick={() => router.push(`/dashboard/materials/${material.id}`)}\n                                  >\n                                    <Edit className=\"mr-2 h-4 w-4\" />\n                                    Edit Material\n                                  </DropdownMenuItem>\n                                  <DropdownMenuItem\n                                    onClick={() => router.push(`/dashboard/materials/${material.id}/adjust`)}\n                                  >\n                                    <ArrowUpDown className=\"mr-2 h-4 w-4\" />\n                                    Adjust Stock\n                                  </DropdownMenuItem>\n                                  <DropdownMenuSeparator />\n                                  <DropdownMenuItem\n                                    className=\"text-destructive\"\n                                    onClick={() => handleDeleteMaterial(material.id, material.name)}\n                                  >\n                                    <Trash2 className=\"mr-2 h-4 w-4\" />\n                                    Delete Material\n                                  </DropdownMenuItem>\n                                </>\n                              )}\n                            </DropdownMenuContent>\n                          </DropdownMenu>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"low-stock\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <AlertTriangle className=\"h-5 w-5 text-destructive\" />\n                Low Stock Alert\n              </CardTitle>\n              <CardDescription>\n                Materials that need immediate attention\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {lowStockMaterials?.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Package className=\"mx-auto h-12 w-12 text-green-500\" />\n                  <h3 className=\"mt-2 text-sm font-semibold\">All stock levels are healthy</h3>\n                  <p className=\"mt-1 text-sm text-muted-foreground\">\n                    No materials are currently below minimum stock levels.\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {lowStockMaterials?.map((material) => (\n                    <div\n                      key={material.id}\n                      className=\"flex items-center justify-between p-4 border border-destructive/20 rounded-lg bg-destructive/5\"\n                    >\n                      <div className=\"space-y-1\">\n                        <div className=\"font-medium\">{material.name}</div>\n                        <div className=\"text-sm text-muted-foreground\">\n                          Current: {material.current_stock} {formatUnit(material.unit)} /\n                          Min: {material.min_stock_threshold} {formatUnit(material.unit)}\n                        </div>\n                      </div>\n                      <div className=\"flex space-x-2\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => router.push(`/dashboard/materials/order?material=${material.id}`)}\n                        >\n                          <Truck className=\"mr-2 h-4 w-4\" />\n                          Order\n                        </Button>\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => router.push(`/dashboard/materials/${material.id}`)}\n                        >\n                          <Eye className=\"mr-2 h-4 w-4\" />\n                          View\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"allocations\" className=\"space-y-6\">\n          {/* Allocation Statistics */}\n          <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Allocations</CardTitle>\n                <ClipboardList className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{allocations?.length || 0}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Active material assignments\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Projects with Materials</CardTitle>\n                <MapPin className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {new Set(allocations?.map(a => a.project_id).filter(Boolean)).size || 0}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Unique projects\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Allocated Value</CardTitle>\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {formatCurrency(\n                    allocations?.reduce((sum, allocation) =>\n                      sum + (allocation.allocated_qty * (allocation.material?.default_price_eur || 0)), 0\n                    ) || 0\n                  )}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Total allocation value\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Utilization Rate</CardTitle>\n                <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {allocations?.length > 0 ? Math.round(\n                    (allocations.reduce((sum, a) => sum + (a.used_qty || 0), 0) /\n                     allocations.reduce((sum, a) => sum + a.allocated_qty, 0)) * 100\n                  ) : 0}%\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Materials actually used\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Allocation Analytics */}\n          <div className=\"grid gap-6 lg:grid-cols-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Allocation by Material Type</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <AllocationChart />\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Project Allocation Distribution</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ProjectAllocationChart />\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Allocations Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <ClipboardList className=\"h-5 w-5\" />\n                Material Allocations\n              </CardTitle>\n              <CardDescription>\n                Track material assignments to projects and teams\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {!allocations?.length ? (\n                <div className=\"text-center py-8\">\n                  <ClipboardList className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                  <h3 className=\"mt-2 text-sm font-semibold\">No allocations found</h3>\n                  <p className=\"mt-1 text-sm text-muted-foreground\">\n                    Start allocating materials to projects to track usage.\n                  </p>\n                  {canManageInventory && (\n                    <Button\n                      className=\"mt-4\"\n                      onClick={() => router.push(\"/dashboard/materials/allocate\")}\n                    >\n                      <Plus className=\"mr-2 h-4 w-4\" />\n                      New Allocation\n                    </Button>\n                  )}\n                </div>\n              ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Material</TableHead>\n                      <TableHead>Project</TableHead>\n                      <TableHead>Allocated</TableHead>\n                      <TableHead>Used</TableHead>\n                      <TableHead>Remaining</TableHead>\n                      <TableHead>Value</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead className=\"w-[70px]\">Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {allocations?.map((allocation) => {\n                      const remaining = allocation.allocated_qty - (allocation.used_qty || 0);\n                      const utilizationPercentage = (allocation.used_qty || 0) / allocation.allocated_qty * 100;\n                      return (\n                        <TableRow key={allocation.id}>\n                          <TableCell>\n                            <div>\n                              <div className=\"font-medium\">{allocation.material?.name}</div>\n                              <div className=\"text-sm text-muted-foreground\">\n                                {allocation.material?.category}\n                              </div>\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div>\n                              <div className=\"font-medium\">{allocation.project_name || 'Unknown Project'}</div>\n                              <div className=\"text-sm text-muted-foreground\">\n                                {allocation.crew_name || 'No Crew'}\n                              </div>\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"font-medium\">\n                              {allocation.allocated_qty} {formatUnit(allocation.material?.unit || 'piece')}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"font-medium\">\n                              {allocation.used_qty || 0} {formatUnit(allocation.material?.unit || 'piece')}\n                            </div>\n                            <div className=\"text-sm text-muted-foreground\">\n                              {Math.round(utilizationPercentage)}% used\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"font-medium\">\n                              {remaining} {formatUnit(allocation.material?.unit || 'piece')}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"font-mono\">\n                              {formatCurrency(allocation.allocated_qty * (allocation.material?.default_price_eur || 0))}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <Badge variant={utilizationPercentage > 90 ? \"default\" : utilizationPercentage > 50 ? \"secondary\" : \"outline\"}>\n                              {utilizationPercentage > 90 ? \"High Usage\" : utilizationPercentage > 50 ? \"In Use\" : \"Available\"}\n                            </Badge>\n                          </TableCell>\n                          <TableCell>\n                            <DropdownMenu>\n                              <DropdownMenuTrigger asChild>\n                                <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                                  <span className=\"sr-only\">Open menu</span>\n                                  <MoreHorizontal className=\"h-4 w-4\" />\n                                </Button>\n                              </DropdownMenuTrigger>\n                              <DropdownMenuContent align=\"end\">\n                                <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                                <DropdownMenuItem\n                                  onClick={() => router.push(`/dashboard/materials/allocations/${allocation.id}`)}\n                                >\n                                  <Eye className=\"mr-2 h-4 w-4\" />\n                                  View Details\n                                </DropdownMenuItem>\n                                {canManageInventory && (\n                                  <>\n                                    <DropdownMenuItem\n                                      onClick={() => router.push(`/dashboard/materials/allocations/${allocation.id}/edit`)}\n                                    >\n                                      <Edit className=\"mr-2 h-4 w-4\" />\n                                      Edit Allocation\n                                    </DropdownMenuItem>\n                                    <DropdownMenuItem\n                                      onClick={() => router.push(`/dashboard/materials/allocations/${allocation.id}/usage`)}\n                                    >\n                                      <ArrowUpDown className=\"mr-2 h-4 w-4\" />\n                                      Update Usage\n                                    </DropdownMenuItem>\n                                  </>\n                                )}\n                              </DropdownMenuContent>\n                            </DropdownMenu>\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"orders\" className=\"space-y-6\">\n          {/* Order Statistics */}\n          <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Orders</CardTitle>\n                <Truck className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{orders.length}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  All purchase orders\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Pending Orders</CardTitle>\n                <Clock className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold text-orange-600\">\n                  {orders.filter(order => [\"pending\", \"ordered\"].includes(order.status)).length}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Awaiting delivery\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Delivered Orders</CardTitle>\n                <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {orders.filter(order => order.status === \"delivered\").length}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Successfully received\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Order Value</CardTitle>\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {formatCurrency(\n                    orders.reduce((sum, order) =>\n                      sum + (order.quantity * (order.unit_price || 0)), 0\n                    )\n                  )}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Total purchasing value\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Order Analytics */}\n          <div className=\"grid gap-6 lg:grid-cols-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Order Status Distribution</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <OrderStatusChart />\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Monthly Order Trends</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <OrderTrendsChart />\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Orders Management */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Truck className=\"h-5 w-5\" />\n                Material Orders\n              </CardTitle>\n              <CardDescription>\n                Manage purchase orders and deliveries from suppliers\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <Input\n                    placeholder=\"Search orders...\"\n                    className=\"w-64\"\n                  />\n                  <Button variant=\"outline\" size=\"sm\">\n                    <Filter className=\"mr-2 h-4 w-4\" />\n                    Filter\n                  </Button>\n                </div>\n                {canManageInventory && (\n                  <Button onClick={() => router.push(\"/dashboard/materials/order\")}>\n                    <Plus className=\"mr-2 h-4 w-4\" />\n                    New Order\n                  </Button>\n                )}\n              </div>\n\n              {orders.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Truck className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                  <h3 className=\"mt-2 text-sm font-semibold\">No orders found</h3>\n                  <p className=\"mt-1 text-sm text-muted-foreground\">\n                    Start by creating your first material order.\n                  </p>\n                  {canManageInventory && (\n                    <Button\n                      className=\"mt-4\"\n                      onClick={() => router.push(\"/dashboard/materials/order\")}\n                    >\n                      <Plus className=\"mr-2 h-4 w-4\" />\n                      Create Order\n                    </Button>\n                  )}\n                </div>\n              ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Order ID</TableHead>\n                      <TableHead>Material</TableHead>\n                      <TableHead>Supplier</TableHead>\n                      <TableHead>Quantity</TableHead>\n                      <TableHead>Unit Price</TableHead>\n                      <TableHead>Total</TableHead>\n                      <TableHead>Expected Delivery</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead className=\"w-[70px]\">Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {orders.map((order) => {\n                      const total = order.quantity * (order.unit_price || 0);\n                      const isOverdue = order.expected_delivery_date &&\n                        new Date(order.expected_delivery_date) < new Date() &&\n                        order.status !== \"delivered\";\n\n                      return (\n                        <TableRow key={order.id}>\n                          <TableCell>\n                            <div className=\"font-mono text-sm\">\n                              #{order.id.slice(0, 8)}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div>\n                              <div className=\"font-medium\">{order.material?.name}</div>\n                              <div className=\"text-sm text-muted-foreground\">\n                                {order.material?.category}\n                              </div>\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div>\n                              <div className=\"font-medium\">{order.supplier?.name}</div>\n                              <div className=\"text-sm text-muted-foreground\">\n                                {order.supplier?.contact_person}\n                              </div>\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"font-medium\">\n                              {order.quantity} {formatUnit(order.material?.unit || 'piece')}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"font-mono\">\n                              {formatCurrency(order.unit_price || 0)}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"font-mono font-medium\">\n                              {formatCurrency(total)}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className={`text-sm ${isOverdue ? 'text-destructive font-medium' : ''}`}>\n                              {order.expected_delivery_date ? new Date(order.expected_delivery_date).toLocaleDateString() : '—'}\n                              {isOverdue && (\n                                <div className=\"text-xs text-destructive\">Overdue</div>\n                              )}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <Badge variant={\n                              order.status === \"delivered\" ? \"default\" :\n                              order.status === \"ordered\" ? \"secondary\" :\n                              order.status === \"pending\" ? \"outline\" : \"destructive\"\n                            }>\n                              {order.status === \"delivered\" ? (\n                                <>\n                                  <CheckCircle className=\"mr-1 h-3 w-3\" />\n                                  Delivered\n                                </>\n                              ) : order.status === \"ordered\" ? (\n                                <>\n                                  <Clock className=\"mr-1 h-3 w-3\" />\n                                  Ordered\n                                </>\n                              ) : order.status === \"pending\" ? (\n                                <>\n                                  <Clock className=\"mr-1 h-3 w-3\" />\n                                  Pending\n                                </>\n                              ) : (\n                                <>\n                                  <XCircle className=\"mr-1 h-3 w-3\" />\n                                  Cancelled\n                                </>\n                              )}\n                            </Badge>\n                          </TableCell>\n                          <TableCell>\n                            <DropdownMenu>\n                              <DropdownMenuTrigger asChild>\n                                <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                                  <span className=\"sr-only\">Open menu</span>\n                                  <MoreHorizontal className=\"h-4 w-4\" />\n                                </Button>\n                              </DropdownMenuTrigger>\n                              <DropdownMenuContent align=\"end\">\n                                <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                                <DropdownMenuItem\n                                  onClick={() => router.push(`/dashboard/materials/orders/${order.id}`)}\n                                >\n                                  <Eye className=\"mr-2 h-4 w-4\" />\n                                  View Details\n                                </DropdownMenuItem>\n                                {canManageInventory && order.status !== \"delivered\" && (\n                                  <>\n                                    <DropdownMenuItem\n                                      onClick={() => router.push(`/dashboard/materials/orders/${order.id}`)}\n                                    >\n                                      <Edit className=\"mr-2 h-4 w-4\" />\n                                      Edit Order\n                                    </DropdownMenuItem>\n                                    {order.status === \"pending\" && (\n                                      <DropdownMenuItem>\n                                        <CheckCircle className=\"mr-2 h-4 w-4\" />\n                                        Mark as Ordered\n                                      </DropdownMenuItem>\n                                    )}\n                                    {(order.status === \"pending\" || order.status === \"ordered\") && (\n                                      <DropdownMenuItem>\n                                        <Truck className=\"mr-2 h-4 w-4\" />\n                                        Mark as Delivered\n                                      </DropdownMenuItem>\n                                    )}\n                                  </>\n                                )}\n                              </DropdownMenuContent>\n                            </DropdownMenu>\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\n// Chart Components for Materials Analytics\nconst AllocationChart = () => {\n  const { data: allocations } = useAllocations();\n\n  const chartData = allocations?.reduce((acc, allocation) => {\n    const category = allocation.material?.category || 'Other';\n    const existing = acc.find(item => item.category === category);\n    if (existing) {\n      existing.value += allocation.allocated_qty * (allocation.material?.default_price_eur || 0);\n      existing.count += 1;\n    } else {\n      acc.push({\n        category,\n        value: allocation.allocated_qty * (allocation.material?.default_price_eur || 0),\n        count: 1\n      });\n    }\n    return acc;\n  }, [] as Array<{ category: string; value: number; count: number }>) || [];\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <BarChart data={chartData}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"category\" />\n        <YAxis />\n        <Tooltip formatter={(value: any) => [`€${value.toLocaleString()}`, 'Allocated Value']} />\n        <Bar dataKey=\"value\" fill=\"#3b82f6\" name=\"Allocated Value\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n\nconst ProjectAllocationChart = () => {\n  const { data: allocations } = useAllocations();\n\n  const chartData = allocations?.reduce((acc, allocation) => {\n    const project = allocation.project_name || 'Unassigned';\n    const existing = acc.find(item => item.project === project);\n    if (existing) {\n      existing.value += allocation.allocated_qty * (allocation.material?.default_price_eur || 0);\n    } else {\n      acc.push({\n        project: project.length > 20 ? project.substring(0, 20) + '...' : project,\n        value: allocation.allocated_qty * (allocation.material?.default_price_eur || 0)\n      });\n    }\n    return acc;\n  }, [] as Array<{ project: string; value: number }>) || [];\n\n  const COLORS = ['#3b82f6', '#ef4444', '#22c55e', '#f59e0b', '#8b5cf6', '#06b6d4'];\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <PieChart>\n        <Pie\n          data={chartData}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          label={({ project, percent }) => `${project} ${(percent * 100).toFixed(0)}%`}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n        >\n          {chartData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Tooltip formatter={(value: any) => [`€${value.toLocaleString()}`, 'Allocated Value']} />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nconst OrderStatusChart = () => {\n  const { data: ordersResponse } = useMaterialOrders({ page: 1, per_page: 100 });\n  const orders = ordersResponse?.items || [];\n\n  const statusData = orders.reduce((acc, order) => {\n    const status = order.status || 'pending';\n    const existing = acc.find(item => item.status === status);\n    if (existing) {\n      existing.count += 1;\n      existing.value += order.quantity * (order.unit_price || 0);\n    } else {\n      acc.push({\n        status: status.charAt(0).toUpperCase() + status.slice(1),\n        count: 1,\n        value: order.quantity * (order.unit_price || 0)\n      });\n    }\n    return acc;\n  }, [] as Array<{ status: string; count: number; value: number }>);\n\n  const COLORS = {\n    'Pending': '#f59e0b',\n    'Ordered': '#3b82f6',\n    'Delivered': '#22c55e',\n    'Cancelled': '#ef4444'\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <PieChart>\n        <Pie\n          data={statusData}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          label={({ status, count }) => `${status} (${count})`}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"count\"\n        >\n          {statusData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[entry.status as keyof typeof COLORS] || '#8b5cf6'} />\n          ))}\n        </Pie>\n        <Tooltip formatter={(value: any, name: any) => [value, 'Orders']} />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nconst OrderTrendsChart = () => {\n  const { data: ordersResponse } = useMaterialOrders({ page: 1, per_page: 100 });\n  const orders = ordersResponse?.items || [];\n\n  // Group orders by month for the last 6 months\n  const monthsData = Array.from({ length: 6 }, (_, i) => {\n    const date = new Date();\n    date.setMonth(date.getMonth() - i);\n    return {\n      month: date.toLocaleDateString('en-US', { month: 'short', year: '2-digit' }),\n      monthKey: `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`,\n      orders: 0,\n      value: 0\n    };\n  }).reverse();\n\n  orders.forEach(order => {\n    if (order.created_at) {\n      const orderDate = new Date(order.created_at);\n      const monthKey = `${orderDate.getFullYear()}-${String(orderDate.getMonth() + 1).padStart(2, '0')}`;\n      const monthData = monthsData.find(m => m.monthKey === monthKey);\n      if (monthData) {\n        monthData.orders += 1;\n        monthData.value += order.quantity * (order.unit_price || 0);\n      }\n    }\n  });\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <LineChart data={monthsData}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"month\" />\n        <YAxis />\n        <Tooltip\n          formatter={(value: any, name: any) => [\n            name === 'orders' ? value : `€${value.toLocaleString()}`,\n            name === 'orders' ? 'Orders' : 'Value'\n          ]}\n        />\n        <Line type=\"monotone\" dataKey=\"orders\" stroke=\"#3b82f6\" strokeWidth={2} name=\"orders\" />\n        <Line type=\"monotone\" dataKey=\"value\" stroke=\"#22c55e\" strokeWidth={2} name=\"value\" />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};"],"names":[],"mappings":"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","debugId":null}}]
}