{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,4KAAsB;QACrB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,iLAA2B;YAC1B,WAAW,IAAA,yHAAE,EAAC;sBAEd,cAAA,8OAAC,6MAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,4KAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,mNAAgB,CAIhC,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,6KAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,IAAA,yHAAE,EACX,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,6KAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-vehicles.ts"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { toast } from 'sonner';\n\nexport interface Vehicle {\n  id: string;\n  brand: string;\n  model: string;\n  plate_number: string;\n  type: 'van' | 'truck' | 'trailer' | 'excavator' | 'other' | 'car';\n  status: 'available' | 'in_use' | 'maintenance' | 'broken';\n  rental_cost_per_day: number;\n  fuel_type?: string;\n  year_manufactured?: number;\n  description?: string;\n  is_active: boolean;\n  full_name?: string;\n  age?: number;\n  current_assignment?: any;\n  assignments_count?: number;\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface VehicleAssignment {\n  id: string;\n  vehicle_id: string;\n  project_id?: string; // Now optional - crew-based logic\n  crew_id: string; // Now required - crew-based logic\n  from_ts: string;\n  to_ts?: string;\n  is_permanent: boolean;\n  rental_cost_per_day: number;\n  vehicle: {\n    brand: string;\n    model: string;\n    plate_number: string;\n    type: string;\n  };\n  project_name?: string;\n  crew_name?: string;\n  is_active: boolean;\n}\n\nexport interface CreateVehicleData {\n  brand: string;\n  model: string;\n  plate_number: string;\n  type: string;\n  status?: string;\n  rental_cost_per_day?: number;\n  fuel_type?: string;\n  year_manufactured?: number;\n  description?: string;\n}\n\nexport interface CreateVehicleAssignmentData {\n  vehicle_id: string;\n  project_id?: string; // Now optional - crew-based logic\n  crew_id: string; // Now required - crew-based logic\n  from_ts: string;\n  to_ts?: string;\n  is_permanent?: boolean;\n  rental_cost_per_day?: number;\n}\n\nexport interface VehicleAnalytics {\n  overview: {\n    totalHours: number;\n    efficiencyScore: number;\n    downtimeRate: number;\n    revenueGenerated: number;\n  };\n  statusDistribution: {\n    name: string;\n    value: number;\n    color: string;\n  }[];\n  utilization: {\n    name: string;\n    hours: number;\n    revenue: number;\n    assignments: number;\n  }[];\n  assignments: {\n    total: number;\n    active: number;\n    averageDailyCost: number;\n    totalDailyRevenue: number;\n    averageDuration: number;\n  };\n  vehicles: {\n    totalCount: number;\n    byType: Record<string, { count: number; value: number }>;\n    byStatus: Record<string, number>;\n  };\n}\n\ninterface VehicleFilters {\n  type?: string;\n  status?: string;\n  owned?: string;\n  search?: string;\n  page?: number;\n  per_page?: number;\n}\n\ninterface VehicleAssignmentFilters {\n  vehicle_id?: string;\n  project_id?: string;\n  crew_id?: string;\n  active_only?: boolean;\n}\n\nconst api = {\n  getVehicles: async (filters?: VehicleFilters): Promise<{ items: Vehicle[]; total: number; page: number; per_page: number; total_pages: number }> => {\n    const params = new URLSearchParams();\n    if (filters?.type) params.append('type', filters.type);\n    if (filters?.status) params.append('status', filters.status);\n    if (filters?.owned) params.append('owned', filters.owned);\n    if (filters?.search) params.append('search', filters.search);\n    if (filters?.page) params.append('page', filters.page.toString());\n    if (filters?.per_page) params.append('per_page', filters.per_page.toString());\n\n    const url = `/api/vehicles${params.toString() ? `?${params.toString()}` : ''}`;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch vehicles');\n    }\n\n    const data = await response.json();\n\n    // Transform the API response to match expected format\n    return {\n      items: data.vehicles || [],\n      total: data.pagination?.total || 0,\n      page: data.pagination?.page || 1,\n      per_page: data.pagination?.per_page || 20,\n      total_pages: data.pagination?.total_pages || 1\n    };\n  },\n\n  getVehicle: async (id: string): Promise<Vehicle> => {\n    const response = await fetch(`/api/vehicles/${id}`);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch vehicle');\n    }\n\n    return response.json();\n  },\n\n  createVehicle: async (data: CreateVehicleData): Promise<Vehicle> => {\n    const response = await fetch('/api/vehicles', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to create vehicle');\n    }\n\n    const result = await response.json();\n    return result.vehicle || result;\n  },\n\n  updateVehicle: async (id: string, data: Partial<Vehicle>): Promise<{ success: boolean }> => {\n    const response = await fetch(`/api/vehicles/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to update vehicle');\n    }\n\n    return response.json();\n  },\n\n  deleteVehicle: async (id: string): Promise<{ success: boolean }> => {\n    const response = await fetch(`/api/vehicles/${id}`, {\n      method: 'DELETE',\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to delete vehicle');\n    }\n\n    return response.json();\n  },\n\n  getVehicleAssignments: async (filters?: VehicleAssignmentFilters): Promise<VehicleAssignment[]> => {\n    const params = new URLSearchParams();\n    if (filters?.vehicle_id) params.append('vehicle_id', filters.vehicle_id);\n    if (filters?.project_id) params.append('project_id', filters.project_id);\n    if (filters?.crew_id) params.append('crew_id', filters.crew_id);\n    if (filters?.active_only) params.append('active_only', filters.active_only.toString());\n\n    // Use new vehicles/assignments endpoint for crew-based logic\n    const url = `/api/resources/vehicle-assignments${params.toString() ? `?${params.toString()}` : ''}`;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch vehicle assignments');\n    }\n\n    return response.json();\n  },\n\n  createVehicleAssignment: async (data: CreateVehicleAssignmentData): Promise<{ success: boolean; assignment_id: string; message: string }> => {\n    // Use new vehicles/assignments endpoint with crew-based logic\n    const response = await fetch('/api/resources/vehicle-assignments', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        vehicle_id: data.vehicle_id,\n        crew_id: data.crew_id, // Now required\n        project_id: data.project_id, // Now optional\n        from_ts: data.from_ts,\n        to_ts: data.to_ts,\n        is_permanent: data.is_permanent || false,\n        rental_cost_per_day: data.rental_cost_per_day\n      }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to create vehicle assignment');\n    }\n\n    return response.json();\n  },\n\n  updateVehicleAssignment: async (id: string, data: Partial<VehicleAssignment>): Promise<{ success: boolean; message: string }> => {\n    // Use new vehicles/assignments endpoint\n    const response = await fetch(`/api/resources/vehicle-assignments/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to update vehicle assignment');\n    }\n\n    return response.json();\n  },\n\n  deleteVehicleAssignment: async (id: string): Promise<{ success: boolean; message: string }> => {\n    // Use new vehicles/assignments endpoint\n    const response = await fetch(`/api/resources/vehicle-assignments/${id}`, {\n      method: 'DELETE',\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to delete vehicle assignment');\n    }\n\n    return response.json();\n  },\n\n  getAvailableVehicles: async (): Promise<Vehicle[]> => {\n    const response = await fetch('/api/resources/vehicles/available');\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch available vehicles');\n    }\n\n    return response.json();\n  },\n\n  getVehicleAnalytics: async (): Promise<VehicleAnalytics> => {\n    const response = await fetch('/api/vehicles/analytics');\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch vehicle analytics');\n    }\n\n    return response.json();\n  },\n};\n\nexport function useVehicles(filters?: VehicleFilters) {\n  return useQuery({\n    queryKey: ['vehicles', filters],\n    queryFn: () => api.getVehicles(filters),\n  });\n}\n\nexport function useVehicle(id: string) {\n  return useQuery({\n    queryKey: ['vehicles', id],\n    queryFn: () => api.getVehicle(id),\n    enabled: !!id,\n  });\n}\n\nexport function useCreateVehicle() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: api.createVehicle,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['vehicles'] });\n      toast.success('Vehicle created successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}\n\nexport function useUpdateVehicle() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<Vehicle> }) =>\n      api.updateVehicle(id, data),\n    onSuccess: (_, { id }) => {\n      queryClient.invalidateQueries({ queryKey: ['vehicles'] });\n      queryClient.invalidateQueries({ queryKey: ['vehicles', id] });\n      toast.success('Vehicle updated successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}\n\nexport function useDeleteVehicle() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: api.deleteVehicle,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['vehicles'] });\n      toast.success('Vehicle deleted successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}\n\nexport function useVehicleAssignments(filters?: VehicleAssignmentFilters) {\n  return useQuery({\n    queryKey: ['vehicle-assignments', filters],\n    queryFn: () => api.getVehicleAssignments(filters),\n    staleTime: 30 * 1000, // 30 seconds - crew assignments change frequently\n  });\n}\n\nexport function useCreateVehicleAssignment() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: api.createVehicleAssignment,\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({ queryKey: ['vehicle-assignments'] });\n      queryClient.invalidateQueries({ queryKey: ['vehicles'] });\n      queryClient.invalidateQueries({ queryKey: ['crews'] }); // Also invalidate crew queries\n      toast.success(data.message || 'Vehicle assignment created successfully');\n    },\n    onError: (error: Error) => {\n      // Enhanced error handling for crew validation\n      if (error.message.includes('Crew not found') || error.message.includes('CREW_NOT_FOUND')) {\n        toast.error('Selected crew is not found or inactive. Please select a valid crew.');\n      } else if (error.message.includes('crew_id') || error.message.includes('Crew ID')) {\n        toast.error('Crew selection is required. Please select a crew for this assignment.');\n      } else {\n        toast.error(error.message);\n      }\n    },\n  });\n}\n\nexport function useUpdateVehicleAssignment() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<VehicleAssignment> }) =>\n      api.updateVehicleAssignment(id, data),\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({ queryKey: ['vehicle-assignments'] });\n      queryClient.invalidateQueries({ queryKey: ['vehicles'] });\n      toast.success(data.message || 'Vehicle assignment updated successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}\n\nexport function useDeleteVehicleAssignment() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: api.deleteVehicleAssignment,\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({ queryKey: ['vehicle-assignments'] });\n      queryClient.invalidateQueries({ queryKey: ['vehicles'] });\n      toast.success(data.message || 'Vehicle assignment deleted successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}\n\nexport function useAvailableVehicles() {\n  return useQuery({\n    queryKey: ['vehicles', 'available'],\n    queryFn: () => api.getAvailableVehicles(),\n    staleTime: 30 * 1000, // 30 seconds\n  });\n}\n\nexport function useVehicleAnalytics() {\n  return useQuery({\n    queryKey: ['vehicle-analytics'],\n    queryFn: () => api.getVehicleAnalytics(),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\n// New hook for crew-based vehicle assignments (only vehicles)\nexport function useCrewVehicleAssignments(crew_id?: string) {\n  return useQuery({\n    queryKey: ['vehicle-assignments', 'crew', crew_id],\n    queryFn: async () => {\n      const response = await fetch(`/api/resources/vehicle-assignments?crew_id=${crew_id}&active_only=true`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch vehicle assignments');\n      }\n      return response.json();\n    },\n    enabled: !!crew_id,\n    staleTime: 30 * 1000, // 30 seconds - crew assignments change frequently\n  });\n}\n\n// Hook for getting vehicle assignments by project (filtered through crew assignments)\nexport function useProjectVehicleAssignments(project_id?: string) {\n  return useQuery({\n    queryKey: ['vehicle-assignments', 'project', project_id],\n    queryFn: () => api.getVehicleAssignments({ project_id }),\n    enabled: !!project_id,\n    staleTime: 60 * 1000, // 1 minute - project assignments are more stable\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/app/%28dashboard%29/dashboard/vehicles/new/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport * as z from \"zod\";\nimport { ArrowLeft, Car, Save, Loader2 } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Separator } from \"@/components/ui/separator\";\n\nimport { useCreateVehicle } from \"@/hooks/use-vehicles\";\n\nconst vehicleFormSchema = z.object({\n  brand: z.string().min(1, \"Brand is required\").max(100, \"Brand must be less than 100 characters\"),\n  model: z.string().min(1, \"Model is required\").max(100, \"Model must be less than 100 characters\"),\n  plate_number: z.string()\n    .min(1, \"Plate number is required\")\n    .max(20, \"Plate number must be less than 20 characters\")\n    .regex(/^[A-Z0-9\\-\\s]+$/i, \"Plate number can only contain letters, numbers, hyphens, and spaces\"),\n  type: z.enum([\"van\", \"truck\", \"trailer\", \"excavator\", \"other\"], {\n    required_error: \"Vehicle type is required\",\n  }),\n  status: z.enum([\"available\", \"in_use\", \"maintenance\", \"broken\"], {\n    required_error: \"Status is required\",\n  }),\n  owned: z.boolean().default(true),\n  rental_price_per_day_eur: z.number().min(0, \"Rental price per day must be 0 or greater\").default(0),\n  rental_price_per_hour_eur: z.number().min(0, \"Rental price per hour must be 0 or greater\").default(0),\n  fuel_consumption_l_100km: z.number().min(0, \"Fuel consumption must be 0 or greater\").default(0),\n  current_location: z.string().max(200, \"Location must be less than 200 characters\").default(\"Main Depot\"),\n  purchase_price_eur: z.number().min(0, \"Purchase price must be 0 or greater\").default(0),\n});\n\ntype VehicleFormValues = z.infer<typeof vehicleFormSchema>;\n\nconst vehicleTypes = [\n  { value: \"van\", label: \"Van\" },\n  { value: \"truck\", label: \"Truck\" },\n  { value: \"trailer\", label: \"Trailer\" },\n  { value: \"excavator\", label: \"Excavator\" },\n  { value: \"other\", label: \"Other\" },\n];\n\nconst vehicleStatuses = [\n  { value: \"available\", label: \"Available\" },\n  { value: \"in_use\", label: \"In Use\" },\n  { value: \"maintenance\", label: \"Maintenance\" },\n  { value: \"broken\", label: \"Broken\" },\n];\n\nexport default function NewVehiclePage() {\n  const router = useRouter();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const createVehicleMutation = useCreateVehicle();\n\n  const form = useForm<VehicleFormValues>({\n    resolver: zodResolver(vehicleFormSchema),\n    defaultValues: {\n      brand: \"\",\n      model: \"\",\n      plate_number: \"\",\n      type: \"van\",\n      status: \"available\",\n      owned: true,\n      rental_price_per_day_eur: 0,\n      rental_price_per_hour_eur: 0,\n      fuel_consumption_l_100km: 0,\n      current_location: \"Main Depot\",\n      purchase_price_eur: 0,\n      year_of_manufacture: undefined,\n      mileage_km: undefined,\n    },\n  });\n\n  const onSubmit = async (values: VehicleFormValues) => {\n    try {\n      setIsSubmitting(true);\n\n      // Transform the data to match API expectations\n      const vehicleData = {\n        ...values,\n        plate_number: values.plate_number.toUpperCase().trim(),\n      };\n\n      await createVehicleMutation.mutateAsync(vehicleData);\n\n      // Navigate back to equipment page on success\n      router.push(\"/dashboard/equipment\");\n    } catch (error) {\n      console.error(\"Failed to create vehicle:\", error);\n      // Error handling is done in the mutation hook via toast\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const owned = form.watch(\"owned\");\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => router.back()}\n            className=\"flex items-center space-x-2\"\n          >\n            <ArrowLeft className=\"h-4 w-4\" />\n            <span>Back</span>\n          </Button>\n          <div>\n            <h1 className=\"text-3xl font-bold tracking-tight\">Add New Vehicle</h1>\n            <p className=\"text-muted-foreground\">\n              Add a new vehicle to your fleet with all necessary details\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n          {/* Basic Information */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <Car className=\"h-5 w-5\" />\n                <span>Basic Information</span>\n              </CardTitle>\n              <CardDescription>\n                Enter the basic details about the vehicle\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"brand\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Brand *</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., Mercedes, Ford, Toyota\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"model\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Model *</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., Sprinter, Transit, Hilux\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"plate_number\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Plate Number *</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"e.g., ABC-123, XYZ 456\"\n                          {...field}\n                          onChange={(e) => field.onChange(e.target.value.toUpperCase())}\n                        />\n                      </FormControl>\n                      <FormDescription>\n                        License plate number (will be converted to uppercase)\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"type\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Vehicle Type *</FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select vehicle type\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          {vehicleTypes.map((type) => (\n                            <SelectItem key={type.value} value={type.value}>\n                              {type.label}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"status\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Status *</FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select status\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          {vehicleStatuses.map((status) => (\n                            <SelectItem key={status.value} value={status.value}>\n                              {status.label}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"current_location\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Current Location</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., Main Depot, Project Site A\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"year_of_manufacture\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Year of Manufacture</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          placeholder=\"e.g., 2020\"\n                          value={field.value || ''}\n                          onChange={(e) => field.onChange(e.target.value ? parseInt(e.target.value) : undefined)}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"mileage_km\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Mileage (km)</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          placeholder=\"e.g., 50000\"\n                          value={field.value || ''}\n                          onChange={(e) => field.onChange(e.target.value ? parseFloat(e.target.value) : undefined)}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"fuel_consumption_l_100km\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Fuel Consumption (L/100km)</FormLabel>\n                    <FormControl>\n                      <Input\n                        type=\"number\"\n                        step=\"0.1\"\n                        placeholder=\"e.g., 8.5\"\n                        {...field}\n                        onChange={(e) => field.onChange(e.target.value ? parseFloat(e.target.value) : 0)}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      Fuel consumption in liters per 100 kilometers\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </CardContent>\n          </Card>\n\n          {/* Financial Information */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Financial Information</CardTitle>\n              <CardDescription>\n                Ownership and pricing details for the vehicle\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <FormField\n                control={form.control}\n                name=\"owned\"\n                render={({ field }) => (\n                  <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                    <FormControl>\n                      <Checkbox\n                        checked={field.value}\n                        onCheckedChange={field.onChange}\n                      />\n                    </FormControl>\n                    <div className=\"space-y-1 leading-none\">\n                      <FormLabel>\n                        Company Owned Vehicle\n                      </FormLabel>\n                      <FormDescription>\n                        Check if this vehicle is owned by the company (uncheck for rental vehicles)\n                      </FormDescription>\n                    </div>\n                  </FormItem>\n                )}\n              />\n\n              <Separator />\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"purchase_price_eur\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Purchase Price (EUR)</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          step=\"0.01\"\n                          placeholder=\"0.00\"\n                          {...field}\n                          onChange={(e) => field.onChange(e.target.value ? parseFloat(e.target.value) : 0)}\n                        />\n                      </FormControl>\n                      <FormDescription>\n                        {owned ? \"Purchase price for owned vehicle\" : \"Not applicable for rental vehicles\"}\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"rental_price_per_day_eur\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Rental Price per Day (EUR)</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          step=\"0.01\"\n                          placeholder=\"0.00\"\n                          {...field}\n                          onChange={(e) => field.onChange(e.target.value ? parseFloat(e.target.value) : 0)}\n                        />\n                      </FormControl>\n                      <FormDescription>\n                        {owned ? \"Internal cost per day for project allocation\" : \"External rental cost per day\"}\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"rental_price_per_hour_eur\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Rental Price per Hour (EUR)</FormLabel>\n                    <FormControl>\n                      <Input\n                        type=\"number\"\n                        step=\"0.01\"\n                        placeholder=\"0.00\"\n                        {...field}\n                        onChange={(e) => field.onChange(e.target.value ? parseFloat(e.target.value) : 0)}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      {owned ? \"Internal hourly cost for project allocation\" : \"External rental cost per hour\"}\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </CardContent>\n          </Card>\n\n          {/* Submit Button */}\n          <div className=\"flex justify-end space-x-4\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => router.back()}\n              disabled={isSubmitting}\n            >\n              Cancel\n            </Button>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Creating Vehicle...\n                </>\n              ) : (\n                <>\n                  <Save className=\"mr-2 h-4 w-4\" />\n                  Create Vehicle\n                </>\n              )}\n            </Button>\n          </div>\n        </form>\n      </Form>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}