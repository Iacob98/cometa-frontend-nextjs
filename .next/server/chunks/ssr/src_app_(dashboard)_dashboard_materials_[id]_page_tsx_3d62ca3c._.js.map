{"version":3,"sources":["turbopack:///[project]/src/app/(dashboard)/dashboard/materials/[id]/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { useParams } from \"next/navigation\";\nimport {\n  ArrowLeft,\n  Edit,\n  Trash2,\n  Package,\n  AlertTriangle,\n  TrendingUp,\n  TrendingDown,\n  Clock,\n  MapPin,\n  DollarSign,\n  Plus,\n  Minus,\n  Save,\n  X,\n  History,\n  Truck,\n  Building2,\n} from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\n\nimport { useMaterial, useUpdateMaterial, useDeleteMaterial } from \"@/hooks/use-materials\";\nimport { toast } from \"sonner\";\n\nexport default function MaterialDetailPage() {\n  const params = useParams();\n  const router = useRouter();\n  const materialId = params.id as string;\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n  const [editForm, setEditForm] = useState({\n    name: \"\",\n    description: \"\",\n    unit: \"\",\n    sku: \"\",\n    default_price_eur: 0,\n    purchase_price_eur: 0,\n    min_stock_level: 0,\n  });\n\n  const { data: material, isLoading, error } = useMaterial(materialId);\n  const updateMaterial = useUpdateMaterial();\n  const deleteMaterial = useDeleteMaterial();\n\n  // Initialize form when material data loads\n  React.useEffect(() => {\n    if (material && !isEditing) {\n      setEditForm({\n        name: material.name || \"\",\n        description: material.description || \"\",\n        unit: material.unit || \"\",\n        sku: material.sku || \"\",\n        default_price_eur: material.default_price_eur || 0,\n        purchase_price_eur: material.purchase_price_eur || 0,\n        min_stock_level: material.min_stock_level || 0,\n      });\n    }\n  }, [material, isEditing]);\n\n  const handleEdit = () => {\n    if (material) {\n      setEditForm({\n        name: material.name || \"\",\n        description: material.description || \"\",\n        unit: material.unit || \"\",\n        sku: material.sku || \"\",\n        default_price_eur: material.default_price_eur || 0,\n        purchase_price_eur: material.purchase_price_eur || 0,\n        min_stock_level: material.min_stock_level || 0,\n      });\n      setIsEditing(true);\n    }\n  };\n\n  const handleSave = async () => {\n    try {\n      await updateMaterial.mutateAsync({\n        id: materialId,\n        data: editForm,\n      });\n      setIsEditing(false);\n      toast.success(\"Material updated successfully\");\n    } catch (error) {\n      toast.error(\"Failed to update material\");\n    }\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n    if (material) {\n      setEditForm({\n        name: material.name || \"\",\n        description: material.description || \"\",\n        unit: material.unit || \"\",\n        sku: material.sku || \"\",\n        default_price_eur: material.default_price_eur || 0,\n        purchase_price_eur: material.purchase_price_eur || 0,\n        min_stock_level: material.min_stock_level || 0,\n      });\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await deleteMaterial.mutateAsync(materialId);\n      toast.success(\"Material deleted successfully\");\n      router.push(\"/dashboard/materials\");\n    } catch (error) {\n      toast.error(\"Failed to delete material\");\n    }\n  };\n\n  const getStockStatus = () => {\n    if (!material) return { status: \"unknown\", color: \"gray\" };\n\n    const { available_qty, min_stock_level } = material;\n\n    if (available_qty <= 0) {\n      return { status: \"Out of Stock\", color: \"red\" };\n    } else if (available_qty <= min_stock_level) {\n      return { status: \"Low Stock\", color: \"yellow\" };\n    } else {\n      return { status: \"In Stock\", color: \"green\" };\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-4\"></div>\n          <div className=\"h-64 bg-gray-200 rounded mb-4\"></div>\n          <div className=\"h-32 bg-gray-200 rounded\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !material) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"text-center\">\n          <AlertTriangle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Material Not Found</h2>\n          <p className=\"text-gray-600 mb-4\">The material you're looking for doesn't exist.</p>\n          <Button onClick={() => router.push(\"/dashboard/materials\")}>\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back to Materials\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const stockStatus = getStockStatus();\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <Button\n            variant=\"ghost\"\n            onClick={() => router.push(\"/dashboard/materials\")}\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back\n          </Button>\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">\n              {isEditing ? (\n                <Input\n                  value={editForm.name}\n                  onChange={(e) =>\n                    setEditForm({ ...editForm, name: e.target.value })\n                  }\n                  className=\"text-2xl font-bold\"\n                />\n              ) : (\n                material.name\n              )}\n            </h1>\n            <p className=\"text-gray-600\">Material Details</p>\n          </div>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          {isEditing ? (\n            <>\n              <Button variant=\"outline\" onClick={handleCancel}>\n                <X className=\"h-4 w-4 mr-2\" />\n                Cancel\n              </Button>\n              <Button onClick={handleSave} disabled={updateMaterial.isPending}>\n                <Save className=\"h-4 w-4 mr-2\" />\n                Save Changes\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button variant=\"outline\" onClick={handleEdit}>\n                <Edit className=\"h-4 w-4 mr-2\" />\n                Edit\n              </Button>\n              <Button\n                variant=\"destructive\"\n                onClick={() => setShowDeleteDialog(true)}\n              >\n                <Trash2 className=\"h-4 w-4 mr-2\" />\n                Delete\n              </Button>\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Current Stock</CardTitle>\n            <Package className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {material.current_stock_qty} {material.unit}\n            </div>\n            <Badge\n              variant={stockStatus.color === \"green\" ? \"default\" : stockStatus.color === \"yellow\" ? \"secondary\" : \"destructive\"}\n            >\n              {stockStatus.status}\n            </Badge>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Available</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {material.available_qty} {material.unit}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              {material.reserved_qty} reserved\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Unit Price</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              €{material.default_price_eur.toFixed(2)}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Purchase: €{material.purchase_price_eur.toFixed(2)}\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Category</CardTitle>\n            <Building2 className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{material.category}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              SKU: {material.sku || \"N/A\"}\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content */}\n      <Tabs defaultValue=\"details\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"details\">Details</TabsTrigger>\n          <TabsTrigger value=\"history\">History</TabsTrigger>\n          <TabsTrigger value=\"allocations\">Allocations</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"details\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Material Information</CardTitle>\n              <CardDescription>\n                Basic information about this material\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"name\">Name</Label>\n                  {isEditing ? (\n                    <Input\n                      id=\"name\"\n                      value={editForm.name}\n                      onChange={(e) =>\n                        setEditForm({ ...editForm, name: e.target.value })\n                      }\n                    />\n                  ) : (\n                    <p className=\"text-sm text-gray-900\">{material.name}</p>\n                  )}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"sku\">SKU</Label>\n                  {isEditing ? (\n                    <Input\n                      id=\"sku\"\n                      value={editForm.sku}\n                      onChange={(e) =>\n                        setEditForm({ ...editForm, sku: e.target.value })\n                      }\n                    />\n                  ) : (\n                    <p className=\"text-sm text-gray-900\">{material.sku || \"N/A\"}</p>\n                  )}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"unit\">Unit</Label>\n                  {isEditing ? (\n                    <Select\n                      value={editForm.unit}\n                      onValueChange={(value) =>\n                        setEditForm({ ...editForm, unit: value })\n                      }\n                    >\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"piece\">Piece</SelectItem>\n                        <SelectItem value=\"meter\">Meter</SelectItem>\n                        <SelectItem value=\"kg\">Kilogram</SelectItem>\n                        <SelectItem value=\"liter\">Liter</SelectItem>\n                        <SelectItem value=\"box\">Box</SelectItem>\n                        <SelectItem value=\"roll\">Roll</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  ) : (\n                    <p className=\"text-sm text-gray-900\">{material.unit}</p>\n                  )}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"category\">Category</Label>\n                  <p className=\"text-sm text-gray-900\">{material.category}</p>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"default_price\">Default Price (EUR)</Label>\n                  {isEditing ? (\n                    <Input\n                      id=\"default_price\"\n                      type=\"number\"\n                      step=\"0.01\"\n                      value={editForm.default_price_eur}\n                      onChange={(e) =>\n                        setEditForm({\n                          ...editForm,\n                          default_price_eur: parseFloat(e.target.value) || 0,\n                        })\n                      }\n                    />\n                  ) : (\n                    <p className=\"text-sm text-gray-900\">\n                      €{material.default_price_eur.toFixed(2)}\n                    </p>\n                  )}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"purchase_price\">Purchase Price (EUR)</Label>\n                  {isEditing ? (\n                    <Input\n                      id=\"purchase_price\"\n                      type=\"number\"\n                      step=\"0.01\"\n                      value={editForm.purchase_price_eur}\n                      onChange={(e) =>\n                        setEditForm({\n                          ...editForm,\n                          purchase_price_eur: parseFloat(e.target.value) || 0,\n                        })\n                      }\n                    />\n                  ) : (\n                    <p className=\"text-sm text-gray-900\">\n                      €{material.purchase_price_eur.toFixed(2)}\n                    </p>\n                  )}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"min_stock\">Minimum Stock Level</Label>\n                  {isEditing ? (\n                    <Input\n                      id=\"min_stock\"\n                      type=\"number\"\n                      value={editForm.min_stock_level}\n                      onChange={(e) =>\n                        setEditForm({\n                          ...editForm,\n                          min_stock_level: parseInt(e.target.value) || 0,\n                        })\n                      }\n                    />\n                  ) : (\n                    <p className=\"text-sm text-gray-900\">\n                      {material.min_stock_level} {material.unit}\n                    </p>\n                  )}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"storage\">Storage Location</Label>\n                  <p className=\"text-sm text-gray-900\">\n                    {material.storage_location || \"Main Warehouse\"}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"description\">Description</Label>\n                {isEditing ? (\n                  <Textarea\n                    id=\"description\"\n                    value={editForm.description}\n                    onChange={(e) =>\n                      setEditForm({ ...editForm, description: e.target.value })\n                    }\n                    rows={3}\n                  />\n                ) : (\n                  <p className=\"text-sm text-gray-900\">\n                    {material.description || \"No description available\"}\n                  </p>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"history\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Stock Movement History</CardTitle>\n              <CardDescription>\n                Recent stock movements for this material\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-center py-8\">\n                <History className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                <p className=\"text-gray-600\">\n                  Stock movement history will be implemented with inventory tracking\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"allocations\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Current Allocations</CardTitle>\n              <CardDescription>\n                Materials currently allocated to projects\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-center py-8\">\n                <Truck className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                <p className=\"text-gray-600\">\n                  Material allocations will be loaded from the database\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Delete Confirmation Dialog */}\n      <AlertDialog open={showDeleteDialog} onOpenChange={setShowDeleteDialog}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Delete Material</AlertDialogTitle>\n            <AlertDialogDescription>\n              Are you sure you want to delete \"{material.name}\"? This action cannot be undone.\n              This will also remove all associated warehouse entries.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={handleDelete}\n              className=\"bg-red-600 hover:bg-red-700\"\n              disabled={deleteMaterial.isPending}\n            >\n              {deleteMaterial.isPending ? \"Deleting...\" : \"Delete\"}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}