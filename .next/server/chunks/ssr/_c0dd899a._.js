module.exports=[86456,a=>{"use strict";a.s(["useCreateProject",()=>j,"useDeleteProject",()=>l,"useProject",()=>i,"useProjectStats",()=>m,"useProjects",()=>h,"useUpdateProject",()=>k]);var b=a.i(33217),c=a.i(70025),d=a.i(37927),e=a.i(23292),f=a.i(91938);let g={all:["projects"],lists:()=>[...g.all,"list"],list:a=>[...g.lists(),a],details:()=>[...g.all,"detail"],detail:a=>[...g.details(),a]};function h(a){return(0,b.useQuery)({queryKey:g.list(a||{}),queryFn:()=>f.projectsApi.getProjects(a),staleTime:3e5})}function i(a){return(0,b.useQuery)({queryKey:g.detail(a),queryFn:()=>f.projectsApi.getProject(a),enabled:!!a,staleTime:3e5})}function j(){let a=(0,d.useQueryClient)();return(0,c.useMutation)({mutationFn:a=>f.projectsApi.createProject(a),onSuccess:b=>{a.invalidateQueries({queryKey:g.lists()}),a.setQueryData(g.detail(b.id),b),e.toast.success("Project created successfully")},onError:a=>{e.toast.error(`Failed to create project: ${a.message}`)}})}function k(){let a=(0,d.useQueryClient)();return(0,c.useMutation)({mutationFn:({id:a,data:b})=>f.projectsApi.updateProject(a,b),onMutate:async({id:b,data:c})=>{await a.cancelQueries({queryKey:g.detail(b)});let d=a.getQueryData(g.detail(b));return a.setQueryData(g.detail(b),a=>a?{...a,...c}:a),{previousProject:d}},onError:(b,{id:c},d)=>{d?.previousProject&&a.setQueryData(g.detail(c),d.previousProject),e.toast.error(`Failed to update project: ${b.message}`)},onSuccess:b=>{a.invalidateQueries({queryKey:g.lists()}),e.toast.success("Project updated successfully")},onSettled:(b,c,{id:d})=>{a.invalidateQueries({queryKey:g.detail(d)})}})}function l(){let a=(0,d.useQueryClient)();return(0,c.useMutation)({mutationFn:a=>f.projectsApi.deleteProject(a),onSuccess:(b,c)=>{a.removeQueries({queryKey:g.detail(c)}),a.invalidateQueries({queryKey:g.lists()}),e.toast.success("Project deleted successfully")},onError:a=>{e.toast.error(`Failed to delete project: ${a.message}`)}})}function m(a){return(0,b.useQuery)({queryKey:[...g.detail(a),"stats"],queryFn:async()=>{let b=await fetch(`/api/projects/${a}/stats`);if(!b.ok)throw Error("Failed to fetch project statistics");return b.json()},staleTime:12e4,enabled:!!a})}},15618,a=>{"use strict";a.s(["Plus",()=>b],15618);let b=(0,a.i(70106).default)("plus",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"M12 5v14",key:"s699le"}]])},6015,a=>{"use strict";a.s(["Table",()=>e,"TableBody",()=>g,"TableCell",()=>j,"TableHead",()=>i,"TableHeader",()=>f,"TableRow",()=>h]);var b=a.i(87924),c=a.i(72131),d=a.i(68114);let e=c.forwardRef(({className:a,...c},e)=>(0,b.jsx)("div",{className:"relative w-full overflow-auto",children:(0,b.jsx)("table",{ref:e,className:(0,d.cn)("w-full caption-bottom text-sm",a),...c})}));e.displayName="Table";let f=c.forwardRef(({className:a,...c},e)=>(0,b.jsx)("thead",{ref:e,className:(0,d.cn)("[&_tr]:border-b",a),...c}));f.displayName="TableHeader";let g=c.forwardRef(({className:a,...c},e)=>(0,b.jsx)("tbody",{ref:e,className:(0,d.cn)("[&_tr:last-child]:border-0",a),...c}));g.displayName="TableBody",c.forwardRef(({className:a,...c},e)=>(0,b.jsx)("tfoot",{ref:e,className:(0,d.cn)("border-t bg-muted/50 font-medium [&>tr]:last:border-b-0",a),...c})).displayName="TableFooter";let h=c.forwardRef(({className:a,...c},e)=>(0,b.jsx)("tr",{ref:e,className:(0,d.cn)("border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted",a),...c}));h.displayName="TableRow";let i=c.forwardRef(({className:a,...c},e)=>(0,b.jsx)("th",{ref:e,className:(0,d.cn)("h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0",a),...c}));i.displayName="TableHead";let j=c.forwardRef(({className:a,...c},e)=>(0,b.jsx)("td",{ref:e,className:(0,d.cn)("p-4 align-middle [&:has([role=checkbox])]:pr-0",a),...c}));j.displayName="TableCell",c.forwardRef(({className:a,...c},e)=>(0,b.jsx)("caption",{ref:e,className:(0,d.cn)("mt-4 text-sm text-muted-foreground",a),...c})).displayName="TableCaption"},81560,a=>{"use strict";a.s(["Trash2",()=>b],81560);let b=(0,a.i(70106).default)("trash-2",[["path",{d:"M10 11v6",key:"nco0om"}],["path",{d:"M14 11v6",key:"outv1u"}],["path",{d:"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6",key:"miytrc"}],["path",{d:"M3 6h18",key:"d0wm0j"}],["path",{d:"M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2",key:"e791ji"}]])},24569,a=>{"use strict";a.s(["Edit",()=>b],24569);let b=(0,a.i(70106).default)("square-pen",[["path",{d:"M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7",key:"1m0v6g"}],["path",{d:"M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z",key:"ohrbg2"}]])},77156,a=>{"use strict";a.s(["Eye",()=>b],77156);let b=(0,a.i(70106).default)("eye",[["path",{d:"M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0",key:"1nclc0"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]])},41710,a=>{"use strict";a.s(["Clock",()=>b],41710);let b=(0,a.i(70106).default)("clock",[["path",{d:"M12 6v6l4 2",key:"mmk7yg"}],["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}]])},24987,a=>{"use strict";a.s(["MapPin",()=>b],24987);let b=(0,a.i(70106).default)("map-pin",[["path",{d:"M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0",key:"1r0f0z"}],["circle",{cx:"12",cy:"10",r:"3",key:"ilqhr7"}]])},63519,a=>{"use strict";a.s(["Phone",()=>b],63519);let b=(0,a.i(70106).default)("phone",[["path",{d:"M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384",key:"9njp5v"}]])},44750,a=>{"use strict";a.s(["useCreateCrew",()=>j,"useCreateTeam",()=>o,"useCrew",()=>i,"useDeleteCrew",()=>l,"useForemenUsers",()=>n,"useGlobalTeams",()=>m,"useProjectTeams",()=>p,"useTeams",()=>h,"useUpdateCrew",()=>k,"useUpdateTeam",()=>q]);var b=a.i(33217),c=a.i(70025),d=a.i(37927),e=a.i(23292),f=a.i(91938);let g={all:["teams"],crews:()=>[...g.all,"crews"],crew:a=>[...g.all,"crew",a]};function h(){return(0,b.useQuery)({queryKey:g.crews(),queryFn:async()=>{let a=await fetch("/api/crews");if(!a.ok)throw Error("Failed to fetch crews");return(await a.json()).crews||[]},staleTime:3e4})}function i(a){return(0,b.useQuery)({queryKey:g.crew(a),queryFn:()=>f.teamsApi.getCrew(a),enabled:!!a,staleTime:3e5})}function j(){let a=(0,d.useQueryClient)();return(0,c.useMutation)({mutationFn:a=>f.teamsApi.createCrew(a),onSuccess:b=>{a.invalidateQueries({queryKey:g.crews()}),a.setQueryData(g.crew(b.id),b),e.toast.success("Team created successfully")},onError:a=>{e.toast.error(`Failed to create team: ${a.message}`)}})}function k(){let a=(0,d.useQueryClient)();return(0,c.useMutation)({mutationFn:({id:a,data:b})=>f.teamsApi.updateCrew(a,b),onMutate:async({id:b,data:c})=>{await a.cancelQueries({queryKey:g.crew(b)});let d=a.getQueryData(g.crew(b));return a.setQueryData(g.crew(b),a=>a?{...a,...c}:a),{previousCrew:d}},onError:(b,{id:c},d)=>{d?.previousCrew&&a.setQueryData(g.crew(c),d.previousCrew),e.toast.error(`Failed to update team: ${b.message}`)},onSuccess:()=>{a.invalidateQueries({queryKey:g.crews()}),e.toast.success("Team updated successfully")},onSettled:(b,c,{id:d})=>{a.invalidateQueries({queryKey:g.crew(d)})}})}function l(){let a=(0,d.useQueryClient)();return(0,c.useMutation)({mutationFn:a=>f.teamsApi.deleteCrew(a),onSuccess:(b,c)=>{a.removeQueries({queryKey:g.crew(c)}),a.invalidateQueries({queryKey:g.crews()}),e.toast.success("Team deleted successfully")},onError:a=>{e.toast.error(`Failed to delete team: ${a.message}`)}})}function m(){return(0,b.useQuery)({queryKey:["global-teams"],queryFn:async()=>{let a=await fetch("/api/crews");if(!a.ok)throw Error("Failed to fetch global teams");let b=(await a.json()).crews||[],c={};return b.forEach(a=>{a.project_id&&(c[a.name]=(c[a.name]||0)+1)}),b.map(a=>({id:a.id,name:a.name,foreman_name:a.foreman?.full_name||a.foreman_name,is_active:"active"===a.status,project_count:c[a.name]||0,specialization:"mixed"}))}})}function n(){return(0,b.useQuery)({queryKey:["foremen-users"],queryFn:async()=>{let a=await fetch("/api/users?role=foreman&is_active=true");if(!a.ok){let a=await fetch("/api/users?role=pm&is_active=true");if(!a.ok)throw Error("Failed to fetch users");return(await a.json()).items||[]}let b=await a.json();if(0===b.items.length){let a=await fetch("/api/users?is_active=true");if(!a.ok)throw Error("Failed to fetch users");return((await a.json()).items||[]).filter(a=>"foreman"===a.role||"pm"===a.role)}return b.items||[]}})}function o(){let a=(0,d.useQueryClient)();return(0,c.useMutation)({mutationFn:async a=>{let b=await fetch("/api/crews",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)});if(!b.ok)throw Error((await b.json()).error||"Failed to create team");return b.json()},onSuccess:(b,c)=>{c.project_id&&(a.invalidateQueries({queryKey:["project-teams",c.project_id]}),a.invalidateQueries({queryKey:["project-preparation",c.project_id]})),a.invalidateQueries({queryKey:["global-teams"]}),a.invalidateQueries({queryKey:g.crews()}),e.toast.success(b.message||"Team created successfully")},onError:a=>{e.toast.error(a.message)}})}function p(a){return(0,b.useQuery)({queryKey:["project-teams",a],queryFn:async()=>{let b=await fetch(`/api/crews?project_id=${a}`);if(!b.ok)throw Error("Failed to fetch project teams");return(await b.json()).crews||[]},enabled:!!a})}function q(){let a=(0,d.useQueryClient)();return(0,c.useMutation)({mutationFn:async({id:a,data:b})=>{let c=await fetch(`/api/crews/${a}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(b)});if(!c.ok)throw Error((await c.json()).error||"Failed to update team");return c.json()},onSuccess:(b,c)=>{a.invalidateQueries({queryKey:["project-teams"]}),a.invalidateQueries({queryKey:["global-teams"]}),a.invalidateQueries({queryKey:g.crews()}),a.invalidateQueries({queryKey:["project-preparation"]}),e.toast.success(b.message||"Team updated successfully")},onError:a=>{e.toast.error(a.message)}})}},51252,a=>{"use strict";a.s(["useCompletedConnections",()=>s,"useCreateHouse",()=>k,"useDeleteHouse",()=>m,"useHouses",()=>i,"useInProgressConnections",()=>r,"usePendingConnections",()=>p,"useProjectHouses",()=>j,"useScheduleAppointment",()=>o,"useScheduledAppointments",()=>q,"useTodaysAppointments",()=>t,"useUpdateHouse",()=>l]);var b=a.i(33217),c=a.i(70025),d=a.i(37927),e=a.i(23292),f=a.i(91938);let g={all:["houses"],lists:()=>[...g.all,"list"],list:a=>[...g.lists(),a],details:()=>[...g.all,"detail"],detail:a=>[...g.details(),a],project:a=>[...g.all,"project",a],team:a=>[...g.all,"team",a]},h={all:["appointments"],lists:()=>[...h.all,"list"],list:a=>[...h.lists(),a],details:()=>[...h.all,"detail"],detail:a=>[...h.details(),a]};function i(a){return(0,b.useQuery)({queryKey:g.list(a||{}),queryFn:()=>f.housesApi.getHouses(a),staleTime:18e4})}function j(a){return(0,b.useQuery)({queryKey:g.project(a),queryFn:()=>f.housesApi.getProjectHouses(a),enabled:!!a,staleTime:18e4})}function k(){let a=(0,d.useQueryClient)();return(0,c.useMutation)({mutationFn:a=>f.housesApi.createHouse(a),onSuccess:b=>{a.invalidateQueries({queryKey:g.lists()}),a.invalidateQueries({queryKey:g.project(b.project_id)}),a.setQueryData(g.detail(b.id),b),e.toast.success("House created successfully")},onError:a=>{e.toast.error(`Failed to create house: ${a.message}`)}})}function l(){let a=(0,d.useQueryClient)();return(0,c.useMutation)({mutationFn:({id:a,data:b})=>f.housesApi.updateHouse(a,b),onMutate:async({id:b,data:c})=>{await a.cancelQueries({queryKey:g.detail(b)});let d=a.getQueryData(g.detail(b));return a.setQueryData(g.detail(b),a=>a?{...a,...c}:a),{previousHouse:d}},onError:(b,{id:c},d)=>{d?.previousHouse&&a.setQueryData(g.detail(c),d.previousHouse),e.toast.error(`Failed to update house: ${b.message}`)},onSuccess:b=>{a.invalidateQueries({queryKey:g.lists()}),a.invalidateQueries({queryKey:g.project(b.project_id)}),b.assigned_team_id&&a.invalidateQueries({queryKey:g.team(b.assigned_team_id)}),e.toast.success("House updated successfully")},onSettled:(b,c,{id:d})=>{a.invalidateQueries({queryKey:g.detail(d)})}})}function m(){let a=(0,d.useQueryClient)();return(0,c.useMutation)({mutationFn:a=>f.housesApi.deleteHouse(a),onSuccess:(b,c)=>{a.removeQueries({queryKey:g.detail(c)}),a.invalidateQueries({queryKey:g.lists()}),a.invalidateQueries({queryKey:g.all}),e.toast.success("House deleted successfully")},onError:a=>{e.toast.error(`Failed to delete house: ${a.message}`)}})}function n(a){return(0,b.useQuery)({queryKey:h.list(a||{}),queryFn:()=>f.appointmentsApi.getAppointments(a),staleTime:12e4})}function o(){let a=(0,d.useQueryClient)();return(0,c.useMutation)({mutationFn:a=>f.housesApi.scheduleAppointment(a),onSuccess:b=>{a.invalidateQueries({queryKey:h.lists()}),a.invalidateQueries({queryKey:g.detail(b.house_id)}),a.setQueryData(h.detail(b.id),b),e.toast.success("Appointment scheduled successfully")},onError:a=>{e.toast.error(`Failed to schedule appointment: ${a.message}`)}})}function p(){return i({status:"not_assigned",page:1,per_page:50})}function q(){return n({status:"scheduled",page:1,per_page:20})}function r(){return i({status:"in_progress",page:1,per_page:20})}function s(){return i({status:"connected",page:1,per_page:20})}function t(){let a=new Date().toISOString().split("T")[0];return n({scheduled_date_from:a,scheduled_date_to:a,page:1,per_page:50})}}];

//# sourceMappingURL=_c0dd899a._.js.map