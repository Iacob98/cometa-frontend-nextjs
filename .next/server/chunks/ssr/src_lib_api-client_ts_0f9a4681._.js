module.exports=[91938,a=>{"use strict";a.s(["appointmentsApi",()=>o,"authApi",()=>e,"clearAuthTokenForAllClients",()=>G,"geoAnalysisApi",()=>E,"geoAnnotationsApi",()=>C,"geoLayersApi",()=>A,"geoMeasurementsApi",()=>B,"geoRoutesApi",()=>z,"geospatialApi",()=>y,"housesApi",()=>n,"mapTilesApi",()=>D,"materialAllocationsApi",()=>l,"materialOrdersApi",()=>m,"materialsApi",()=>j,"notificationPreferencesApi",()=>q,"notificationTemplatesApi",()=>r,"notificationsApi",()=>p,"projectsApi",()=>f,"setAuthTokenForAllClients",()=>F,"suppliersApi",()=>k,"teamsApi",()=>i,"usersApi",()=>h,"wsApi",()=>s]);let b=process.env.NEXT_PUBLIC_API_URL||"http://localhost:3000";class c extends Error{status;response;constructor(a,b,c){super(b),this.status=a,this.response=c,this.name="ApiError"}}class d{baseURL;authToken;constructor(a){this.baseURL=a}setAuthToken(a){this.authToken=a}clearAuthToken(){this.authToken=void 0}getHeaders(){let a={"Content-Type":"application/json"};return this.authToken&&(a.Authorization=`Bearer ${this.authToken}`),a}async request(a,b={}){let d=`${this.baseURL}${a}`,e={...b,headers:{...this.getHeaders(),...b.headers}};try{let a=await fetch(d,e),b=a.headers.get("content-type");if(!b?.includes("application/json")){if(!a.ok)throw new c(a.status,`HTTP ${a.status}: ${a.statusText}`);return a.text()}let f=await a.json();if(!a.ok)throw new c(a.status,f.message||f.detail||`HTTP ${a.status}`,f);return f}catch(a){if(a instanceof c)throw a;throw new c(0,a instanceof Error?a.message:"Network error")}}async get(a,b){let c=new URL(`${this.baseURL}${a}`);return b&&Object.entries(b).forEach(([a,b])=>{null!=b&&c.searchParams.append(a,String(b))}),this.request(c.toString().replace(this.baseURL,""))}async post(a,b){return this.request(a,{method:"POST",body:b?JSON.stringify(b):void 0})}async put(a,b){return this.request(a,{method:"PUT",body:b?JSON.stringify(b):void 0})}async patch(a,b){return this.request(a,{method:"PATCH",body:b?JSON.stringify(b):void 0})}async delete(a){return this.request(a,{method:"DELETE"})}}let e=new class extends d{constructor(){super(`${b}/api/auth`)}async login(a){return this.post("/login",a)}async refreshToken(a){return this.post("/refresh",{refresh_token:a})}async logout(){return this.post("/logout")}async me(){return this.get("/me")}},f=new class extends d{constructor(){super(`${b}/api/projects`)}async getProjects(a){return this.get("/",a)}async getProject(a){return this.get(`/${a}`)}async createProject(a){return this.post("/",a)}async updateProject(a,b){return this.patch(`/${a}`,b)}async deleteProject(a){return this.delete(`/${a}`)}},g=new class extends d{constructor(){super(`${b}/api/work-entries`)}async getWorkEntries(a){return this.get("/",a)}async getWorkEntry(a){return this.get(`/${a}`)}async createWorkEntry(a){return this.post("/",a)}async updateWorkEntry(a,b){return this.patch(`/${a}`,b)}async deleteWorkEntry(a){return this.delete(`/${a}`)}async approveWorkEntry(a){return this.post(`/${a}/approve`)}},h=new class extends d{constructor(){super(`${b}/api/users`)}async getUsers(a){return this.get("/",a)}async getUser(a){return this.get(`/${a}`)}async createUser(a){return this.post("/",a)}async updateUser(a,b){return this.patch(`/${a}`,b)}async deleteUser(a){return this.delete(`/${a}`)}},i=new class extends d{constructor(){super(`${b}/api/teams`)}async getCrews(){return this.get("/crews")}async getCrew(a){return this.get(`/crews/${a}`)}async createCrew(a){return this.post("/crews",a)}async updateCrew(a,b){return this.patch(`/crews/${a}`,b)}async deleteCrew(a){return this.delete(`/crews/${a}`)}},j=new class extends d{constructor(){super(`${b}/api/materials`)}async getMaterials(a){return this.get("/",a)}async getMaterial(a){return this.get(`/${a}`)}async createMaterial(a){return this.post("/",a)}async updateMaterial(a,b){return this.patch(`/${a}`,b)}async deleteMaterial(a){return this.delete(`/${a}`)}async getLowStockMaterials(){return this.get("/low-stock")}async adjustStock(a,b){return this.post(`/${a}/adjust-stock`,b)}},k=new class extends d{constructor(){super(`${b}/api/suppliers`)}async getSuppliers(){return this.get("/")}async getSupplier(a){return this.get(`/${a}`)}async createSupplier(a){return this.post("/",a)}async updateSupplier(a,b){return this.patch(`/${a}`,b)}async deleteSupplier(a){return this.delete(`/${a}`)}},l=new class extends d{constructor(){super(`${b}/api/material-allocations`)}async getAllocations(a){return this.get("/",a)}async getAllocation(a){return this.get(`/${a}`)}async createAllocation(a){return this.post("/",a)}async updateAllocation(a,b){return this.patch(`/${a}`,b)}async deleteAllocation(a){return this.delete(`/${a}`)}async recordUsage(a,b){return this.post(`/${a}/usage`,b)}},m=new class extends d{constructor(){super(`${b}/api/material-orders`)}async getOrders(a){return this.get("/",a)}async getOrder(a){return this.get(`/${a}`)}async createOrder(a){return this.post("/",a)}async updateOrder(a,b){return this.patch(`/${a}`,b)}async deleteOrder(a){return this.delete(`/${a}`)}async updateOrderStatus(a,b){return this.patch(`/${a}/status`,{status:b})}async addOrderItem(a,b){return this.post(`/${a}/items`,b)}async removeOrderItem(a,b){return this.delete(`/${a}/items/${b}`)}},n=new class extends d{constructor(){super(`${b}/api/houses`)}async getHouses(a){return this.get("/",a)}async getHouse(a){return this.get(`/${a}`)}async createHouse(a){return this.post("/",a)}async updateHouse(a,b){return this.patch(`/${a}`,b)}async deleteHouse(a){return this.delete(`/${a}`)}async scheduleAppointment(a){return this.post("/appointments",a)}async startConnection(a){let b=new FormData;return b.append("house_id",a.house_id),b.append("worker_id",a.worker_id),b.append("before_photo",a.before_photo),b.append("gps_location",JSON.stringify(a.gps_location)),a.notes&&b.append("notes",a.notes),this.request("/start-connection",{method:"POST",body:b,headers:{...this.getHeaders()}})}async completeConnection(a){let b=new FormData;return b.append("house_id",a.house_id),b.append("connection_type",a.connection_type),a.after_photos.forEach((a,c)=>{b.append("after_photos",a)}),b.append("measurements",JSON.stringify(a.measurements)),b.append("quality_checks",JSON.stringify(a.quality_checks)),a.customer_signature&&b.append("customer_signature",a.customer_signature),a.notes&&b.append("notes",a.notes),this.request("/complete-connection",{method:"POST",body:b,headers:{...this.getHeaders()}})}async getProjectHouses(a){let b=await fetch(`/api/housing-units?project_id=${a}`);if(!b.ok)throw Error("Failed to fetch project houses");return(await b.json()).items||[]}async getTeamHouses(a){return this.get(`/team/${a}`)}},o=new class extends d{constructor(){super(`${b}/api/appointments`)}async getAppointments(a){return this.get("/",a)}async getAppointment(a){return this.get(`/${a}`)}async updateAppointment(a,b){return this.patch(`/${a}`,b)}async cancelAppointment(a,b){return this.patch(`/${a}/cancel`,{reason:b})}async rescheduleAppointment(a,b){return this.patch(`/${a}/reschedule`,{scheduled_date:b})}async confirmAppointment(a){return this.patch(`/${a}/confirm`)}async startAppointment(a){return this.patch(`/${a}/start`)}async completeAppointment(a,b){return this.patch(`/${a}/complete`,{notes:b})}},p=new class extends d{constructor(){super(`${b}/api/notifications`)}async getNotifications(a){return this.get("/",a)}async getNotification(a){return this.get(`/${a}`)}async createNotification(a){return this.post("/",a)}async markAsRead(a){return this.patch(`/${a}/read`)}async markAllAsRead(a){return this.patch(`/user/${a}/read-all`)}async deleteNotification(a){return this.delete(`/${a}`)}async getUnreadCount(a){return this.get(`/user/${a}/unread-count`)}},q=new class extends d{constructor(){super(`${b}/api/notification-preferences`)}async getPreferences(a){return this.get(`/user/${a}`)}async updatePreferences(a,b){return this.patch(`/user/${a}`,b)}},r=new class extends d{constructor(){super(`${b}/api/notification-templates`)}async getTemplates(){return this.get("/")}async getTemplate(a){return this.get(`/${a}`)}async updateTemplate(a,b){return this.patch(`/${a}`,b)}},s=new class{authToken;ws;reconnectAttempts;maxReconnectAttempts;reconnectInterval;messageHandlers;constructor(a){this.authToken=a,this.reconnectAttempts=0,this.maxReconnectAttempts=5,this.reconnectInterval=3e3,this.messageHandlers=new Map}connect(a){return new Promise((b,c)=>{let d=`${process.env.NEXT_PUBLIC_WS_URL||"ws://localhost:8080"}/ws/${a}`;this.ws=new WebSocket(d),this.ws.onopen=()=>{console.log("WebSocket connected"),this.reconnectAttempts=0,this.authToken&&this.send("auth",{token:this.authToken}),b()},this.ws.onmessage=a=>{try{let b=JSON.parse(a.data);this.handleMessage(b)}catch(a){console.error("Failed to parse WebSocket message:",a)}},this.ws.onclose=()=>{console.log("WebSocket disconnected"),this.reconnect(a)},this.ws.onerror=a=>{console.error("WebSocket error:",a),c(a)}})}reconnect(a){this.reconnectAttempts<this.maxReconnectAttempts&&(this.reconnectAttempts++,console.log(`Attempting to reconnect... (${this.reconnectAttempts}/${this.maxReconnectAttempts})`),setTimeout(()=>{this.connect(a).catch(console.error)},this.reconnectInterval))}handleMessage(a){(this.messageHandlers.get(a.type)||[]).forEach(b=>b(a.data))}send(a,b){if(this.ws&&this.ws.readyState===WebSocket.OPEN){let c={type:a,data:b,timestamp:new Date().toISOString()};this.ws.send(JSON.stringify(c))}}subscribe(a,b){this.messageHandlers.has(a)||this.messageHandlers.set(a,[]),this.messageHandlers.get(a).push(b)}unsubscribe(a,b){let c=this.messageHandlers.get(a);if(c){let a=c.indexOf(b);a>-1&&c.splice(a,1)}}disconnect(){this.ws&&(this.ws.close(),this.ws=void 0),this.messageHandlers.clear()}setAuthToken(a){this.authToken=a}},t=new class extends d{constructor(){super(`${b}/api/documents`)}async getDocuments(a){return this.get("/",a)}async getDocument(a){return this.get(`/${a}`)}async uploadDocument(a){let b=new FormData;return b.append("file",a.file),a.category&&b.append("category",a.category),a.tags&&b.append("tags",JSON.stringify(a.tags)),a.project_id&&b.append("project_id",a.project_id),a.house_id&&b.append("house_id",a.house_id),a.work_entry_id&&b.append("work_entry_id",a.work_entry_id),a.team_id&&b.append("team_id",a.team_id),a.access_level&&b.append("access_level",a.access_level),a.description&&b.append("description",a.description),a.custom_fields&&b.append("custom_fields",JSON.stringify(a.custom_fields)),this.request("/upload",{method:"POST",body:b,headers:{Authorization:this.getHeaders().Authorization}})}async updateDocument(a,b){return this.patch(`/${a}`,b)}async deleteDocument(a){return this.delete(`/${a}`)}async downloadDocument(a){let b=await fetch(`${this.baseURL}/${a}/download`,{headers:this.getHeaders()});if(!b.ok)throw new c(b.status,`Download failed: ${b.statusText}`);return b.blob()}async getDocumentVersions(a){return this.get(`/${a}/versions`)}async createNewVersion(a,b,c){let d=new FormData;return d.append("file",b),c&&d.append("comment",c),this.request(`/${a}/versions`,{method:"POST",body:d,headers:{Authorization:this.getHeaders().Authorization}})}async revertToVersion(a,b){return this.post(`/${a}/versions/${b}/revert`)}async searchDocuments(a){return this.post("/search",a)}async classifyDocument(a){return this.post("/classify",a)}async getOCRResult(a){return this.get(`/${a}/ocr`)}async triggerOCR(a){return this.post(`/${a}/ocr`)}},u=new class extends d{constructor(){super(`${b}/api/document-categories`)}async getCategories(){return this.get("/")}async getCategory(a){return this.get(`/${a}`)}async createCategory(a){return this.post("/",a)}async updateCategory(a,b){return this.patch(`/${a}`,b)}async deleteCategory(a){return this.delete(`/${a}`)}},v=new class extends d{constructor(){super(`${b}/api/document-access`)}async getDocumentAccess(a){return this.get(`/document/${a}`)}async grantAccess(a){return this.post("/grant",a)}async revokeAccess(a){return this.delete(`/${a}`)}async updateAccess(a,b){return this.patch(`/${a}`,b)}},w=new class extends d{constructor(){super(`${b}/api/document-shares`)}async createShare(a){return this.post("/",a)}async getShare(a){return this.get(`/token/${a}`)}async getDocumentShares(a){return this.get(`/document/${a}`)}async updateShare(a,b){return this.patch(`/${a}`,b)}async deleteShare(a){return this.delete(`/${a}`)}async accessSharedDocument(a,b){return this.post(`/access/${a}`,{password:b})}},x=new class extends d{constructor(){super(`${b}/api/document-templates`)}async getTemplates(){return this.get("/")}async getTemplate(a){return this.get(`/${a}`)}async createTemplate(a){return this.post("/",a)}async updateTemplate(a,b){return this.patch(`/${a}`,b)}async deleteTemplate(a){return this.delete(`/${a}`)}async createDocumentFromTemplate(a,b){return this.post(`/${a}/create-document`,b)}},y=new class extends d{constructor(){super(`${b}/api/geospatial`)}async getFeatures(a){return this.get("/features",a)}async getFeature(a){return this.get(`/features/${a}`)}async createFeature(a){return this.post("/features",a)}async updateFeature(a,b){return this.patch(`/features/${a}`,b)}async deleteFeature(a){return this.delete(`/features/${a}`)}async searchNearby(a){return this.post("/features/search/nearby",a)}async getProjectBounds(a){return this.get(`/projects/${a}/bounds`)}async calculateSegmentLength(a){return this.get(`/segments/${a}/length`)}async getProjectFeatures(a){return this.get(`/projects/${a}/features`)}},z=new class extends d{constructor(){super(`${b}/api/geo-routes`)}async getRoutes(a){return this.get("/",a?{project_id:a}:void 0)}async getRoute(a){return this.get(`/${a}`)}async createRoute(a){return this.post("/",a)}async updateRoute(a,b){return this.patch(`/${a}`,b)}async deleteRoute(a){return this.delete(`/${a}`)}async optimizeRoute(a,b){return this.post(`/${a}/optimize`,b||{})}async calculateRoute(a,b){return this.post("/calculate",{waypoints:a,route_type:b})}},A=new class extends d{constructor(){super(`${b}/api/geo-layers`)}async getLayers(a){return this.get("/",a?{project_id:a}:void 0)}async getLayer(a){return this.get(`/${a}`)}async createLayer(a){return this.post("/",a)}async updateLayer(a,b){return this.patch(`/${a}`,b)}async deleteLayer(a){return this.delete(`/${a}`)}async toggleLayerVisibility(a,b){return this.patch(`/${a}/visibility`,{is_visible:b})}async updateLayerOpacity(a,b){return this.patch(`/${a}/opacity`,{opacity:b})}async reorderLayers(a){return this.post("/reorder",{layer_ids:a})}},B=new class extends d{constructor(){super(`${b}/api/geo-measurements`)}async getMeasurements(a){return this.get("/",a?{project_id:a}:void 0)}async getMeasurement(a){return this.get(`/${a}`)}async createMeasurement(a){return this.post("/",a)}async updateMeasurement(a,b){return this.patch(`/${a}`,b)}async deleteMeasurement(a){return this.delete(`/${a}`)}async calculateDistance(a){return this.post("/calculate/distance",{coordinates:a})}async calculateArea(a){return this.post("/calculate/area",{coordinates:a})}},C=new class extends d{constructor(){super(`${b}/api/geo-annotations`)}async getAnnotations(a){return this.get("/",a?{project_id:a}:void 0)}async getAnnotation(a){return this.get(`/${a}`)}async createAnnotation(a){return this.post("/",a)}async updateAnnotation(a,b){return this.patch(`/${a}`,b)}async deleteAnnotation(a){return this.delete(`/${a}`)}},D=new class extends d{constructor(){super(`${b}/api/map-tiles`)}async getTiles(){return this.get("/")}async getTile(a){return this.get(`/${a}`)}async createTile(a){return this.post("/",a)}async updateTile(a,b){return this.patch(`/${a}`,b)}async deleteTile(a){return this.delete(`/${a}`)}async setActiveTile(a){return this.post(`/${a}/activate`)}},E=new class extends d{constructor(){super(`${b}/api/geo-analysis`)}async getAnalyses(a){return this.get("/",a?{project_id:a}:void 0)}async getAnalysis(a){return this.get(`/${a}`)}async createAnalysis(a){return this.post("/",a)}async deleteAnalysis(a){return this.delete(`/${a}`)}async getAnalysisResult(a){return this.get(`/${a}/result`)}async runBufferAnalysis(a,b,c){return this.post("/buffer",{input_features:a,parameters:{buffer_distance:b,unit:c}})}async runIntersectionAnalysis(a){return this.post("/intersection",{input_features:a,parameters:{}})}async runRouteOptimization(a,b){return this.post("/route-optimization",{input_features:a,parameters:b})}};function F(a){e.setAuthToken(a),f.setAuthToken(a),g.setAuthToken(a),h.setAuthToken(a),i.setAuthToken(a),j.setAuthToken(a),k.setAuthToken(a),l.setAuthToken(a),m.setAuthToken(a),n.setAuthToken(a),o.setAuthToken(a),p.setAuthToken(a),q.setAuthToken(a),r.setAuthToken(a),s.setAuthToken(a),t.setAuthToken(a),u.setAuthToken(a),v.setAuthToken(a),w.setAuthToken(a),x.setAuthToken(a),y.setAuthToken(a),z.setAuthToken(a),A.setAuthToken(a),B.setAuthToken(a),C.setAuthToken(a),D.setAuthToken(a),E.setAuthToken(a)}function G(){e.clearAuthToken(),f.clearAuthToken(),g.clearAuthToken(),h.clearAuthToken(),i.clearAuthToken(),j.clearAuthToken(),k.clearAuthToken(),l.clearAuthToken(),m.clearAuthToken(),n.clearAuthToken(),o.clearAuthToken(),p.clearAuthToken(),q.clearAuthToken(),r.clearAuthToken(),t.clearAuthToken(),u.clearAuthToken(),v.clearAuthToken(),w.clearAuthToken(),x.clearAuthToken(),y.clearAuthToken(),z.clearAuthToken(),A.clearAuthToken(),B.clearAuthToken(),C.clearAuthToken(),D.clearAuthToken(),E.clearAuthToken()}}];

//# sourceMappingURL=src_lib_api-client_ts_0f9a4681._.js.map