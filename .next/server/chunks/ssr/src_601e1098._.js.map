{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,4KAAsB;QACrB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,iLAA2B;YAC1B,WAAW,IAAA,yHAAE,EAAC;sBAEd,cAAA,8OAAC,6MAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,4KAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,mNAAgB,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-material-order-budget.ts"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { toast } from 'sonner';\nimport type {\n  MaterialOrderBudgetImpact,\n  CreateBudgetTransactionRequest,\n  BudgetTransactionResponse\n} from '@/types';\n\n// Get budget impact for a material order\nexport function useMaterialOrderBudgetImpact(orderId: string) {\n  return useQuery({\n    queryKey: ['material-order-budget', orderId],\n    queryFn: async (): Promise<MaterialOrderBudgetImpact> => {\n      const response = await fetch(`/api/materials/orders/${orderId}/budget`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch budget impact');\n      }\n      return response.json();\n    },\n    enabled: !!orderId,\n  });\n}\n\n// Create budget transaction for material order\nexport function useCreateBudgetTransaction() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async ({\n      orderId,\n      data\n    }: {\n      orderId: string;\n      data: CreateBudgetTransactionRequest\n    }): Promise<BudgetTransactionResponse> => {\n      const response = await fetch(`/api/materials/orders/${orderId}/budget`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to create budget transaction');\n      }\n\n      return response.json();\n    },\n    onSuccess: (data, variables) => {\n      // Invalidate related queries\n      queryClient.invalidateQueries({\n        queryKey: ['material-order-budget', variables.orderId]\n      });\n      queryClient.invalidateQueries({\n        queryKey: ['material-orders']\n      });\n      queryClient.invalidateQueries({\n        queryKey: ['financial-summary']\n      });\n      queryClient.invalidateQueries({\n        queryKey: ['project', data.project_id]\n      });\n\n      toast.success(`Budget transaction created: €${data.amount_deducted.toFixed(2)} deducted`);\n    },\n    onError: (error: Error) => {\n      toast.error(error.message || 'Failed to create budget transaction');\n    },\n  });\n}\n\n// Hook to automatically deduct budget on order creation\nexport function useAutoBudgetDeduction() {\n  const createBudgetTransaction = useCreateBudgetTransaction();\n\n  const deductFromBudget = async (orderId: string, deduct: boolean = true) => {\n    if (!deduct) return null;\n\n    try {\n      return await createBudgetTransaction.mutateAsync({\n        orderId,\n        data: { deduct_from_budget: true }\n      });\n    } catch (error) {\n      console.error('Auto budget deduction failed:', error);\n      return null;\n    }\n  };\n\n  return {\n    deductFromBudget,\n    isLoading: createBudgetTransaction.isPending,\n    error: createBudgetTransaction.error,\n  };\n}"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AAAA;AACA;;;AAQO,SAAS,6BAA6B,OAAe;IAC1D,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU;YAAC;YAAyB;SAAQ;QAC5C,SAAS;YACP,MAAM,WAAW,MAAM,MAAM,CAAC,sBAAsB,EAAE,QAAQ,OAAO,CAAC;YACtE,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YACA,OAAO,SAAS,IAAI;QACtB;QACA,SAAS,CAAC,CAAC;IACb;AACF;AAGO,SAAS;IACd,MAAM,cAAc,IAAA,wMAAc;IAElC,OAAO,IAAA,6LAAW,EAAC;QACjB,YAAY,OAAO,EACjB,OAAO,EACP,IAAI,EAIL;YACC,MAAM,WAAW,MAAM,MAAM,CAAC,sBAAsB,EAAE,QAAQ,OAAO,CAAC,EAAE;gBACtE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,MAAM,IAAI,MAAM,MAAM,KAAK,IAAI;YACjC;YAEA,OAAO,SAAS,IAAI;QACtB;QACA,WAAW,CAAC,MAAM;YAChB,6BAA6B;YAC7B,YAAY,iBAAiB,CAAC;gBAC5B,UAAU;oBAAC;oBAAyB,UAAU,OAAO;iBAAC;YACxD;YACA,YAAY,iBAAiB,CAAC;gBAC5B,UAAU;oBAAC;iBAAkB;YAC/B;YACA,YAAY,iBAAiB,CAAC;gBAC5B,UAAU;oBAAC;iBAAoB;YACjC;YACA,YAAY,iBAAiB,CAAC;gBAC5B,UAAU;oBAAC;oBAAW,KAAK,UAAU;iBAAC;YACxC;YAEA,iJAAK,CAAC,OAAO,CAAC,CAAC,6BAA6B,EAAE,KAAK,eAAe,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;QAC1F;QACA,SAAS,CAAC;YACR,iJAAK,CAAC,KAAK,CAAC,MAAM,OAAO,IAAI;QAC/B;IACF;AACF;AAGO,SAAS;IACd,MAAM,0BAA0B;IAEhC,MAAM,mBAAmB,OAAO,SAAiB,SAAkB,IAAI;QACrE,IAAI,CAAC,QAAQ,OAAO;QAEpB,IAAI;YACF,OAAO,MAAM,wBAAwB,WAAW,CAAC;gBAC/C;gBACA,MAAM;oBAAE,oBAAoB;gBAAK;YACnC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iCAAiC;YAC/C,OAAO;QACT;IACF;IAEA,OAAO;QACL;QACA,WAAW,wBAAwB,SAAS;QAC5C,OAAO,wBAAwB,KAAK;IACtC;AACF","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-material-orders.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport type {\n  ProjectMaterialOrder,\n  CreateMaterialOrderRequest,\n  MaterialOrderStatus\n} from \"@/types\";\nimport { useAutoBudgetDeduction } from \"./use-material-order-budget\";\n\n// Query keys\nexport const materialOrderKeys = {\n  all: [\"material-orders\"] as const,\n  lists: () => [...materialOrderKeys.all, \"list\"] as const,\n  list: (filters: any) => [...materialOrderKeys.lists(), filters] as const,\n  details: () => [...materialOrderKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...materialOrderKeys.details(), id] as const,\n};\n\nexport interface MaterialOrderFilters {\n  project_id?: string;\n  supplier_id?: string;\n  status?: MaterialOrderStatus;\n  page?: number;\n  per_page?: number;\n}\n\n// Fetch material orders\nasync function fetchMaterialOrders(filters?: MaterialOrderFilters): Promise<{\n  items: ProjectMaterialOrder[];\n  total: number;\n  page: number;\n  per_page: number;\n  total_pages: number;\n}> {\n  const params = new URLSearchParams();\n\n  if (filters?.project_id) params.set('project_id', filters.project_id);\n  if (filters?.supplier_id) params.set('supplier_id', filters.supplier_id);\n  if (filters?.status) params.set('status', filters.status);\n  if (filters?.page) params.set('page', filters.page.toString());\n  if (filters?.per_page) params.set('per_page', filters.per_page.toString());\n\n  const response = await fetch(`/api/materials/orders?${params.toString()}`);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch material orders\");\n  }\n  return response.json();\n}\n\n// Fetch single material order\nasync function fetchMaterialOrder(id: string): Promise<ProjectMaterialOrder> {\n  const response = await fetch(`/api/materials/orders/${id}`);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch material order\");\n  }\n  return response.json();\n}\n\n// Create material order\nasync function createMaterialOrder(data: CreateMaterialOrderRequest): Promise<ProjectMaterialOrder> {\n  const response = await fetch(\"/api/materials/orders\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || \"Failed to create material order\");\n  }\n\n  return response.json();\n}\n\n// Update material order\nasync function updateMaterialOrder(id: string, data: {\n  status?: MaterialOrderStatus;\n  actual_delivery_date?: string;\n  notes?: string;\n}): Promise<ProjectMaterialOrder> {\n  const response = await fetch(`/api/materials/orders/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || \"Failed to update material order\");\n  }\n\n  return response.json();\n}\n\n// Delete material order\nasync function deleteMaterialOrder(id: string): Promise<void> {\n  const response = await fetch(`/api/materials/orders/${id}`, {\n    method: \"DELETE\",\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || \"Failed to delete material order\");\n  }\n}\n\n// Hooks\nexport function useMaterialOrders(filters?: MaterialOrderFilters) {\n  return useQuery({\n    queryKey: materialOrderKeys.list(filters || {}),\n    queryFn: () => fetchMaterialOrders(filters),\n    staleTime: 1000 * 60 * 5, // 5 minutes\n  });\n}\n\nexport function useMaterialOrder(id: string) {\n  return useQuery({\n    queryKey: materialOrderKeys.detail(id),\n    queryFn: () => fetchMaterialOrder(id),\n    enabled: !!id,\n    staleTime: 1000 * 60 * 5,\n  });\n}\n\nexport function useCreateMaterialOrder() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: createMaterialOrder,\n    onSuccess: (newOrder) => {\n      // Invalidate orders lists\n      queryClient.invalidateQueries({ queryKey: materialOrderKeys.lists() });\n\n      // Add the new order to cache\n      queryClient.setQueryData(materialOrderKeys.detail(newOrder.id), newOrder);\n\n      toast.success(\"Material order created successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to create order: ${error.message}`);\n    },\n  });\n}\n\n// Enhanced hook with automatic budget deduction\nexport function useCreateMaterialOrderWithBudget() {\n  const createOrder = useCreateMaterialOrder();\n  const { deductFromBudget } = useAutoBudgetDeduction();\n\n  return useMutation({\n    mutationFn: async (data: CreateMaterialOrderRequest & { deduct_from_budget?: boolean }) => {\n      const { deduct_from_budget = true, ...orderData } = data;\n\n      // Create the order first\n      const newOrder = await createOrder.mutateAsync(orderData);\n\n      // Then deduct from budget if requested\n      if (deduct_from_budget && newOrder.project_id) {\n        try {\n          await deductFromBudget(newOrder.id, true);\n        } catch (budgetError) {\n          console.warn('Budget deduction failed, but order was created:', budgetError);\n          toast.warning('Order created but budget deduction failed. Please manage manually.');\n        }\n      }\n\n      return newOrder;\n    },\n    onSuccess: (newOrder) => {\n      toast.success(`Order created and €${newOrder.total_cost_eur.toFixed(2)} deducted from project budget`);\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to create order: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateMaterialOrder() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: any }) =>\n      updateMaterialOrder(id, data),\n    onSuccess: (updatedOrder) => {\n      // Update individual order cache\n      queryClient.setQueryData(\n        materialOrderKeys.detail(updatedOrder.id),\n        updatedOrder\n      );\n\n      // Invalidate orders lists\n      queryClient.invalidateQueries({ queryKey: materialOrderKeys.lists() });\n\n      toast.success(\"Order updated successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to update order: ${error.message}`);\n    },\n  });\n}\n\nexport function useDeleteMaterialOrder() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: deleteMaterialOrder,\n    onSuccess: (_, deletedId) => {\n      // Remove from cache\n      queryClient.removeQueries({\n        queryKey: materialOrderKeys.detail(deletedId),\n      });\n\n      // Invalidate orders lists\n      queryClient.invalidateQueries({ queryKey: materialOrderKeys.lists() });\n\n      toast.success(\"Order deleted successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to delete order: ${error.message}`);\n    },\n  });\n}\n\n// Project-specific hooks\nexport function useProjectMaterialOrders(projectId: string) {\n  return useMaterialOrders({ project_id: projectId });\n}\n\nexport function useSupplierMaterialOrders(supplierId: string) {\n  return useMaterialOrders({ supplier_id: supplierId });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-projects.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport {\n  projectsApi,\n  type Project,\n  type ProjectFilters,\n  type CreateProjectRequest,\n  type UpdateProjectRequest,\n  type PaginatedResponse,\n} from \"@/lib/api-client\";\n\n// Query keys\nexport const projectKeys = {\n  all: [\"projects\"] as const,\n  lists: () => [...projectKeys.all, \"list\"] as const,\n  list: (filters: ProjectFilters) => [...projectKeys.lists(), filters] as const,\n  details: () => [...projectKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...projectKeys.details(), id] as const,\n};\n\n// Hooks\nexport function useProjects(filters?: ProjectFilters) {\n  return useQuery({\n    queryKey: projectKeys.list(filters || {}),\n    queryFn: () => projectsApi.getProjects(filters),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useProject(id: string) {\n  return useQuery({\n    queryKey: projectKeys.detail(id),\n    queryFn: () => projectsApi.getProject(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useCreateProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateProjectRequest) => projectsApi.createProject(data),\n    onSuccess: (newProject) => {\n      // Invalidate and refetch projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n\n      // Add the new project to the cache\n      queryClient.setQueryData(projectKeys.detail(newProject.id), newProject);\n\n      toast.success(\"Project created successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to create project: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: UpdateProjectRequest }) =>\n      projectsApi.updateProject(id, data),\n    onMutate: async ({ id, data }) => {\n      // Cancel any outgoing refetches\n      await queryClient.cancelQueries({ queryKey: projectKeys.detail(id) });\n\n      // Snapshot the previous value\n      const previousProject = queryClient.getQueryData(projectKeys.detail(id));\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(projectKeys.detail(id), (old: Project | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Return a context object with the snapshotted value\n      return { previousProject };\n    },\n    onError: (error, { id }, context) => {\n      // If the mutation fails, use the context returned from onMutate to roll back\n      if (context?.previousProject) {\n        queryClient.setQueryData(projectKeys.detail(id), context.previousProject);\n      }\n      toast.error(`Failed to update project: ${error.message}`);\n    },\n    onSuccess: (updatedProject) => {\n      // Invalidate and refetch projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      toast.success(\"Project updated successfully\");\n    },\n    onSettled: (data, error, { id }) => {\n      // Always refetch after error or success\n      queryClient.invalidateQueries({ queryKey: projectKeys.detail(id) });\n    },\n  });\n}\n\nexport function useDeleteProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: string) => projectsApi.deleteProject(id),\n    onSuccess: (_, deletedId) => {\n      // Remove from cache\n      queryClient.removeQueries({ queryKey: projectKeys.detail(deletedId) });\n\n      // Invalidate projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n\n      toast.success(\"Project deleted successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to delete project: ${error.message}`);\n    },\n  });\n}\n\n// Optimistic mutations for better UX\nexport function useOptimisticProjectUpdate() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<Project> }) =>\n      projectsApi.updateProject(id, data),\n    onMutate: async ({ id, data }) => {\n      await queryClient.cancelQueries({ queryKey: projectKeys.detail(id) });\n\n      const previousProject = queryClient.getQueryData(projectKeys.detail(id));\n\n      queryClient.setQueryData(projectKeys.detail(id), (old: Project | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Also update in lists if present\n      queryClient.setQueriesData(\n        { queryKey: projectKeys.lists() },\n        (old: PaginatedResponse<Project> | undefined) => {\n          if (!old) return old;\n\n          return {\n            ...old,\n            items: old.items.map((project) =>\n              project.id === id ? { ...project, ...data } : project\n            ),\n          };\n        }\n      );\n\n      return { previousProject };\n    },\n    onError: (error, { id }, context) => {\n      if (context?.previousProject) {\n        queryClient.setQueryData(projectKeys.detail(id), context.previousProject);\n      }\n      // Invalidate lists to revert optimistic updates\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      toast.error(`Failed to update project: ${error.message}`);\n    },\n    onSuccess: () => {\n      toast.success(\"Project updated successfully\");\n    },\n  });\n}\n\n// Project statistics hook\nexport interface ProjectStats {\n  progress: {\n    totalLength: number;\n    completedLength: number;\n    progressPercentage: number;\n    workEntries: number;\n    pendingApprovals: number;\n    teamMembers: number;\n    materialsCount: number;\n  };\n  phase: {\n    currentPhase: number;\n    totalPhases: number;\n    phaseName: string;\n    phaseProgress: number;\n  };\n  financial: {\n    projectBudget: number;\n    totalSpent: number;\n    spentPercentage: number;\n    remainingBudget: number;\n  };\n}\n\nexport function useProjectStats(projectId: string) {\n  return useQuery({\n    queryKey: [...projectKeys.detail(projectId), \"stats\"],\n    queryFn: async (): Promise<ProjectStats> => {\n      const response = await fetch(`/api/projects/${projectId}/stats`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch project statistics');\n      }\n      return response.json();\n    },\n    staleTime: 2 * 60 * 1000, // 2 minutes - stats change more frequently\n    enabled: !!projectId,\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 733, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-suppliers.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\n\n// Query keys\nexport const supplierKeys = {\n  all: [\"suppliers\"] as const,\n  lists: () => [...supplierKeys.all, \"list\"] as const,\n  list: (filters: string) => [...supplierKeys.lists(), { filters }] as const,\n  details: () => [...supplierKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...supplierKeys.details(), id] as const,\n};\n\nexport interface Supplier {\n  id: string;\n  org_name: string;\n  contact_person: string;\n  phone?: string;\n  email?: string;\n  address?: string;\n  notes?: string;\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface CreateSupplierData {\n  org_name: string;\n  contact_person: string;\n  phone?: string;\n  email?: string;\n  address?: string;\n  notes?: string;\n}\n\nexport interface UpdateSupplierData {\n  id: string;\n  org_name?: string;\n  contact_person?: string;\n  phone?: string;\n  email?: string;\n  address?: string;\n  notes?: string;\n}\n\nexport interface SupplierContact {\n  id: string;\n  supplier_id: string;\n  contact_name: string;\n  position?: string;\n  department?: string;\n  phone?: string;\n  email?: string;\n  is_primary: boolean;\n  is_active: boolean;\n  notes?: string;\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface CreateContactData {\n  contact_name: string;\n  position?: string;\n  department?: string;\n  phone?: string;\n  email?: string;\n  is_primary?: boolean;\n  notes?: string;\n}\n\nexport interface UpdateContactData {\n  contact_name?: string;\n  position?: string;\n  department?: string;\n  phone?: string;\n  email?: string;\n  is_primary?: boolean;\n  notes?: string;\n}\n\nexport interface SupplierMaterial {\n  id: string;\n  supplier_id: string;\n  material_id: string;\n  supplier_part_number?: string;\n  unit_price: number;\n  minimum_order_qty: number;\n  lead_time_days?: number;\n  is_preferred: boolean;\n  last_price_update?: string;\n  notes?: string;\n  created_at: string;\n  updated_at: string;\n  material: {\n    id: string;\n    name: string;\n    category?: string;\n    unit: string;\n    unit_price_eur: number;\n    supplier_name?: string;\n    description?: string;\n    is_active: boolean;\n  };\n  material_name?: string;\n  material_category?: string;\n  material_unit?: string;\n  material_description?: string;\n}\n\nexport interface CreateMaterialData {\n  material_id?: string;\n  material_name?: string;\n  category?: string;\n  unit?: string;\n  supplier_part_number?: string;\n  unit_price: number;\n  minimum_order_qty?: number;\n  lead_time_days?: number;\n  is_preferred?: boolean;\n  notes?: string;\n}\n\nexport interface ProjectAssignment {\n  id: string;\n  project_id: string;\n  supplier_id: string;\n  supplier_role: string;\n  contact_person?: string;\n  contract_reference?: string;\n  start_date?: string;\n  end_date?: string;\n  status: string;\n  notes?: string;\n  created_at: string;\n  updated_at: string;\n  assigned_at?: string; // For compatibility\n  project_name?: string;\n  project_customer?: string;\n  project_city?: string;\n  project_status?: string;\n}\n\nexport interface CreateProjectAssignmentData {\n  project_id: string;\n  supplier_role?: string;\n  contact_person?: string;\n  contract_reference?: string;\n  start_date?: string;\n  end_date?: string;\n  status?: string;\n  notes?: string;\n}\n\n// Fetch suppliers\nasync function fetchSuppliers(): Promise<Supplier[]> {\n  const response = await fetch(\"/api/suppliers\");\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch suppliers\");\n  }\n  const data = await response.json();\n  // Extract items array from paginated response and map name to org_name\n  const suppliers = data.items || [];\n  return suppliers.map((supplier: any) => ({\n    ...supplier,\n    org_name: supplier.name,\n  }));\n}\n\n// Fetch single supplier\nasync function fetchSupplier(id: string): Promise<Supplier> {\n  const response = await fetch(`/api/suppliers/${id}`);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch supplier\");\n  }\n  return response.json();\n}\n\n// Create supplier\nasync function createSupplier(data: CreateSupplierData): Promise<Supplier> {\n  // Map org_name to name for API compatibility\n  const { org_name, ...restData } = data;\n  const apiData = {\n    ...restData,\n    name: org_name,\n  };\n\n  const response = await fetch(\"/api/suppliers\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(apiData),\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to create supplier\");\n  }\n\n  const result = await response.json();\n\n  // Map name back to org_name for frontend compatibility\n  return {\n    ...result,\n    org_name: result.name,\n  };\n}\n\n// Update supplier\nasync function updateSupplier(data: UpdateSupplierData): Promise<Supplier> {\n  const { id, ...updateData } = data;\n  const response = await fetch(`/api/suppliers/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(updateData),\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to update supplier\");\n  }\n\n  return response.json();\n}\n\n// Delete supplier\nasync function deleteSupplier(id: string): Promise<void> {\n  const response = await fetch(`/api/suppliers/${id}`, {\n    method: \"DELETE\",\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to delete supplier\");\n  }\n}\n\n// Fetch supplier contacts\nasync function fetchSupplierContacts(supplierId: string): Promise<SupplierContact[]> {\n  const response = await fetch(`/api/suppliers/${supplierId}/contacts`);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch supplier contacts\");\n  }\n  return response.json();\n}\n\n// Create supplier contact\nasync function createSupplierContact(supplierId: string, data: CreateContactData): Promise<SupplierContact> {\n  const response = await fetch(`/api/suppliers/${supplierId}/contacts`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to create supplier contact\");\n  }\n\n  return response.json();\n}\n\n// Update supplier contact\nasync function updateSupplierContact(supplierId: string, contactId: string, data: UpdateContactData): Promise<SupplierContact> {\n  const response = await fetch(`/api/suppliers/${supplierId}/contacts/${contactId}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to update supplier contact\");\n  }\n\n  return response.json();\n}\n\n// Delete supplier contact\nasync function deleteSupplierContact(supplierId: string, contactId: string): Promise<void> {\n  const response = await fetch(`/api/suppliers/${supplierId}/contacts/${contactId}`, {\n    method: \"DELETE\",\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to delete supplier contact\");\n  }\n}\n\n// Fetch supplier materials\nasync function fetchSupplierMaterials(supplierId: string, projectId?: string): Promise<SupplierMaterial[]> {\n  const url = new URL(`/api/suppliers/${supplierId}/materials`, window.location.origin);\n  if (projectId) {\n    url.searchParams.set('project_id', projectId);\n  }\n\n  const response = await fetch(url.toString());\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch supplier materials\");\n  }\n  return response.json();\n}\n\n// Create supplier material\nasync function createSupplierMaterial(supplierId: string, data: CreateMaterialData): Promise<SupplierMaterial> {\n  const response = await fetch(`/api/suppliers/${supplierId}/materials`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({ error: 'Unknown error' }));\n    throw new Error(errorData.error || `Failed to create supplier material (${response.status})`);\n  }\n\n  return response.json();\n}\n\n// Fetch supplier project assignments\nasync function fetchSupplierProjects(supplierId: string): Promise<ProjectAssignment[]> {\n  const response = await fetch(`/api/suppliers/${supplierId}/projects`);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch supplier projects\");\n  }\n  return response.json();\n}\n\n// Create supplier project assignment\nasync function createSupplierProjectAssignment(supplierId: string, data: CreateProjectAssignmentData): Promise<ProjectAssignment> {\n  const response = await fetch(`/api/suppliers/${supplierId}/projects`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to assign supplier to project\");\n  }\n\n  return response.json();\n}\n\n// Hooks\nexport function useSuppliers() {\n  return useQuery({\n    queryKey: supplierKeys.lists(),\n    queryFn: fetchSuppliers,\n    staleTime: 1000 * 60 * 5, // 5 minutes\n  });\n}\n\nexport function useSupplier(id: string) {\n  return useQuery({\n    queryKey: supplierKeys.detail(id),\n    queryFn: () => fetchSupplier(id),\n    enabled: !!id,\n    staleTime: 1000 * 60 * 5,\n  });\n}\n\nexport function useCreateSupplier() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: createSupplier,\n    onSuccess: (newSupplier) => {\n      // Update suppliers list\n      queryClient.setQueryData<Supplier[]>(\n        supplierKeys.lists(),\n        (oldSuppliers = []) => [...oldSuppliers, newSupplier]\n      );\n\n      // Invalidate suppliers queries\n      queryClient.invalidateQueries({ queryKey: supplierKeys.all });\n\n      toast.success(\"Supplier created successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to create supplier: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateSupplier() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: updateSupplier,\n    onSuccess: (updatedSupplier) => {\n      // Update suppliers list\n      queryClient.setQueryData<Supplier[]>(\n        supplierKeys.lists(),\n        (oldSuppliers = []) =>\n          oldSuppliers.map((supplier) =>\n            supplier.id === updatedSupplier.id ? updatedSupplier : supplier\n          )\n      );\n\n      // Update individual supplier cache\n      queryClient.setQueryData(\n        supplierKeys.detail(updatedSupplier.id),\n        updatedSupplier\n      );\n\n      // Invalidate related queries\n      queryClient.invalidateQueries({ queryKey: supplierKeys.all });\n\n      toast.success(\"Supplier updated successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to update supplier: ${error.message}`);\n    },\n  });\n}\n\nexport function useDeleteSupplier() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: deleteSupplier,\n    onSuccess: (_, deletedId) => {\n      // Remove from suppliers list\n      queryClient.setQueryData<Supplier[]>(\n        supplierKeys.lists(),\n        (oldSuppliers = []) =>\n          oldSuppliers.filter((supplier) => supplier.id !== deletedId)\n      );\n\n      // Remove individual supplier cache\n      queryClient.removeQueries({\n        queryKey: supplierKeys.detail(deletedId),\n      });\n\n      // Invalidate related queries\n      queryClient.invalidateQueries({ queryKey: supplierKeys.all });\n\n      toast.success(\"Supplier deleted successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to delete supplier: ${error.message}`);\n    },\n  });\n}\n\n// Supplier Contacts Hooks\nexport function useSupplierContacts(supplierId: string) {\n  return useQuery({\n    queryKey: [...supplierKeys.detail(supplierId), \"contacts\"],\n    queryFn: () => fetchSupplierContacts(supplierId),\n    enabled: !!supplierId,\n    staleTime: 1000 * 60 * 5,\n  });\n}\n\nexport function useCreateSupplierContact(supplierId: string) {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateContactData) => createSupplierContact(supplierId, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [...supplierKeys.detail(supplierId), \"contacts\"]\n      });\n      toast.success(\"Contact created successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to create contact: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateSupplierContact(supplierId: string) {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ contactId, data }: { contactId: string; data: UpdateContactData }) =>\n      updateSupplierContact(supplierId, contactId, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [...supplierKeys.detail(supplierId), \"contacts\"]\n      });\n      toast.success(\"Contact updated successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to update contact: ${error.message}`);\n    },\n  });\n}\n\nexport function useDeleteSupplierContact(supplierId: string) {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (contactId: string) => deleteSupplierContact(supplierId, contactId),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [...supplierKeys.detail(supplierId), \"contacts\"]\n      });\n      toast.success(\"Contact deleted successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to delete contact: ${error.message}`);\n    },\n  });\n}\n\n// Supplier Materials Hooks\nexport function useSupplierMaterials(supplierId: string, projectId?: string) {\n  return useQuery({\n    queryKey: [...supplierKeys.detail(supplierId), \"materials\", { projectId }],\n    queryFn: () => fetchSupplierMaterials(supplierId, projectId),\n    enabled: !!supplierId,\n    staleTime: 1000 * 60 * 5,\n  });\n}\n\nexport function useCreateSupplierMaterial(supplierId: string) {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateMaterialData) => createSupplierMaterial(supplierId, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [...supplierKeys.detail(supplierId), \"materials\"]\n      });\n      toast.success(\"Material created successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to create material: ${error.message}`);\n    },\n  });\n}\n\n// Supplier Projects Hooks\nexport function useSupplierProjects(supplierId: string) {\n  return useQuery({\n    queryKey: [...supplierKeys.detail(supplierId), \"projects\"],\n    queryFn: () => fetchSupplierProjects(supplierId),\n    enabled: !!supplierId,\n    staleTime: 1000 * 60 * 5,\n  });\n}\n\nexport function useCreateSupplierProjectAssignment(supplierId: string) {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateProjectAssignmentData) => createSupplierProjectAssignment(supplierId, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [...supplierKeys.detail(supplierId), \"projects\"]\n      });\n      toast.success(\"Supplier assigned to project successfully\");\n    },\n    onError: (error: Error) => {\n      toast.error(`Failed to assign supplier to project: ${error.message}`);\n    },\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1167, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/app/%28dashboard%29/dashboard/materials/order/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter, useSearchParams } from \"next/navigation\";\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { ArrowLeft, Plus, Trash2, Package, ShoppingCart } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage, FormDescription } from \"@/components/ui/form\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\n\nimport { useCreateMaterialOrderWithBudget } from \"@/hooks/use-material-orders\";\nimport { useProjects } from \"@/hooks/use-projects\";\nimport { useSuppliers } from \"@/hooks/use-suppliers\";\nimport { useSupplierMaterials } from \"@/hooks/use-suppliers\";\nimport type { CreateMaterialOrderRequest } from \"@/types\";\n\nconst createOrderSchema = z.object({\n  destination_type: z.enum([\"project\", \"warehouse\"], {\n    required_error: \"Destination type is required\",\n  }).default(\"warehouse\"),\n  project_id: z.string().optional(),\n  warehouse_location: z.string().optional(),\n  supplier_id: z.string().min(1, \"Supplier is required\"),\n  expected_delivery_date: z.string().optional(),\n  notes: z.string().optional(),\n  deduct_from_budget: z.boolean().default(false),\n  items: z.array(z.object({\n    material_id: z.string().min(1, \"Material is required\"),\n    quantity: z.coerce.number().positive(\"Quantity must be positive\"),\n    unit_cost: z.coerce.number().positive(\"Unit cost must be positive\").optional(),\n  })).min(1, \"At least one item is required\"),\n}).refine((data) => {\n  if (data.destination_type === \"project\" && !data.project_id) {\n    return false;\n  }\n  if (data.destination_type === \"warehouse\" && !data.warehouse_location) {\n    return false;\n  }\n  return true;\n}, {\n  message: \"Please select a destination\",\n  path: [\"project_id\"],\n});\n\ntype CreateOrderFormData = z.infer<typeof createOrderSchema>;\n\nexport default function OrderMaterialsPage() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const initialProjectId = searchParams.get('project_id') || '';\n\n  const [selectedSupplierId, setSelectedSupplierId] = useState<string>('');\n\n  const createOrder = useCreateMaterialOrderWithBudget();\n  const { data: projectsResponse } = useProjects();\n  const { data: suppliersResponse } = useSuppliers();\n  const { data: supplierMaterials = [] } = useSupplierMaterials(selectedSupplierId);\n\n  const projects = projectsResponse?.items || [];\n  const suppliers = suppliersResponse?.items || [];\n\n  const form = useForm<CreateOrderFormData>({\n    resolver: zodResolver(createOrderSchema),\n    defaultValues: {\n      destination_type: \"warehouse\",\n      project_id: initialProjectId,\n      warehouse_location: \"\",\n      supplier_id: \"\",\n      expected_delivery_date: \"\",\n      notes: \"\",\n      deduct_from_budget: false,\n      items: [{ material_id: \"\", quantity: 1, unit_cost: 0 }],\n    },\n  });\n\n  const { fields, append, remove } = useFieldArray({\n    control: form.control,\n    name: \"items\",\n  });\n\n  const watchedSupplierId = form.watch(\"supplier_id\");\n\n  // Update selected supplier when form changes\n  if (watchedSupplierId !== selectedSupplierId) {\n    setSelectedSupplierId(watchedSupplierId);\n    // Clear existing items when supplier changes\n    if (selectedSupplierId && watchedSupplierId !== selectedSupplierId) {\n      form.setValue(\"items\", [{ material_id: \"\", quantity: 1, unit_cost: 0 }]);\n    }\n  }\n\n  const handleCreateOrder = async (data: CreateOrderFormData) => {\n    try {\n      // Create separate orders for each item since API expects one material per order\n      for (const item of data.items) {\n        const orderData: CreateMaterialOrderRequest & { deduct_from_budget?: boolean } = {\n          project_id: data.destination_type === \"project\" ? data.project_id : undefined,\n          supplier_material_id: item.material_id,\n          quantity: item.quantity,\n          unit_price_eur: item.unit_cost || undefined,\n          expected_delivery_date: data.expected_delivery_date || undefined,\n          notes: data.destination_type === \"warehouse\"\n            ? `СКЛАД: ${data.warehouse_location || 'Основной склад'}${data.notes ? ` | ${data.notes}` : ''}`\n            : data.notes || undefined,\n          deduct_from_budget: data.destination_type === \"project\" ? data.deduct_from_budget : false,\n        };\n\n        await createOrder.mutateAsync(orderData);\n      }\n\n      router.push(\"/dashboard/materials\");\n    } catch (error) {\n      console.error(\"Failed to create order:\", error);\n    }\n  };\n\n  const addItem = () => {\n    append({ material_id: \"\", quantity: 1, unit_cost: 0 });\n  };\n\n  const calculateTotal = () => {\n    const items = form.getValues(\"items\");\n    return items.reduce((total, item) => {\n      return total + (item.quantity * (item.unit_cost || 0));\n    }, 0);\n  };\n\n  const selectedProject = projects.find(p => p.id === form.watch(\"project_id\"));\n  const selectedSupplier = suppliers.find(s => s.id === selectedSupplierId);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => router.back()}\n            className=\"flex items-center space-x-2\"\n          >\n            <ArrowLeft className=\"h-4 w-4\" />\n            <span>Back</span>\n          </Button>\n          <div>\n            <h1 className=\"text-3xl font-bold tracking-tight\">Order Materials</h1>\n            <p className=\"text-muted-foreground\">\n              Create a material order for delivery to a project or warehouse\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Main Form */}\n        <div className=\"lg:col-span-2\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <ShoppingCart className=\"h-5 w-5\" />\n                <span>Order Details</span>\n              </CardTitle>\n              <CardDescription>\n                Select destination, supplier, and materials to order\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(handleCreateOrder)} className=\"space-y-6\">\n                  {/* Destination Type Selection */}\n                  <FormField\n                    control={form.control}\n                    name=\"destination_type\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Назначение поставки *</FormLabel>\n                        <Select onValueChange={field.onChange} value={field.value}>\n                          <FormControl>\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Выберите назначение\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            <SelectItem value=\"warehouse\">Склад</SelectItem>\n                            <SelectItem value=\"project\">Конкретный проект</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <FormDescription>\n                          Выберите, куда доставить материалы: на общий склад или на конкретный проект\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  {/* Project and Supplier Selection */}\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {form.watch(\"destination_type\") === \"project\" && (\n                      <FormField\n                        control={form.control}\n                        name=\"project_id\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Проект *</FormLabel>\n                            <Select onValueChange={field.onChange} value={field.value}>\n                              <FormControl>\n                                <SelectTrigger>\n                                  <SelectValue placeholder=\"Выберите проект\" />\n                                </SelectTrigger>\n                              </FormControl>\n                              <SelectContent>\n                                {projects.map((project) => (\n                                  <SelectItem key={project.id} value={project.id}>\n                                    {project.name}\n                                  </SelectItem>\n                                ))}\n                              </SelectContent>\n                            </Select>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    )}\n\n                    {form.watch(\"destination_type\") === \"warehouse\" && (\n                      <FormField\n                        control={form.control}\n                        name=\"warehouse_location\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Адрес склада *</FormLabel>\n                            <FormControl>\n                              <Input\n                                placeholder=\"Введите адрес склада (например: Основной склад)\"\n                                {...field}\n                              />\n                            </FormControl>\n                            <FormDescription>\n                              Укажите адрес или название склада для доставки\n                            </FormDescription>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    )}\n\n\n                    <FormField\n                      control={form.control}\n                      name=\"supplier_id\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Supplier *</FormLabel>\n                          <Select onValueChange={field.onChange} value={field.value}>\n                            <FormControl>\n                              <SelectTrigger>\n                                <SelectValue placeholder=\"Select supplier\" />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              {suppliers.map((supplier) => (\n                                <SelectItem key={supplier.id} value={supplier.id}>\n                                  {supplier.org_name}\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={form.control}\n                      name=\"expected_delivery_date\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Expected Delivery Date</FormLabel>\n                          <FormControl>\n                            <Input\n                              type=\"date\"\n                              {...field}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n\n                  {/* Materials List */}\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <h3 className=\"text-lg font-medium\">Materials</h3>\n                      <Button\n                        type=\"button\"\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={addItem}\n                        disabled={!selectedSupplierId}\n                      >\n                        <Plus className=\"mr-2 h-4 w-4\" />\n                        Add Item\n                      </Button>\n                    </div>\n\n                    {!selectedSupplierId && (\n                      <div className=\"text-center py-8 text-muted-foreground\">\n                        Please select a supplier to add materials\n                      </div>\n                    )}\n\n                    {selectedSupplierId && supplierMaterials.length === 0 && (\n                      <div className=\"text-center py-8 text-muted-foreground\">\n                        No materials available from this supplier\n                      </div>\n                    )}\n\n                    {selectedSupplierId && supplierMaterials.length > 0 && (\n                      <div className=\"border rounded-lg\">\n                        <Table>\n                          <TableHeader>\n                            <TableRow>\n                              <TableHead>Material</TableHead>\n                              <TableHead>Quantity</TableHead>\n                              <TableHead>Unit Cost (€)</TableHead>\n                              <TableHead>Total (€)</TableHead>\n                              <TableHead className=\"w-[50px]\"></TableHead>\n                            </TableRow>\n                          </TableHeader>\n                          <TableBody>\n                            {fields.map((field, index) => {\n                              const selectedMaterial = supplierMaterials.find(\n                                m => m.id === form.watch(`items.${index}.material_id`)\n                              );\n                              const quantity = form.watch(`items.${index}.quantity`) || 0;\n                              const unitCost = form.watch(`items.${index}.unit_cost`) || selectedMaterial?.unit_price || 0;\n                              const total = quantity * unitCost;\n\n                              return (\n                                <TableRow key={field.id}>\n                                  <TableCell>\n                                    <FormField\n                                      control={form.control}\n                                      name={`items.${index}.material_id`}\n                                      render={({ field }) => (\n                                        <FormItem>\n                                          <Select onValueChange={(value) => {\n                                            field.onChange(value);\n                                            // Auto-fill unit cost from supplier material\n                                            const material = supplierMaterials.find(m => m.id === value);\n                                            if (material) {\n                                              form.setValue(`items.${index}.unit_cost`, material.unit_price);\n                                            }\n                                          }} value={field.value}>\n                                            <FormControl>\n                                              <SelectTrigger>\n                                                <SelectValue placeholder=\"Select material\" />\n                                              </SelectTrigger>\n                                            </FormControl>\n                                            <SelectContent>\n                                              {supplierMaterials.map((material) => (\n                                                <SelectItem key={material.id} value={material.id}>\n                                                  <div className=\"flex flex-col\">\n                                                    <span>{material.material?.name || material.material_name}</span>\n                                                    <span className=\"text-xs text-muted-foreground\">\n                                                      €{material.unit_price}/{material.material?.unit || material.material_unit}\n                                                    </span>\n                                                  </div>\n                                                </SelectItem>\n                                              ))}\n                                            </SelectContent>\n                                          </Select>\n                                          <FormMessage />\n                                        </FormItem>\n                                      )}\n                                    />\n                                    {selectedMaterial && (\n                                      <div className=\"mt-1 text-xs text-muted-foreground\">\n                                        Unit: {selectedMaterial.unit}\n                                        {selectedMaterial.min_order_quantity > 1 && (\n                                          <span className=\"ml-1\">\n                                            (Min: {selectedMaterial.min_order_quantity})\n                                          </span>\n                                        )}\n                                      </div>\n                                    )}\n                                  </TableCell>\n                                  <TableCell>\n                                    <FormField\n                                      control={form.control}\n                                      name={`items.${index}.quantity`}\n                                      render={({ field }) => (\n                                        <FormItem>\n                                          <FormControl>\n                                            <Input\n                                              type=\"number\"\n                                              step=\"0.001\"\n                                              min={selectedMaterial?.min_order_quantity || 1}\n                                              {...field}\n                                            />\n                                          </FormControl>\n                                          <FormMessage />\n                                        </FormItem>\n                                      )}\n                                    />\n                                  </TableCell>\n                                  <TableCell>\n                                    <FormField\n                                      control={form.control}\n                                      name={`items.${index}.unit_cost`}\n                                      render={({ field }) => (\n                                        <FormItem>\n                                          <FormControl>\n                                            <Input\n                                              type=\"number\"\n                                              step=\"0.01\"\n                                              min=\"0\"\n                                              {...field}\n                                            />\n                                          </FormControl>\n                                          <FormMessage />\n                                        </FormItem>\n                                      )}\n                                    />\n                                  </TableCell>\n                                  <TableCell>\n                                    <span className=\"font-medium\">\n                                      €{total.toFixed(2)}\n                                    </span>\n                                  </TableCell>\n                                  <TableCell>\n                                    {fields.length > 1 && (\n                                      <Button\n                                        type=\"button\"\n                                        variant=\"ghost\"\n                                        size=\"sm\"\n                                        onClick={() => remove(index)}\n                                      >\n                                        <Trash2 className=\"h-4 w-4\" />\n                                      </Button>\n                                    )}\n                                  </TableCell>\n                                </TableRow>\n                              );\n                            })}\n                          </TableBody>\n                        </Table>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Notes */}\n                  <FormField\n                    control={form.control}\n                    name=\"notes\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Notes</FormLabel>\n                        <FormControl>\n                          <Textarea\n                            placeholder=\"Additional notes for this order...\"\n                            rows={3}\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  {/* Budget Deduction - Only for project orders */}\n                  {form.watch(\"destination_type\") === \"project\" && (\n                    <FormField\n                      control={form.control}\n                      name=\"deduct_from_budget\"\n                      render={({ field }) => (\n                        <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4\">\n                          <FormControl>\n                            <Checkbox\n                              checked={field.value}\n                              onCheckedChange={field.onChange}\n                            />\n                          </FormControl>\n                          <div className=\"space-y-1 leading-none\">\n                            <FormLabel>\n                              Автоматически списать с бюджета проекта\n                            </FormLabel>\n                            <FormDescription>\n                              Если включено, стоимость заказа будет автоматически списана с бюджета проекта как расходная операция. Вы можете управлять этим вручную позже, если отключено.\n                            </FormDescription>\n                          </div>\n                        </FormItem>\n                      )}\n                    />\n                  )}\n\n                  <div className=\"flex justify-end space-x-2\">\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      onClick={() => router.back()}\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      type=\"submit\"\n                      disabled={createOrder.isPending}\n                    >\n                      {createOrder.isPending ? (\n                        <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-background border-t-transparent mr-2\" />\n                      ) : (\n                        <Package className=\"mr-2 h-4 w-4\" />\n                      )}\n                      Create Order\n                    </Button>\n                  </div>\n                </form>\n              </Form>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Sidebar */}\n        <div className=\"space-y-6\">\n          {/* Order Summary */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Order Summary</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              {selectedProject && (\n                <div>\n                  <h4 className=\"font-medium text-sm\">Project</h4>\n                  <p className=\"text-sm text-muted-foreground\">{selectedProject.name}</p>\n                  <p className=\"text-xs text-muted-foreground\">{selectedProject.customer}</p>\n                </div>\n              )}\n\n              {selectedSupplier && (\n                <div>\n                  <h4 className=\"font-medium text-sm\">Supplier</h4>\n                  <p className=\"text-sm text-muted-foreground\">{selectedSupplier.org_name}</p>\n                  <p className=\"text-xs text-muted-foreground\">{selectedSupplier.contact_person}</p>\n                </div>\n              )}\n\n              <div className=\"pt-2 border-t\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"font-medium\">Total Cost</span>\n                  <span className=\"text-lg font-bold\">€{calculateTotal().toFixed(2)}</span>\n                </div>\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  Excludes delivery costs\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Help */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Order Information</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4 text-sm\">\n              <div>\n                <h4 className=\"font-medium\">Order Process</h4>\n                <p className=\"text-muted-foreground\">\n                  Orders are created with \"pending\" status and can be tracked through delivery\n                </p>\n              </div>\n              <div>\n                <h4 className=\"font-medium\">Costs</h4>\n                <p className=\"text-muted-foreground\">\n                  Order costs will be deducted from the project budget automatically\n                </p>\n              </div>\n              <div>\n                <h4 className=\"font-medium\">Delivery</h4>\n                <p className=\"text-muted-foreground\">\n                  Check with supplier for delivery costs and minimum order requirements\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}