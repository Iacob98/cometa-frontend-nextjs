{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,mNAAgB,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-financial.ts"],"sourcesContent":["'use client';\n\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { toast } from 'sonner';\nimport type {\n  Transaction,\n  CreateTransactionRequest,\n  FinancialFilters,\n  FinancialSummary\n} from '@/types';\n\nexport interface TransactionsResponse {\n  transactions: Transaction[];\n  total: number;\n  page: number;\n  per_page: number;\n  total_pages: number;\n}\n\n// Query keys\nexport const financialKeys = {\n  all: ['financial'] as const,\n  transactions: () => [...financialKeys.all, 'transactions'] as const,\n  transactionsList: (filters: FinancialFilters) => [...financialKeys.transactions(), filters] as const,\n  summary: (filters: Omit<FinancialFilters, 'page' | 'per_page'>) =>\n    [...financialKeys.all, 'summary', filters] as const,\n};\n\n// Fetch transactions with filters\nexport function useTransactions(filters: FinancialFilters = {}) {\n  const searchParams = new URLSearchParams();\n\n  Object.entries(filters).forEach(([key, value]) => {\n    if (value !== undefined && value !== null && value !== '') {\n      searchParams.append(key, value.toString());\n    }\n  });\n\n  return useQuery({\n    queryKey: financialKeys.transactionsList(filters),\n    queryFn: async (): Promise<TransactionsResponse> => {\n      const response = await fetch(`/api/transactions?${searchParams.toString()}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch transactions');\n      }\n      return response.json();\n    },\n  });\n}\n\n// Fetch financial summary\nexport function useFinancialSummary(filters: Omit<FinancialFilters, 'page' | 'per_page'> = {}) {\n  const searchParams = new URLSearchParams();\n\n  Object.entries(filters).forEach(([key, value]) => {\n    if (value !== undefined && value !== null && value !== '') {\n      searchParams.append(key, value.toString());\n    }\n  });\n\n  return useQuery({\n    queryKey: financialKeys.summary(filters),\n    queryFn: async (): Promise<FinancialSummary> => {\n      const response = await fetch(`/api/financial/summary?${searchParams.toString()}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch financial summary');\n      }\n      return response.json();\n    },\n  });\n}\n\n// Create new transaction\nexport function useCreateTransaction() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (data: CreateTransactionRequest) => {\n      const response = await fetch('/api/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to create transaction');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      // Invalidate all financial queries to refresh data\n      queryClient.invalidateQueries({ queryKey: financialKeys.all });\n      toast.success('Transaction created successfully');\n    },\n    onError: (error: Error) => {\n      console.error('Failed to create transaction:', error);\n      toast.error(error.message || 'Failed to create transaction');\n    },\n  });\n}\n\n// Specialized hooks for common use cases\nexport function useProjectTransactions(projectId?: string) {\n  return useTransactions({\n    project_id: projectId,\n    page: 1,\n    per_page: 20,\n  });\n}\n\nexport function useRecentTransactions(limit = 10) {\n  return useTransactions({\n    page: 1,\n    per_page: limit,\n  });\n}\n\nexport function useExpensesByCategory(category?: string) {\n  return useTransactions({\n    type: 'expense',\n    category: category as any,\n    page: 1,\n    per_page: 50,\n  });\n}\n\nexport function useIncomeTransactions() {\n  return useTransactions({\n    type: 'income',\n    page: 1,\n    per_page: 50,\n  });\n}\n\nexport function usePendingTransactions() {\n  return useTransactions({\n    approved: false,\n    page: 1,\n    per_page: 50,\n  });\n}\n\n// Transaction categories for filtering and forms\nexport const TRANSACTION_CATEGORIES = [\n  'material_cost',\n  'equipment_rental',\n  'labor_cost',\n  'vehicle_expense',\n  'fuel',\n  'maintenance',\n  'insurance',\n  'permit_fee',\n  'subcontractor',\n  'overtime',\n  'bonus',\n  'fine',\n  'utility',\n  'office_expense',\n  'travel',\n  'accommodation',\n  'meal',\n  'communication',\n  'software_license',\n  'training',\n  'safety_equipment',\n  'other',\n] as const;\n\nexport type TransactionCategory = typeof TRANSACTION_CATEGORIES[number];\n\n// Payment methods\nexport const PAYMENT_METHODS = [\n  'cash',\n  'bank_transfer',\n  'credit_card',\n  'check',\n  'invoice',\n] as const;\n\nexport type PaymentMethod = typeof PAYMENT_METHODS[number];\n\n// Helper function to get category label\nexport function getCategoryLabel(category: string): string {\n  const labels: Record<string, string> = {\n    material_cost: 'Material Cost',\n    equipment_rental: 'Equipment Rental',\n    labor_cost: 'Labor Cost',\n    vehicle_expense: 'Vehicle Expense',\n    fuel: 'Fuel',\n    maintenance: 'Maintenance',\n    insurance: 'Insurance',\n    permit_fee: 'Permit Fee',\n    subcontractor: 'Subcontractor',\n    overtime: 'Overtime',\n    bonus: 'Bonus',\n    fine: 'Fine',\n    utility: 'Utility',\n    office_expense: 'Office Expense',\n    travel: 'Travel',\n    accommodation: 'Accommodation',\n    meal: 'Meal',\n    communication: 'Communication',\n    software_license: 'Software License',\n    training: 'Training',\n    safety_equipment: 'Safety Equipment',\n    other: 'Other',\n  };\n\n  return labels[category] || category.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n}\n\n// Helper function to get category color\nexport function getCategoryColor(category: string): string {\n  const colors: Record<string, string> = {\n    material_cost: 'bg-blue-100 text-blue-800',\n    equipment_rental: 'bg-purple-100 text-purple-800',\n    labor_cost: 'bg-green-100 text-green-800',\n    vehicle_expense: 'bg-orange-100 text-orange-800',\n    fuel: 'bg-red-100 text-red-800',\n    maintenance: 'bg-yellow-100 text-yellow-800',\n    insurance: 'bg-indigo-100 text-indigo-800',\n    permit_fee: 'bg-pink-100 text-pink-800',\n    subcontractor: 'bg-teal-100 text-teal-800',\n    overtime: 'bg-emerald-100 text-emerald-800',\n    bonus: 'bg-cyan-100 text-cyan-800',\n    fine: 'bg-rose-100 text-rose-800',\n    utility: 'bg-slate-100 text-slate-800',\n    office_expense: 'bg-zinc-100 text-zinc-800',\n    travel: 'bg-violet-100 text-violet-800',\n    accommodation: 'bg-fuchsia-100 text-fuchsia-800',\n    meal: 'bg-lime-100 text-lime-800',\n    communication: 'bg-sky-100 text-sky-800',\n    software_license: 'bg-amber-100 text-amber-800',\n    training: 'bg-stone-100 text-stone-800',\n    safety_equipment: 'bg-neutral-100 text-neutral-800',\n    other: 'bg-gray-100 text-gray-800',\n  };\n\n  return colors[category] || 'bg-gray-100 text-gray-800';\n}\n\n// Helper function to get payment method label\nexport function getPaymentMethodLabel(method: string): string {\n  const labels: Record<string, string> = {\n    cash: 'Cash',\n    bank_transfer: 'Bank Transfer',\n    credit_card: 'Credit Card',\n    check: 'Check',\n    invoice: 'Invoice',\n  };\n\n  return labels[method] || method.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n}\n\n// Helper function to format currency\nexport function formatCurrency(amount: number, currency = 'EUR'): string {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(amount);\n}\n\n// Helper function to get transaction type color\nexport function getTransactionTypeColor(type: string): string {\n  switch (type) {\n    case 'income':\n      return 'text-green-600';\n    case 'expense':\n      return 'text-red-600';\n    case 'transfer':\n      return 'text-blue-600';\n    default:\n      return 'text-gray-600';\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-projects.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport {\n  projectsApi,\n  type Project,\n  type ProjectFilters,\n  type CreateProjectRequest,\n  type UpdateProjectRequest,\n  type PaginatedResponse,\n} from \"@/lib/api-client\";\n\n// Query keys\nexport const projectKeys = {\n  all: [\"projects\"] as const,\n  lists: () => [...projectKeys.all, \"list\"] as const,\n  list: (filters: ProjectFilters) => [...projectKeys.lists(), filters] as const,\n  details: () => [...projectKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...projectKeys.details(), id] as const,\n};\n\n// Hooks\nexport function useProjects(filters?: ProjectFilters) {\n  return useQuery({\n    queryKey: projectKeys.list(filters || {}),\n    queryFn: () => projectsApi.getProjects(filters),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useProject(id: string) {\n  return useQuery({\n    queryKey: projectKeys.detail(id),\n    queryFn: () => projectsApi.getProject(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useCreateProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateProjectRequest) => projectsApi.createProject(data),\n    onSuccess: (newProject) => {\n      // Invalidate and refetch projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n\n      // Add the new project to the cache\n      queryClient.setQueryData(projectKeys.detail(newProject.id), newProject);\n\n      toast.success(\"Project created successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to create project: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: UpdateProjectRequest }) =>\n      projectsApi.updateProject(id, data),\n    onMutate: async ({ id, data }) => {\n      // Cancel any outgoing refetches\n      await queryClient.cancelQueries({ queryKey: projectKeys.detail(id) });\n\n      // Snapshot the previous value\n      const previousProject = queryClient.getQueryData(projectKeys.detail(id));\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(projectKeys.detail(id), (old: Project | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Return a context object with the snapshotted value\n      return { previousProject };\n    },\n    onError: (error, { id }, context) => {\n      // If the mutation fails, use the context returned from onMutate to roll back\n      if (context?.previousProject) {\n        queryClient.setQueryData(projectKeys.detail(id), context.previousProject);\n      }\n      toast.error(`Failed to update project: ${error.message}`);\n    },\n    onSuccess: (updatedProject) => {\n      // Invalidate and refetch projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      toast.success(\"Project updated successfully\");\n    },\n    onSettled: (data, error, { id }) => {\n      // Always refetch after error or success\n      queryClient.invalidateQueries({ queryKey: projectKeys.detail(id) });\n    },\n  });\n}\n\nexport function useDeleteProject() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: string) => projectsApi.deleteProject(id),\n    onSuccess: (_, deletedId) => {\n      // Remove from cache\n      queryClient.removeQueries({ queryKey: projectKeys.detail(deletedId) });\n\n      // Invalidate projects list\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n\n      toast.success(\"Project deleted successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to delete project: ${error.message}`);\n    },\n  });\n}\n\n// Optimistic mutations for better UX\nexport function useOptimisticProjectUpdate() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<Project> }) =>\n      projectsApi.updateProject(id, data),\n    onMutate: async ({ id, data }) => {\n      await queryClient.cancelQueries({ queryKey: projectKeys.detail(id) });\n\n      const previousProject = queryClient.getQueryData(projectKeys.detail(id));\n\n      queryClient.setQueryData(projectKeys.detail(id), (old: Project | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Also update in lists if present\n      queryClient.setQueriesData(\n        { queryKey: projectKeys.lists() },\n        (old: PaginatedResponse<Project> | undefined) => {\n          if (!old) return old;\n\n          return {\n            ...old,\n            items: old.items.map((project) =>\n              project.id === id ? { ...project, ...data } : project\n            ),\n          };\n        }\n      );\n\n      return { previousProject };\n    },\n    onError: (error, { id }, context) => {\n      if (context?.previousProject) {\n        queryClient.setQueryData(projectKeys.detail(id), context.previousProject);\n      }\n      // Invalidate lists to revert optimistic updates\n      queryClient.invalidateQueries({ queryKey: projectKeys.lists() });\n      toast.error(`Failed to update project: ${error.message}`);\n    },\n    onSuccess: () => {\n      toast.success(\"Project updated successfully\");\n    },\n  });\n}\n\n// Project statistics hook\nexport interface ProjectStats {\n  progress: {\n    totalLength: number;\n    completedLength: number;\n    progressPercentage: number;\n    workEntries: number;\n    pendingApprovals: number;\n    teamMembers: number;\n    materialsCount: number;\n  };\n  phase: {\n    currentPhase: number;\n    totalPhases: number;\n    phaseName: string;\n    phaseProgress: number;\n  };\n  financial: {\n    projectBudget: number;\n    totalSpent: number;\n    spentPercentage: number;\n    remainingBudget: number;\n  };\n}\n\nexport function useProjectStats(projectId: string) {\n  return useQuery({\n    queryKey: [...projectKeys.detail(projectId), \"stats\"],\n    queryFn: async (): Promise<ProjectStats> => {\n      const response = await fetch(`/api/projects/${projectId}/stats`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch project statistics');\n      }\n      return response.json();\n    },\n    staleTime: 2 * 60 * 1000, // 2 minutes - stats change more frequently\n    enabled: !!projectId,\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 614, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/app/%28dashboard%29/dashboard/financial/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Plus, TrendingUp, TrendingDown, DollarSign, CreditCard, Receipt, Calendar, Filter, Search, BarChart3, PieChart, Eye, Edit, Trash2 } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\nimport { useTransactions, useFinancialSummary, formatCurrency, getCategoryLabel, getCategoryColor, getPaymentMethodLabel, getTransactionTypeColor, TRANSACTION_CATEGORIES, PAYMENT_METHODS } from \"@/hooks/use-financial\";\nimport { useProjects } from \"@/hooks/use-projects\";\nimport { useAuth, usePermissions } from \"@/hooks/use-auth\";\nimport type { FinancialFilters, TransactionCategory, PaymentMethod } from \"@/types\";\n\nexport default function FinancialPage() {\n  const router = useRouter();\n  const { user } = useAuth();\n  const { canManageFinances, canViewFinances } = usePermissions();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [typeFilter, setTypeFilter] = useState<\"all\" | \"income\" | \"expense\" | \"transfer\">(\"all\");\n  const [categoryFilter, setCategoryFilter] = useState<TransactionCategory | \"all\">(\"all\");\n  const [paymentMethodFilter, setPaymentMethodFilter] = useState<PaymentMethod | \"all\">(\"all\");\n  const [projectFilter, setProjectFilter] = useState<string>(\"all\");\n  const [dateFrom, setDateFrom] = useState(\"\");\n  const [dateTo, setDateTo] = useState(\"\");\n\n  const filters: FinancialFilters = {\n    type: typeFilter === \"all\" ? undefined : typeFilter,\n    category: categoryFilter === \"all\" ? undefined : categoryFilter,\n    payment_method: paymentMethodFilter === \"all\" ? undefined : paymentMethodFilter,\n    project_id: projectFilter === \"all\" ? undefined : projectFilter,\n    date_from: dateFrom || undefined,\n    date_to: dateTo || undefined,\n    search: searchQuery || undefined,\n    page: 1,\n    per_page: 20,\n  };\n\n  const { data: transactionsResponse, isLoading: transactionsLoading, error: transactionsError } = useTransactions(filters);\n  const { data: financialSummary, isLoading: summaryLoading } = useFinancialSummary({\n    type: filters.type,\n    project_id: filters.project_id,\n    date_from: filters.date_from,\n    date_to: filters.date_to,\n  });\n  const { data: projectsResponse } = useProjects({});\n\n  const transactions = transactionsResponse?.transactions || [];\n  const projects = projectsResponse?.items || [];\n\n  if (!canViewFinances) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <h1 className=\"text-3xl font-bold tracking-tight\">Financial Tracking</h1>\n        </div>\n        <Card>\n          <CardContent className=\"py-8\">\n            <div className=\"text-center text-muted-foreground\">\n              You don't have permission to view financial information.\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (transactionsError) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <h1 className=\"text-3xl font-bold tracking-tight\">Financial Tracking</h1>\n        </div>\n        <Card>\n          <CardContent className=\"py-8\">\n            <div className=\"text-center text-muted-foreground\">\n              Failed to load financial data. Please try again later.\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Financial Tracking</h1>\n          <p className=\"text-muted-foreground\">\n            Monitor expenses, income, and financial performance across projects\n          </p>\n        </div>\n        {canManageFinances && (\n          <Button onClick={() => router.push(\"/dashboard/financial/new\")}>\n            <Plus className=\"mr-2 h-4 w-4\" />\n            New Transaction\n          </Button>\n        )}\n      </div>\n\n      {/* Financial Summary Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Income</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {summaryLoading ? (\n              <div className=\"h-6 bg-muted animate-pulse rounded\" />\n            ) : (\n              <div className=\"text-2xl font-bold text-green-600\">\n                {formatCurrency(financialSummary?.total_income || 0, financialSummary?.currency)}\n              </div>\n            )}\n            <p className=\"text-xs text-muted-foreground\">\n              {financialSummary?.period ? `From ${financialSummary.period.from} to ${financialSummary.period.to}` : 'This period'}\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Expenses</CardTitle>\n            <TrendingDown className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {summaryLoading ? (\n              <div className=\"h-6 bg-muted animate-pulse rounded\" />\n            ) : (\n              <div className=\"text-2xl font-bold text-red-600\">\n                {formatCurrency(financialSummary?.total_expenses || 0, financialSummary?.currency)}\n              </div>\n            )}\n            <p className=\"text-xs text-muted-foreground\">\n              {financialSummary?.period ? `From ${financialSummary.period.from} to ${financialSummary.period.to}` : 'This period'}\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Net Profit</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {summaryLoading ? (\n              <div className=\"h-6 bg-muted animate-pulse rounded\" />\n            ) : (\n              <div className={`text-2xl font-bold ${(financialSummary?.net_profit || 0) >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                {formatCurrency(financialSummary?.net_profit || 0, financialSummary?.currency)}\n              </div>\n            )}\n            <p className=\"text-xs text-muted-foreground\">\n              Income minus expenses\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Pending Invoices</CardTitle>\n            <Receipt className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {summaryLoading ? (\n              <div className=\"h-6 bg-muted animate-pulse rounded\" />\n            ) : (\n              <div className=\"text-2xl font-bold\">\n                {financialSummary?.pending_invoices || 0}\n              </div>\n            )}\n            <p className=\"text-xs text-red-600\">\n              {financialSummary?.overdue_invoices || 0} overdue\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Tabs defaultValue=\"transactions\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"transactions\">All Transactions</TabsTrigger>\n          <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\n          <TabsTrigger value=\"reports\">Reports</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"transactions\" className=\"space-y-6\">\n          {/* Filters */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Filter Transactions</CardTitle>\n              <CardDescription>\n                Search and filter transactions by various criteria\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div className=\"flex flex-col space-y-4 md:flex-row md:space-y-0 md:space-x-4\">\n                  <div className=\"flex-1\">\n                    <div className=\"relative\">\n                      <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                      <Input\n                        placeholder=\"Search by description, reference, or notes...\"\n                        value={searchQuery}\n                        onChange={(e) => setSearchQuery(e.target.value)}\n                        className=\"pl-8\"\n                      />\n                    </div>\n                  </div>\n\n                  <Select value={typeFilter} onValueChange={(value: \"all\" | \"income\" | \"expense\" | \"transfer\") => setTypeFilter(value)}>\n                    <SelectTrigger className=\"w-48\">\n                      <SelectValue placeholder=\"Filter by type\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All Types</SelectItem>\n                      <SelectItem value=\"income\">Income</SelectItem>\n                      <SelectItem value=\"expense\">Expense</SelectItem>\n                      <SelectItem value=\"transfer\">Transfer</SelectItem>\n                    </SelectContent>\n                  </Select>\n\n                  <Select value={categoryFilter} onValueChange={(value: TransactionCategory | \"all\") => setCategoryFilter(value)}>\n                    <SelectTrigger className=\"w-48\">\n                      <SelectValue placeholder=\"Filter by category\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All Categories</SelectItem>\n                      {TRANSACTION_CATEGORIES.map((category) => (\n                        <SelectItem key={category} value={category}>\n                          {getCategoryLabel(category)}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"flex flex-col space-y-4 md:flex-row md:space-y-0 md:space-x-4\">\n                  <Select value={paymentMethodFilter} onValueChange={(value: PaymentMethod | \"all\") => setPaymentMethodFilter(value)}>\n                    <SelectTrigger className=\"w-48\">\n                      <SelectValue placeholder=\"Payment method\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All Methods</SelectItem>\n                      {PAYMENT_METHODS.map((method) => (\n                        <SelectItem key={method} value={method}>\n                          {getPaymentMethodLabel(method)}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n\n                  <Select value={projectFilter} onValueChange={setProjectFilter}>\n                    <SelectTrigger className=\"w-48\">\n                      <SelectValue placeholder=\"Filter by project\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All Projects</SelectItem>\n                      {projects.map((project) => (\n                        <SelectItem key={project.id} value={project.id}>\n                          {project.name}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n\n                  <div className=\"flex space-x-2\">\n                    <Input\n                      type=\"date\"\n                      placeholder=\"From date\"\n                      value={dateFrom}\n                      onChange={(e) => setDateFrom(e.target.value)}\n                      className=\"w-40\"\n                    />\n                    <Input\n                      type=\"date\"\n                      placeholder=\"To date\"\n                      value={dateTo}\n                      onChange={(e) => setDateTo(e.target.value)}\n                      className=\"w-40\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Transactions Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <CreditCard className=\"h-5 w-5\" />\n                Transactions ({transactionsResponse?.total || 0})\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {transactionsLoading ? (\n                <div className=\"space-y-4\">\n                  {[...Array(5)].map((_, i) => (\n                    <div key={i} className=\"flex space-x-4\">\n                      <div className=\"h-4 bg-muted animate-pulse rounded flex-1\" />\n                      <div className=\"h-4 bg-muted animate-pulse rounded w-20\" />\n                      <div className=\"h-4 bg-muted animate-pulse rounded w-16\" />\n                    </div>\n                  ))}\n                </div>\n              ) : transactions.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <CreditCard className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                  <h3 className=\"mt-2 text-sm font-semibold\">No transactions found</h3>\n                  <p className=\"mt-1 text-sm text-muted-foreground\">\n                    {searchQuery || typeFilter !== \"all\" || categoryFilter !== \"all\" || projectFilter !== \"all\"\n                      ? \"No transactions match your current filters.\"\n                      : \"Get started by creating your first transaction.\"}\n                  </p>\n                  {canManageFinances && (\n                    <Button\n                      className=\"mt-4\"\n                      onClick={() => router.push(\"/dashboard/financial/new\")}\n                    >\n                      <Plus className=\"mr-2 h-4 w-4\" />\n                      Create Transaction\n                    </Button>\n                  )}\n                </div>\n              ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Date & Description</TableHead>\n                      <TableHead>Type & Category</TableHead>\n                      <TableHead>Amount</TableHead>\n                      <TableHead>Payment Method</TableHead>\n                      <TableHead>Project</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead className=\"w-[100px]\">Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {transactions.map((transaction) => (\n                      <TableRow key={transaction.id}>\n                        <TableCell>\n                          <div>\n                            <div className=\"font-medium\">\n                              {new Date(transaction.transaction_date).toLocaleDateString()}\n                            </div>\n                            <div className=\"text-sm text-muted-foreground\">\n                              {transaction.description}\n                            </div>\n                            {transaction.reference_number && (\n                              <div className=\"text-xs text-muted-foreground\">\n                                Ref: {transaction.reference_number}\n                              </div>\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"space-y-1\">\n                            <Badge variant={transaction.type === 'income' ? 'default' : transaction.type === 'expense' ? 'destructive' : 'secondary'}>\n                              {transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1)}\n                            </Badge>\n                            <div className=\"text-sm\">\n                              <Badge variant=\"outline\" className={getCategoryColor(transaction.category)}>\n                                {getCategoryLabel(transaction.category)}\n                              </Badge>\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className={`font-semibold ${getTransactionTypeColor(transaction.type)}`}>\n                            {transaction.type === 'expense' ? '-' : '+'}\n                            {formatCurrency(transaction.amount, transaction.currency)}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"text-sm\">\n                            {getPaymentMethodLabel(transaction.payment_method)}\n                          </div>\n                          {transaction.receipt_url && (\n                            <div className=\"text-xs text-green-600\">\n                              Has receipt\n                            </div>\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"text-sm\">\n                            {transaction.project_name || 'General'}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          {transaction.approved_at ? (\n                            <Badge variant=\"default\" className=\"bg-green-100 text-green-800\">\n                              Approved\n                            </Badge>\n                          ) : (\n                            <Badge variant=\"secondary\" className=\"bg-yellow-100 text-yellow-800\">\n                              Pending\n                            </Badge>\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          <DropdownMenu>\n                            <DropdownMenuTrigger asChild>\n                              <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                                <span className=\"sr-only\">Open menu</span>\n                                <Filter className=\"h-4 w-4\" />\n                              </Button>\n                            </DropdownMenuTrigger>\n                            <DropdownMenuContent align=\"end\">\n                              <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                              <DropdownMenuItem\n                                onClick={() => router.push(`/dashboard/financial/${transaction.id}`)}\n                              >\n                                <Eye className=\"mr-2 h-4 w-4\" />\n                                View Details\n                              </DropdownMenuItem>\n                              {canManageFinances && (\n                                <>\n                                  <DropdownMenuItem\n                                    onClick={() => router.push(`/dashboard/financial/${transaction.id}/edit`)}\n                                  >\n                                    <Edit className=\"mr-2 h-4 w-4\" />\n                                    Edit\n                                  </DropdownMenuItem>\n                                  <DropdownMenuSeparator />\n                                  <DropdownMenuItem className=\"text-red-600\">\n                                    <Trash2 className=\"mr-2 h-4 w-4\" />\n                                    Delete\n                                  </DropdownMenuItem>\n                                </>\n                              )}\n                            </DropdownMenuContent>\n                          </DropdownMenu>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"analytics\" className=\"space-y-6\">\n          <div className=\"grid gap-4 md:grid-cols-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <PieChart className=\"h-5 w-5\" />\n                  Expenses by Category\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                {summaryLoading ? (\n                  <div className=\"h-64 bg-muted animate-pulse rounded\" />\n                ) : (\n                  <div className=\"space-y-4\">\n                    {(financialSummary?.by_category || []).slice(0, 8).map((item, index) => (\n                      <div key={index} className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Badge variant=\"outline\" className={getCategoryColor(item.category)}>\n                            {getCategoryLabel(item.category)}\n                          </Badge>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"font-semibold\">\n                            {formatCurrency(item.amount, financialSummary.currency)}\n                          </div>\n                          <div className=\"text-sm text-muted-foreground\">\n                            {item.percentage.toFixed(1)}%\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <BarChart3 className=\"h-5 w-5\" />\n                  Monthly Trend\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                {summaryLoading ? (\n                  <div className=\"h-64 bg-muted animate-pulse rounded\" />\n                ) : (\n                  <div className=\"space-y-4\">\n                    {(financialSummary?.monthly_trend || []).slice(-6).map((item, index) => (\n                      <div key={index} className=\"space-y-2\">\n                        <div className=\"flex justify-between text-sm\">\n                          <span>{item.month}</span>\n                          <span className={item.net >= 0 ? 'text-green-600' : 'text-red-600'}>\n                            {formatCurrency(item.net, financialSummary.currency)}\n                          </span>\n                        </div>\n                        <div className=\"space-y-1\">\n                          <div className=\"flex items-center space-x-2 text-xs\">\n                            <div className=\"w-2 h-2 bg-green-500 rounded\"></div>\n                            <span>Income: {formatCurrency(item.income, financialSummary.currency)}</span>\n                          </div>\n                          <div className=\"flex items-center space-x-2 text-xs\">\n                            <div className=\"w-2 h-2 bg-red-500 rounded\"></div>\n                            <span>Expenses: {formatCurrency(item.expenses, financialSummary.currency)}</span>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"reports\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Financial Reports</CardTitle>\n              <CardDescription>\n                Generate detailed financial reports and export data\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n                <Button variant=\"outline\" className=\"h-20 flex-col\">\n                  <Receipt className=\"h-6 w-6 mb-2\" />\n                  Expense Report\n                </Button>\n                <Button variant=\"outline\" className=\"h-20 flex-col\">\n                  <TrendingUp className=\"h-6 w-6 mb-2\" />\n                  Profit & Loss\n                </Button>\n                <Button variant=\"outline\" className=\"h-20 flex-col\">\n                  <BarChart3 className=\"h-6 w-6 mb-2\" />\n                  Budget Analysis\n                </Button>\n                <Button variant=\"outline\" className=\"h-20 flex-col\">\n                  <Calendar className=\"h-6 w-6 mb-2\" />\n                  Monthly Summary\n                </Button>\n                <Button variant=\"outline\" className=\"h-20 flex-col\">\n                  <DollarSign className=\"h-6 w-6 mb-2\" />\n                  Cash Flow\n                </Button>\n                <Button variant=\"outline\" className=\"h-20 flex-col\">\n                  <PieChart className=\"h-6 w-6 mb-2\" />\n                  Category Breakdown\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}