{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n} from \"lucide-react\"\nimport { DayPicker, getDefaultClassNames } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  const defaultClassNames = getDefaultClassNames()\n\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: cn(\n          \"relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected].day-range-end)]:rounded-r-md\",\n          props.mode === \"range\"\n            ? \"[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md\"\n            : \"[&:has([aria-selected])]:rounded-md\"\n        ),\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-8 w-8 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_start: \"day-range-start\",\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeftIcon className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRightIcon className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }"],"names":[],"mappings":";;;;;AAGA;AAAA;AAIA;AAAA;AAEA;AACA;AAVA;;;;;;AAcA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,MAAM,oBAAoB,IAAA,gNAAoB;IAE9C,qBACE,8OAAC,+KAAS;QACR,iBAAiB;QACjB,WAAW,IAAA,yHAAE,EAAC,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,IAAA,yHAAE,EACZ,IAAA,oJAAc,EAAC;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM,IAAA,yHAAE,EACN,qNACA,MAAM,IAAI,KAAK,UACX,yKACA;YAEN,KAAK,IAAA,yHAAE,EACL,IAAA,oJAAc,EAAC;gBAAE,SAAS;YAAQ,IAClC;YAEF,iBAAiB;YACjB,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,GAAG,OAAO,iBAAK,8OAAC,2OAAe;oBAAC,WAAU;;;;;;YACvD,WAAW,CAAC,EAAE,GAAG,OAAO,iBAAK,8OAAC,8OAAgB;oBAAC,WAAU;;;;;;QAC3D;QACC,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,4KAAsB;QACrB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,iLAA2B;YAC1B,WAAW,IAAA,yHAAE,EAAC;sBAEd,cAAA,8OAAC,6MAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,4KAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/app/%28dashboard%29/dashboard/calendar/page.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { format, isToday, isSameDay, startOfMonth, endOfMonth, eachDayOfInterval, parseISO } from \"date-fns\"\nimport { Calendar as CalendarIcon, Plus, Filter, Users, Briefcase, Clock, MapPin } from \"lucide-react\"\nimport { useQuery } from \"@tanstack/react-query\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Calendar } from \"@/components/ui/calendar\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { useAuth } from \"@/hooks/use-auth\"\n\nimport type {\n  WorkEntry,\n  Project,\n  HouseAppointment,\n  MaintenanceRecord,\n  PaymentSchedule,\n  WorkEntryFilters,\n  UUID\n} from \"@/types\"\n\n// Calendar event types\ntype CalendarEventType = 'work_entry' | 'project_deadline' | 'appointment' | 'maintenance' | 'payment_due'\n\ninterface CalendarEvent {\n  id: string\n  title: string\n  date: Date\n  type: CalendarEventType\n  description?: string\n  project?: Project\n  workEntry?: WorkEntry\n  appointment?: HouseAppointment\n  maintenance?: MaintenanceRecord\n  payment?: PaymentSchedule\n  priority: 'low' | 'medium' | 'high'\n  status: 'pending' | 'in_progress' | 'completed' | 'cancelled'\n}\n\ninterface CalendarFilters {\n  projects: UUID[]\n  eventTypes: CalendarEventType[]\n  crews: UUID[]\n  dateRange: 'week' | 'month' | 'quarter'\n}\n\nexport default function CalendarPage() {\n  const { user } = useAuth()\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(new Date())\n  const [view, setView] = useState<'month' | 'week' | 'day'>('month')\n  const [filters, setFilters] = useState<CalendarFilters>({\n    projects: [],\n    eventTypes: ['work_entry', 'project_deadline', 'appointment', 'maintenance', 'payment_due'],\n    crews: [],\n    dateRange: 'month'\n  })\n  const [showFilters, setShowFilters] = useState(false)\n\n  // Fetch calendar events from multiple sources\n  const { data: events = [], isLoading } = useQuery({\n    queryKey: ['calendar-events', filters, selectedDate],\n    queryFn: async (): Promise<CalendarEvent[]> => {\n      const currentDate = selectedDate || new Date()\n      const startDate = format(startOfMonth(currentDate), 'yyyy-MM-dd')\n      const endDate = format(endOfMonth(currentDate), 'yyyy-MM-dd')\n\n      const allEvents: CalendarEvent[] = []\n\n      try {\n        // Fetch work entries\n        if (filters.eventTypes.includes('work_entry')) {\n          const workEntriesResponse = await fetch(`/api/work-entries?date_from=${startDate}&date_to=${endDate}&page=1&per_page=100`)\n          if (workEntriesResponse.ok) {\n            const workEntriesData = await workEntriesResponse.json()\n            const workEntryEvents: CalendarEvent[] = workEntriesData.items?.map((entry: WorkEntry) => ({\n              id: `work_${entry.id}`,\n              title: `${entry.stage_code?.replace('stage_', 'Stage ').replace('_', ' ') || 'Work Entry'} - ${entry.meters_done_m || 0}m`,\n              date: entry.date ? parseISO(entry.date) : new Date(),\n              type: 'work_entry' as CalendarEventType,\n              description: `${entry.notes || 'Work entry'} - ${entry.user?.first_name || ''} ${entry.user?.last_name || ''}`,\n              workEntry: entry,\n              priority: entry.approved_by ? 'low' : 'medium',\n              status: entry.approved_by ? 'completed' : 'pending'\n            })) || []\n            allEvents.push(...workEntryEvents)\n          }\n        }\n\n        // Fetch project deadlines\n        if (filters.eventTypes.includes('project_deadline')) {\n          const projectsResponse = await fetch('/api/projects?page=1&per_page=100')\n          if (projectsResponse.ok) {\n            const projectsData = await projectsResponse.json()\n            const projectDeadlines: CalendarEvent[] = projectsData.projects?.filter((project: Project) =>\n              project.end_date_plan &&\n              parseISO(project.end_date_plan) >= parseISO(startDate) &&\n              parseISO(project.end_date_plan) <= parseISO(endDate)\n            ).map((project: Project) => ({\n              id: `project_${project.id}`,\n              title: `${project.name} Deadline`,\n              date: parseISO(project.end_date_plan!),\n              type: 'project_deadline' as CalendarEventType,\n              description: `Project completion deadline - ${project.customer}`,\n              project,\n              priority: project.status === 'active' ? 'high' : 'medium',\n              status: project.status === 'closed' ? 'completed' : 'pending'\n            })) || []\n            allEvents.push(...projectDeadlines)\n          }\n        }\n\n        // Add mock events for other types (since these APIs might not exist yet)\n        if (filters.eventTypes.includes('appointment')) {\n          allEvents.push({\n            id: 'appointment_1',\n            title: 'House Connection - Schmidt',\n            date: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000),\n            type: 'appointment',\n            description: 'Customer: Schmidt, 14:00-16:00',\n            priority: 'medium',\n            status: 'pending'\n          })\n        }\n\n        if (filters.eventTypes.includes('maintenance')) {\n          allEvents.push({\n            id: 'maintenance_1',\n            title: 'Equipment Maintenance',\n            date: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n            type: 'maintenance',\n            description: 'Excavator service due',\n            priority: 'medium',\n            status: 'pending'\n          })\n        }\n\n        if (filters.eventTypes.includes('payment_due')) {\n          allEvents.push({\n            id: 'payment_1',\n            title: 'Invoice Payment Due',\n            date: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),\n            type: 'payment_due',\n            description: 'Project Alpha invoice payment',\n            priority: 'high',\n            status: 'pending'\n          })\n        }\n\n      } catch (error) {\n        console.error('Error fetching calendar events:', error)\n        // Return fallback mock events\n        return [\n          {\n            id: 'fallback_1',\n            title: 'Sample Work Entry',\n            date: new Date(),\n            type: 'work_entry',\n            description: 'Fallback data - check API connection',\n            priority: 'medium',\n            status: 'pending'\n          }\n        ]\n      }\n\n      return allEvents.sort((a, b) => a.date.getTime() - b.date.getTime())\n    }\n  })\n\n  // Fetch projects for filter\n  const { data: projects = [] } = useQuery({\n    queryKey: ['projects-list'],\n    queryFn: async (): Promise<Project[]> => {\n      const response = await fetch('/api/projects')\n      if (!response.ok) throw new Error('Failed to fetch projects')\n      const data = await response.json()\n      return data.projects || []\n    }\n  })\n\n  // Get events for a specific date\n  const getEventsForDate = (date: Date): CalendarEvent[] => {\n    return events.filter(event => isSameDay(event.date, date))\n  }\n\n  // Get selected date events\n  const selectedDateEvents = selectedDate ? getEventsForDate(selectedDate) : []\n\n  // Event type configuration\n  const eventTypeConfig = {\n    work_entry: {\n      label: 'Work Entries',\n      color: 'bg-blue-500',\n      icon: Briefcase\n    },\n    project_deadline: {\n      label: 'Project Deadlines',\n      color: 'bg-red-500',\n      icon: Clock\n    },\n    appointment: {\n      label: 'Appointments',\n      color: 'bg-green-500',\n      icon: Users\n    },\n    maintenance: {\n      label: 'Maintenance',\n      color: 'bg-yellow-500',\n      icon: MapPin\n    },\n    payment_due: {\n      label: 'Payments Due',\n      color: 'bg-purple-500',\n      icon: CalendarIcon\n    }\n  }\n\n  // Priority colors\n  const priorityColors = {\n    low: 'border-gray-300',\n    medium: 'border-yellow-400',\n    high: 'border-red-500'\n  }\n\n  // Status colors\n  const statusColors = {\n    pending: 'bg-gray-100 text-gray-700',\n    in_progress: 'bg-blue-100 text-blue-700',\n    completed: 'bg-green-100 text-green-700',\n    cancelled: 'bg-red-100 text-red-700'\n  }\n\n  const renderEventCard = (event: CalendarEvent) => {\n    const config = eventTypeConfig[event.type]\n    const IconComponent = config.icon\n\n    return (\n      <Card key={event.id} className={cn(\"mb-2 cursor-pointer hover:shadow-md transition-shadow\", priorityColors[event.priority])}>\n        <CardContent className=\"p-3\">\n          <div className=\"flex items-start gap-2\">\n            <div className={cn(\"w-3 h-3 rounded-full mt-1\", config.color)} />\n            <div className=\"flex-1\">\n              <div className=\"flex items-center gap-2\">\n                <IconComponent className=\"h-4 w-4 text-muted-foreground\" />\n                <span className=\"font-medium text-sm\">{event.title}</span>\n                <Badge variant=\"secondary\" className={statusColors[event.status]}>\n                  {event.status.replace('_', ' ')}\n                </Badge>\n              </div>\n              {event.description && (\n                <p className=\"text-xs text-muted-foreground mt-1\">{event.description}</p>\n              )}\n              <p className=\"text-xs text-muted-foreground\">\n                {format(event.date, 'MMM d, HH:mm')}\n              </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Calendar</h1>\n          <p className=\"text-muted-foreground\">\n            Manage work schedules, deadlines, and appointments\n          </p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <Button variant=\"outline\" onClick={() => setShowFilters(!showFilters)}>\n            <Filter className=\"h-4 w-4\" />\n            Filters\n          </Button>\n          <Button>\n            <Plus className=\"h-4 w-4\" />\n            Add Event\n          </Button>\n        </div>\n      </div>\n\n      {/* Filters Panel */}\n      {showFilters && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Filters</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              {/* Event Types */}\n              <div>\n                <label className=\"text-sm font-medium mb-2 block\">Event Types</label>\n                <div className=\"space-y-2\">\n                  {Object.entries(eventTypeConfig).map(([type, config]) => (\n                    <div key={type} className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        id={type}\n                        checked={filters.eventTypes.includes(type as CalendarEventType)}\n                        onCheckedChange={(checked) => {\n                          if (checked) {\n                            setFilters(prev => ({\n                              ...prev,\n                              eventTypes: [...prev.eventTypes, type as CalendarEventType]\n                            }))\n                          } else {\n                            setFilters(prev => ({\n                              ...prev,\n                              eventTypes: prev.eventTypes.filter(t => t !== type)\n                            }))\n                          }\n                        }}\n                      />\n                      <label htmlFor={type} className=\"text-sm flex items-center gap-2\">\n                        <div className={cn(\"w-3 h-3 rounded-full\", config.color)} />\n                        {config.label}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Projects */}\n              <div>\n                <label className=\"text-sm font-medium mb-2 block\">Projects</label>\n                <Select>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"All projects\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Projects</SelectItem>\n                    {projects.map(project => (\n                      <SelectItem key={project.id} value={project.id}>\n                        {project.name}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              {/* Date Range */}\n              <div>\n                <label className=\"text-sm font-medium mb-2 block\">View</label>\n                <Select value={view} onValueChange={(value: 'month' | 'week' | 'day') => setView(value)}>\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"day\">Day View</SelectItem>\n                    <SelectItem value=\"week\">Week View</SelectItem>\n                    <SelectItem value=\"month\">Month View</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Main Content */}\n      <div className=\"flex flex-col lg:grid lg:grid-cols-3 gap-6\">\n        {/* Mobile/Tablet: Stack layout, Desktop: Grid layout */}\n\n        {/* Calendar */}\n        <Card className=\"lg:col-span-2 order-1 lg:order-1\">\n          <CardHeader>\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2\">\n              <CardTitle className=\"flex items-center gap-2\">\n                <CalendarIcon className=\"h-5 w-5\" />\n                {selectedDate ? format(selectedDate, 'MMMM yyyy') : 'Calendar'}\n              </CardTitle>\n              {/* Mobile view selector */}\n              <div className=\"sm:hidden\">\n                <Select value={view} onValueChange={(value: 'month' | 'week' | 'day') => setView(value)}>\n                  <SelectTrigger className=\"w-32\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"day\">Day</SelectItem>\n                    <SelectItem value=\"week\">Week</SelectItem>\n                    <SelectItem value=\"month\">Month</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n          </CardHeader>\n          <CardContent>\n            {/* Responsive calendar container */}\n            <div className=\"w-full overflow-hidden\">\n              <Calendar\n                mode=\"single\"\n                selected={selectedDate}\n                onSelect={setSelectedDate}\n                className=\"rounded-md border w-full mx-auto max-w-full\"\n                modifiers={{\n                  hasEvents: (date) => getEventsForDate(date).length > 0,\n                  today: isToday\n                }}\n                modifiersStyles={{\n                  hasEvents: {\n                    backgroundColor: 'rgba(59, 130, 246, 0.1)',\n                    border: '1px solid rgba(59, 130, 246, 0.3)'\n                  }\n                }}\n              />\n            </div>\n\n            {/* Event indicators legend */}\n            <div className=\"mt-4 pt-4 border-t\">\n              <p className=\"text-sm font-medium mb-2\">Legend</p>\n              <div className=\"grid grid-cols-2 sm:flex sm:flex-wrap gap-2 sm:gap-3\">\n                {Object.entries(eventTypeConfig).map(([type, config]) => (\n                  <div key={type} className=\"flex items-center gap-1 text-xs\">\n                    <div className={cn(\"w-2 h-2 rounded-full flex-shrink-0\", config.color)} />\n                    <span className=\"truncate\">{config.label}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Events for Selected Date */}\n        <Card className=\"order-2 lg:order-2\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-lg sm:text-xl\">\n              {selectedDate ? format(selectedDate, 'MMM d, yyyy') : 'Select a date'}\n            </CardTitle>\n            <CardDescription>\n              {selectedDateEvents.length} event{selectedDateEvents.length !== 1 ? 's' : ''} scheduled\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {isLoading ? (\n              <div className=\"space-y-3\">\n                {[1, 2, 3].map(i => (\n                  <div key={i} className=\"animate-pulse\">\n                    <div className=\"h-16 bg-muted rounded-md\" />\n                  </div>\n                ))}\n              </div>\n            ) : selectedDateEvents.length > 0 ? (\n              <div className=\"space-y-2 max-h-[400px] lg:max-h-[600px] overflow-y-auto\">\n                {selectedDateEvents.map(renderEventCard)}\n              </div>\n            ) : (\n              <div className=\"text-center py-8 text-muted-foreground\">\n                <CalendarIcon className=\"h-8 w-8 sm:h-12 sm:w-12 mx-auto mb-4 opacity-50\" />\n                <p className=\"text-sm sm:text-base\">No events scheduled for this date</p>\n                <Button variant=\"outline\" size=\"sm\" className=\"mt-2\">\n                  <Plus className=\"h-4 w-4\" />\n                  <span className=\"hidden sm:inline\">Add Event</span>\n                  <span className=\"sm:hidden\">Add</span>\n                </Button>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Recent Events */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Upcoming Events</CardTitle>\n          <CardDescription>Next 7 days</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Tabs defaultValue=\"all\" className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-5\">\n              <TabsTrigger value=\"all\">All</TabsTrigger>\n              <TabsTrigger value=\"work_entry\">Work</TabsTrigger>\n              <TabsTrigger value=\"appointment\">Appointments</TabsTrigger>\n              <TabsTrigger value=\"project_deadline\">Deadlines</TabsTrigger>\n              <TabsTrigger value=\"maintenance\">Maintenance</TabsTrigger>\n            </TabsList>\n\n            {Object.entries(eventTypeConfig).map(([type, config]) => (\n              <TabsContent key={type} value={type} className=\"mt-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {events\n                    .filter(event => event.type === type)\n                    .slice(0, 6)\n                    .map(renderEventCard)}\n                </div>\n              </TabsContent>\n            ))}\n\n            <TabsContent value=\"all\" className=\"mt-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {events.slice(0, 9).map(renderEventCard)}\n              </div>\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}