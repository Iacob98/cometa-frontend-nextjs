{"version":3,"sources":["turbopack:///[project]/src/app/(dashboard)/dashboard/work-entries/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Plus, Search, Filter, MapPin, Calendar, User, Eye, CheckCircle, Clock, Building2, Camera, Ruler } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\nimport { useWorkEntries, usePendingApprovals, useApproveWorkEntry } from \"@/hooks/use-work-entries\";\nimport { useAuth, usePermissions } from \"@/hooks/use-auth\";\nimport type { StageCode, WorkEntryFilters } from \"@/types\";\n\nexport default function WorkEntriesPage() {\n  const router = useRouter();\n  const { user } = useAuth();\n  const { canApproveWork, canManageWork } = usePermissions();\n  const approveWorkEntry = useApproveWorkEntry();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [stageFilter, setStageFilter] = useState<StageCode | \"all\">(\"all\");\n  const [approvalFilter, setApprovalFilter] = useState<\"all\" | \"approved\" | \"pending\">(\"all\");\n\n  const filters: WorkEntryFilters = {\n    stage_code: stageFilter === \"all\" ? undefined : stageFilter,\n    approved: approvalFilter === \"all\" ? undefined : approvalFilter === \"approved\",\n    page: 1,\n    per_page: 20,\n  };\n\n  const { data: workEntriesResponse, isLoading, error } = useWorkEntries(filters);\n  const { data: pendingApprovalsResponse } = usePendingApprovals();\n\n  const workEntries = workEntriesResponse?.items || [];\n  const pendingApprovals = pendingApprovalsResponse?.items || [];\n\n  const handleApproveWorkEntry = async (workEntryId: string) => {\n    try {\n      await approveWorkEntry.mutateAsync(workEntryId);\n    } catch (error) {\n      console.error(\"Failed to approve work entry:\", error);\n    }\n  };\n\n  const getStageLabel = (stageCode: StageCode) => {\n    const stageLabels: Record<StageCode, string> = {\n      stage_1_marking: \"Marking\",\n      stage_2_excavation: \"Excavation\",\n      stage_3_conduit: \"Conduit Installation\",\n      stage_4_cable_pulling: \"Cable Pulling\",\n      stage_5_closure: \"Closure\",\n      stage_6_testing: \"Testing\",\n      stage_7_backfill: \"Backfilling\",\n      stage_8_restoration: \"Surface Restoration\",\n      stage_9_documentation: \"Documentation\",\n      stage_10_quality_check: \"Quality Check\",\n    };\n    return stageLabels[stageCode] || stageCode;\n  };\n\n  const getStageBadgeVariant = (stageCode: StageCode) => {\n    if (!stageCode) return \"secondary\";\n    if (stageCode.includes(\"marking\") || stageCode.includes(\"excavation\")) return \"secondary\";\n    if (stageCode.includes(\"cable\") || stageCode.includes(\"conduit\")) return \"default\";\n    if (stageCode.includes(\"testing\") || stageCode.includes(\"quality\")) return \"outline\";\n    return \"secondary\";\n  };\n\n  if (error) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <h1 className=\"text-3xl font-bold tracking-tight\">Work Entries</h1>\n        </div>\n        <Card>\n          <CardContent className=\"py-8\">\n            <div className=\"text-center text-muted-foreground\">\n              Failed to load work entries. Please try again later.\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Work Entries</h1>\n          <p className=\"text-muted-foreground\">\n            Track and manage field work progress across all projects\n          </p>\n        </div>\n        <Button onClick={() => router.push(\"/dashboard/work-entries/new\")}>\n          <Plus className=\"mr-2 h-4 w-4\" />\n          New Work Entry\n        </Button>\n      </div>\n\n      <Tabs defaultValue=\"all\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"all\">All Work Entries</TabsTrigger>\n          {canApproveWork && (\n            <TabsTrigger value=\"pending\">\n              Pending Approval ({pendingApprovals.length})\n            </TabsTrigger>\n          )}\n          <TabsTrigger value=\"my-work\">My Work</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"all\" className=\"space-y-6\">\n          {/* Filters */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Filter Work Entries</CardTitle>\n              <CardDescription>\n                Search and filter work entries by various criteria\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex flex-col space-y-4 md:flex-row md:space-y-0 md:space-x-4\">\n                <div className=\"flex-1\">\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                    <Input\n                      placeholder=\"Search by project, notes, or worker...\"\n                      value={searchQuery}\n                      onChange={(e) => setSearchQuery(e.target.value)}\n                      className=\"pl-8\"\n                    />\n                  </div>\n                </div>\n                <Select value={stageFilter} onValueChange={(value: StageCode | \"all\") => setStageFilter(value)}>\n                  <SelectTrigger className=\"w-48\">\n                    <SelectValue placeholder=\"Filter by stage\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Stages</SelectItem>\n                    <SelectItem value=\"stage_1_marking\">Marking</SelectItem>\n                    <SelectItem value=\"stage_2_excavation\">Excavation</SelectItem>\n                    <SelectItem value=\"stage_3_conduit\">Conduit Installation</SelectItem>\n                    <SelectItem value=\"stage_4_cable_pulling\">Cable Pulling</SelectItem>\n                    <SelectItem value=\"stage_5_closure\">Closure</SelectItem>\n                    <SelectItem value=\"stage_6_testing\">Testing</SelectItem>\n                    <SelectItem value=\"stage_7_backfill\">Backfilling</SelectItem>\n                    <SelectItem value=\"stage_8_restoration\">Surface Restoration</SelectItem>\n                    <SelectItem value=\"stage_9_documentation\">Documentation</SelectItem>\n                    <SelectItem value=\"stage_10_quality_check\">Quality Check</SelectItem>\n                  </SelectContent>\n                </Select>\n                <Select value={approvalFilter} onValueChange={(value: \"all\" | \"approved\" | \"pending\") => setApprovalFilter(value)}>\n                  <SelectTrigger className=\"w-48\">\n                    <SelectValue placeholder=\"Filter by approval\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Status</SelectItem>\n                    <SelectItem value=\"approved\">Approved</SelectItem>\n                    <SelectItem value=\"pending\">Pending Approval</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Work Entries Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Building2 className=\"h-5 w-5\" />\n                Work Entries ({workEntriesResponse?.total || 0})\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {isLoading ? (\n                <div className=\"space-y-4\">\n                  {[...Array(5)].map((_, i) => (\n                    <div key={i} className=\"flex space-x-4\">\n                      <div className=\"h-4 bg-muted animate-pulse rounded flex-1\" />\n                      <div className=\"h-4 bg-muted animate-pulse rounded w-20\" />\n                      <div className=\"h-4 bg-muted animate-pulse rounded w-16\" />\n                    </div>\n                  ))}\n                </div>\n              ) : workEntries.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Building2 className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                  <h3 className=\"mt-2 text-sm font-semibold\">No work entries found</h3>\n                  <p className=\"mt-1 text-sm text-muted-foreground\">\n                    {searchQuery || stageFilter !== \"all\" || approvalFilter !== \"all\"\n                      ? \"No work entries match your current filters.\"\n                      : \"Get started by creating your first work entry.\"}\n                  </p>\n                  <Button\n                    className=\"mt-4\"\n                    onClick={() => router.push(\"/dashboard/work-entries/new\")}\n                  >\n                    <Plus className=\"mr-2 h-4 w-4\" />\n                    Create Work Entry\n                  </Button>\n                </div>\n              ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Date & Worker</TableHead>\n                      <TableHead>Stage & Progress</TableHead>\n                      <TableHead>Project</TableHead>\n                      <TableHead>Location</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Photos</TableHead>\n                      <TableHead className=\"w-[100px]\">Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {workEntries.map((entry) => (\n                      <TableRow key={entry.id}>\n                        <TableCell>\n                          <div>\n                            <div className=\"font-medium\">\n                              {new Date(entry.date).toLocaleDateString()}\n                            </div>\n                            <div className=\"text-sm text-muted-foreground flex items-center space-x-1\">\n                              <User className=\"h-3 w-3\" />\n                              <span>{entry.user?.full_name || \"Unknown\"}</span>\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"space-y-1\">\n                            <Badge variant={getStageBadgeVariant(entry.stage_code)}>\n                              {getStageLabel(entry.stage_code)}\n                            </Badge>\n                            <div className=\"text-sm text-muted-foreground flex items-center space-x-1\">\n                              <Ruler className=\"h-3 w-3\" />\n                              <span>{entry.meters_done_m}m</span>\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"text-sm\">\n                            Project {entry.project_id}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"text-sm flex items-center space-x-1\">\n                            <MapPin className=\"h-3 w-3 text-muted-foreground\" />\n                            <span>\n                              {entry.cut_id ? `Cut ${entry.cut_id}` :\n                               entry.cabinet_id ? `Cabinet ${entry.cabinet_id}` : \"—\"}\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          {entry.approved_at ? (\n                            <div className=\"flex items-center space-x-1 text-green-600\">\n                              <CheckCircle className=\"h-4 w-4\" />\n                              <span className=\"text-sm\">Approved</span>\n                            </div>\n                          ) : (\n                            <div className=\"flex items-center space-x-1 text-amber-600\">\n                              <Clock className=\"h-4 w-4\" />\n                              <span className=\"text-sm\">Pending</span>\n                            </div>\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center space-x-1\">\n                            <Camera className=\"h-4 w-4 text-muted-foreground\" />\n                            <span className=\"text-sm\">{entry.photos?.length || 0}</span>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <DropdownMenu>\n                            <DropdownMenuTrigger asChild>\n                              <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                                <span className=\"sr-only\">Open menu</span>\n                                <Filter className=\"h-4 w-4\" />\n                              </Button>\n                            </DropdownMenuTrigger>\n                            <DropdownMenuContent align=\"end\">\n                              <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                              <DropdownMenuItem\n                                onClick={() => router.push(`/dashboard/work-entries/${entry.id}`)}\n                              >\n                                <Eye className=\"mr-2 h-4 w-4\" />\n                                View Details\n                              </DropdownMenuItem>\n                              {canApproveWork && !entry.approved_at && (\n                                <>\n                                  <DropdownMenuSeparator />\n                                  <DropdownMenuItem\n                                    onClick={() => handleApproveWorkEntry(entry.id)}\n                                    disabled={approveWorkEntry.isPending}\n                                  >\n                                    <CheckCircle className=\"mr-2 h-4 w-4\" />\n                                    Approve Entry\n                                  </DropdownMenuItem>\n                                </>\n                              )}\n                            </DropdownMenuContent>\n                          </DropdownMenu>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {canApproveWork && (\n          <TabsContent value=\"pending\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Clock className=\"h-5 w-5\" />\n                  Pending Approvals ({pendingApprovals.length})\n                </CardTitle>\n                <CardDescription>\n                  Work entries waiting for your approval\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                {pendingApprovals.length === 0 ? (\n                  <div className=\"text-center py-8\">\n                    <CheckCircle className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                    <h3 className=\"mt-2 text-sm font-semibold\">No pending approvals</h3>\n                    <p className=\"mt-1 text-sm text-muted-foreground\">\n                      All work entries have been approved.\n                    </p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    {pendingApprovals.map((entry) => (\n                      <div\n                        key={entry.id}\n                        className=\"flex items-center justify-between p-4 border rounded-lg\"\n                      >\n                        <div className=\"space-y-1\">\n                          <div className=\"font-medium\">\n                            {getStageLabel(entry.stage_code)} - {entry.meters_done_m}m\n                          </div>\n                          <div className=\"text-sm text-muted-foreground\">\n                            {entry.user?.full_name} • {new Date(entry.date).toLocaleDateString()}\n                          </div>\n                        </div>\n                        <div className=\"flex space-x-2\">\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => router.push(`/dashboard/work-entries/${entry.id}`)}\n                          >\n                            <Eye className=\"mr-2 h-4 w-4\" />\n                            View\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            onClick={() => handleApproveWorkEntry(entry.id)}\n                            disabled={approveWorkEntry.isPending}\n                          >\n                            <CheckCircle className=\"mr-2 h-4 w-4\" />\n                            Approve\n                          </Button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n        )}\n\n        <TabsContent value=\"my-work\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>My Work Entries</CardTitle>\n              <CardDescription>\n                Work entries you have created\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-center py-8 text-muted-foreground\">\n                My work entries view will be implemented based on current user context.\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}"],"names":[],"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"}