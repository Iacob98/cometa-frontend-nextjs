{"version":3,"sources":["turbopack:///[project]/src/app/(dashboard)/dashboard/vehicles/new/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport * as z from \"zod\";\nimport { ArrowLeft, Car, Save, Loader2 } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Separator } from \"@/components/ui/separator\";\n\nimport { useCreateVehicle } from \"@/hooks/use-vehicles\";\n\nconst vehicleFormSchema = z.object({\n  brand: z.string().min(1, \"Brand is required\").max(100, \"Brand must be less than 100 characters\"),\n  model: z.string().min(1, \"Model is required\").max(100, \"Model must be less than 100 characters\"),\n  plate_number: z.string()\n    .min(1, \"Plate number is required\")\n    .max(20, \"Plate number must be less than 20 characters\")\n    .regex(/^[A-Z0-9\\-\\s]+$/i, \"Plate number can only contain letters, numbers, hyphens, and spaces\"),\n  type: z.enum([\"van\", \"truck\", \"trailer\", \"excavator\", \"other\"], {\n    required_error: \"Vehicle type is required\",\n  }),\n  status: z.enum([\"available\", \"in_use\", \"maintenance\", \"broken\"], {\n    required_error: \"Status is required\",\n  }),\n  owned: z.boolean().default(true),\n  rental_price_per_day_eur: z.number().min(0, \"Rental price per day must be 0 or greater\").default(0),\n  rental_price_per_hour_eur: z.number().min(0, \"Rental price per hour must be 0 or greater\").default(0),\n  fuel_consumption_l_100km: z.number().min(0, \"Fuel consumption must be 0 or greater\").default(0),\n  current_location: z.string().max(200, \"Location must be less than 200 characters\").default(\"Main Depot\"),\n  purchase_price_eur: z.number().min(0, \"Purchase price must be 0 or greater\").default(0),\n});\n\ntype VehicleFormValues = z.infer<typeof vehicleFormSchema>;\n\nconst vehicleTypes = [\n  { value: \"van\", label: \"Van\" },\n  { value: \"truck\", label: \"Truck\" },\n  { value: \"trailer\", label: \"Trailer\" },\n  { value: \"excavator\", label: \"Excavator\" },\n  { value: \"other\", label: \"Other\" },\n];\n\nconst vehicleStatuses = [\n  { value: \"available\", label: \"Available\" },\n  { value: \"in_use\", label: \"In Use\" },\n  { value: \"maintenance\", label: \"Maintenance\" },\n  { value: \"broken\", label: \"Broken\" },\n];\n\nexport default function NewVehiclePage() {\n  const router = useRouter();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const createVehicleMutation = useCreateVehicle();\n\n  const form = useForm<VehicleFormValues>({\n    resolver: zodResolver(vehicleFormSchema),\n    defaultValues: {\n      brand: \"\",\n      model: \"\",\n      plate_number: \"\",\n      type: \"van\",\n      status: \"available\",\n      owned: true,\n      rental_price_per_day_eur: 0,\n      rental_price_per_hour_eur: 0,\n      fuel_consumption_l_100km: 0,\n      current_location: \"Main Depot\",\n      purchase_price_eur: 0,\n      year_of_manufacture: undefined,\n      mileage_km: undefined,\n    },\n  });\n\n  const onSubmit = async (values: VehicleFormValues) => {\n    try {\n      setIsSubmitting(true);\n\n      // Transform the data to match API expectations\n      const vehicleData = {\n        ...values,\n        plate_number: values.plate_number.toUpperCase().trim(),\n      };\n\n      await createVehicleMutation.mutateAsync(vehicleData);\n\n      // Navigate back to equipment page on success\n      router.push(\"/dashboard/equipment\");\n    } catch (error) {\n      console.error(\"Failed to create vehicle:\", error);\n      // Error handling is done in the mutation hook via toast\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const owned = form.watch(\"owned\");\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => router.back()}\n            className=\"flex items-center space-x-2\"\n          >\n            <ArrowLeft className=\"h-4 w-4\" />\n            <span>Back</span>\n          </Button>\n          <div>\n            <h1 className=\"text-3xl font-bold tracking-tight\">Add New Vehicle</h1>\n            <p className=\"text-muted-foreground\">\n              Add a new vehicle to your fleet with all necessary details\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n          {/* Basic Information */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <Car className=\"h-5 w-5\" />\n                <span>Basic Information</span>\n              </CardTitle>\n              <CardDescription>\n                Enter the basic details about the vehicle\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"brand\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Brand *</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., Mercedes, Ford, Toyota\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"model\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Model *</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., Sprinter, Transit, Hilux\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"plate_number\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Plate Number *</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"e.g., ABC-123, XYZ 456\"\n                          {...field}\n                          onChange={(e) => field.onChange(e.target.value.toUpperCase())}\n                        />\n                      </FormControl>\n                      <FormDescription>\n                        License plate number (will be converted to uppercase)\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"type\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Vehicle Type *</FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select vehicle type\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          {vehicleTypes.map((type) => (\n                            <SelectItem key={type.value} value={type.value}>\n                              {type.label}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"status\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Status *</FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select status\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          {vehicleStatuses.map((status) => (\n                            <SelectItem key={status.value} value={status.value}>\n                              {status.label}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"current_location\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Current Location</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., Main Depot, Project Site A\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"year_of_manufacture\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Year of Manufacture</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          placeholder=\"e.g., 2020\"\n                          value={field.value || ''}\n                          onChange={(e) => field.onChange(e.target.value ? parseInt(e.target.value) : undefined)}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"mileage_km\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Mileage (km)</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          placeholder=\"e.g., 50000\"\n                          value={field.value || ''}\n                          onChange={(e) => field.onChange(e.target.value ? parseFloat(e.target.value) : undefined)}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"fuel_consumption_l_100km\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Fuel Consumption (L/100km)</FormLabel>\n                    <FormControl>\n                      <Input\n                        type=\"number\"\n                        step=\"0.1\"\n                        placeholder=\"e.g., 8.5\"\n                        {...field}\n                        onChange={(e) => field.onChange(e.target.value ? parseFloat(e.target.value) : 0)}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      Fuel consumption in liters per 100 kilometers\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </CardContent>\n          </Card>\n\n          {/* Financial Information */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Financial Information</CardTitle>\n              <CardDescription>\n                Ownership and pricing details for the vehicle\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <FormField\n                control={form.control}\n                name=\"owned\"\n                render={({ field }) => (\n                  <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                    <FormControl>\n                      <Checkbox\n                        checked={field.value}\n                        onCheckedChange={field.onChange}\n                      />\n                    </FormControl>\n                    <div className=\"space-y-1 leading-none\">\n                      <FormLabel>\n                        Company Owned Vehicle\n                      </FormLabel>\n                      <FormDescription>\n                        Check if this vehicle is owned by the company (uncheck for rental vehicles)\n                      </FormDescription>\n                    </div>\n                  </FormItem>\n                )}\n              />\n\n              <Separator />\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"purchase_price_eur\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Purchase Price (EUR)</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          step=\"0.01\"\n                          placeholder=\"0.00\"\n                          {...field}\n                          onChange={(e) => field.onChange(e.target.value ? parseFloat(e.target.value) : 0)}\n                        />\n                      </FormControl>\n                      <FormDescription>\n                        {owned ? \"Purchase price for owned vehicle\" : \"Not applicable for rental vehicles\"}\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"rental_price_per_day_eur\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Rental Price per Day (EUR)</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          step=\"0.01\"\n                          placeholder=\"0.00\"\n                          {...field}\n                          onChange={(e) => field.onChange(e.target.value ? parseFloat(e.target.value) : 0)}\n                        />\n                      </FormControl>\n                      <FormDescription>\n                        {owned ? \"Internal cost per day for project allocation\" : \"External rental cost per day\"}\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"rental_price_per_hour_eur\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Rental Price per Hour (EUR)</FormLabel>\n                    <FormControl>\n                      <Input\n                        type=\"number\"\n                        step=\"0.01\"\n                        placeholder=\"0.00\"\n                        {...field}\n                        onChange={(e) => field.onChange(e.target.value ? parseFloat(e.target.value) : 0)}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      {owned ? \"Internal hourly cost for project allocation\" : \"External rental cost per hour\"}\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </CardContent>\n          </Card>\n\n          {/* Submit Button */}\n          <div className=\"flex justify-end space-x-4\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => router.back()}\n              disabled={isSubmitting}\n            >\n              Cancel\n            </Button>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Creating Vehicle...\n                </>\n              ) : (\n                <>\n                  <Save className=\"mr-2 h-4 w-4\" />\n                  Create Vehicle\n                </>\n              )}\n            </Button>\n          </div>\n        </form>\n      </Form>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}