{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/project-preparation/facilities-management.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Building, Home, Plus, Edit, Trash2, MapPin, Euro, Calendar, User, Mail, Phone, Package } from 'lucide-react';\nimport { useFacilities, useCreateFacility, useDeleteFacility } from '@/hooks/use-project-preparation';\nimport { useHousingUnits, useCreateHousingUnit, useUpdateHousingUnit, useDeleteHousingUnit } from '@/hooks/use-housing-units';\nimport { useQuery } from '@tanstack/react-query';\nimport { toast } from 'sonner';\n\ninterface FacilitiesManagementProps {\n  projectId: string;\n}\n\nexport default function FacilitiesManagement({ projectId }: FacilitiesManagementProps) {\n  const { data: facilities, isLoading: facilitiesLoading } = useFacilities(projectId);\n  const { data: housingUnits, isLoading: housingLoading } = useHousingUnits(projectId);\n  const createFacilityMutation = useCreateFacility();\n  const deleteFacilityMutation = useDeleteFacility();\n  const createHousingMutation = useCreateHousingUnit();\n  const updateHousingMutation = useUpdateHousingUnit();\n  const deleteHousingMutation = useDeleteHousingUnit();\n\n  // Get project costs for budget impact\n  const { data: projectCosts } = useQuery({\n    queryKey: ['project-costs', projectId],\n    queryFn: async () => {\n      const response = await fetch(`/api/project-preparation/costs?project_id=${projectId}`);\n      if (!response.ok) throw new Error('Failed to fetch project costs');\n      return response.json();\n    },\n    enabled: !!projectId,\n  });\n\n  const { data: suppliers } = useQuery({\n    queryKey: ['suppliers'],\n    queryFn: async () => {\n      const response = await fetch('/api/suppliers');\n      if (!response.ok) throw new Error('Failed to fetch suppliers');\n      const data = await response.json();\n      return data.items || [];\n    },\n  });\n\n  const [showFacilityForm, setShowFacilityForm] = useState(false);\n  const [showHousingForm, setShowHousingForm] = useState(false);\n  const [editingHousingId, setEditingHousingId] = useState<string | null>(null);\n\n  const [facilityForm, setFacilityForm] = useState({\n    type: '',\n    supplier_id: '',\n    rent_daily_eur: '',\n    rent_period: 'daily', // daily or monthly\n    service_freq: '',\n    status: 'planned',\n    start_date: '',\n    end_date: '',\n    location_text: '',\n  });\n\n  const [housingForm, setHousingForm] = useState({\n    address: '',\n    rooms_total: '',\n    beds_total: '',\n    rent_daily_eur: '',\n    rent_period: 'daily', // daily or monthly\n    advance_payment: '',\n    check_in_date: '',\n    check_out_date: '',\n    status: 'available',\n  });\n\n  // Predefined facility types with option to add custom\n  const facilityTypes = [\n    'Site Office',\n    'Storage Container',\n    'Portable Toilet',\n    'Warehouse',\n    'Parking Space',\n    'Security Cabin',\n    'Break Room',\n    'Tool Storage',\n    'Equipment Shed',\n    'Meeting Room'\n  ];\n\n  // Find selected supplier for displaying details\n  const selectedSupplier = suppliers?.find(supplier => supplier.id === facilityForm.supplier_id);\n\n  // Fetch materials for selected supplier\n  const { data: supplierMaterials } = useQuery({\n    queryKey: ['supplier-materials', facilityForm.supplier_id],\n    queryFn: async () => {\n      if (!facilityForm.supplier_id) return [];\n      const response = await fetch(`/api/materials?supplier_id=${facilityForm.supplier_id}&per_page=10`);\n      if (!response.ok) return [];\n      const data = await response.json();\n      return data.items || [];\n    },\n    enabled: !!facilityForm.supplier_id,\n  });\n\n  const handleFacilitySubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!facilityForm.type || !facilityForm.rent_daily_eur) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n\n    try {\n      const rentAmount = parseFloat(facilityForm.rent_daily_eur);\n      // Convert monthly rate to daily if needed\n      const dailyRate = facilityForm.rent_period === 'monthly' ? rentAmount / 30 : rentAmount;\n\n      await createFacilityMutation.mutateAsync({\n        project_id: projectId,\n        type: facilityForm.type,\n        supplier_id: facilityForm.supplier_id || undefined,\n        rent_daily_eur: dailyRate,\n        service_freq: facilityForm.service_freq || undefined,\n        status: facilityForm.status,\n        start_date: facilityForm.start_date || undefined,\n        end_date: facilityForm.end_date || undefined,\n        location_text: facilityForm.location_text || undefined,\n      });\n\n      // Reset form\n      setFacilityForm({\n        type: '',\n        supplier_id: '',\n        rent_daily_eur: '',\n        rent_period: 'daily',\n        service_freq: '',\n        status: 'planned',\n        start_date: '',\n        end_date: '',\n        location_text: '',\n      });\n      setShowFacilityForm(false);\n    } catch (error) {\n      // Error is handled by the mutation\n    }\n  };\n\n  const handleHousingSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!housingForm.address || !housingForm.rooms_total || !housingForm.beds_total || !housingForm.rent_daily_eur) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n\n    try {\n      const rentAmount = parseFloat(housingForm.rent_daily_eur);\n      // Convert monthly rate to daily if needed\n      const dailyRate = housingForm.rent_period === 'monthly' ? rentAmount / 30 : rentAmount;\n\n      if (editingHousingId) {\n        // Update existing housing unit\n        await updateHousingMutation.mutateAsync({\n          id: editingHousingId,\n          address: housingForm.address,\n          rooms_total: parseInt(housingForm.rooms_total),\n          beds_total: parseInt(housingForm.beds_total),\n          rent_daily_eur: dailyRate,\n          status: housingForm.status,\n          advance_payment: housingForm.advance_payment ? parseFloat(housingForm.advance_payment) : undefined,\n          check_in_date: housingForm.check_in_date || undefined,\n          check_out_date: housingForm.check_out_date || undefined,\n        });\n        setEditingHousingId(null);\n      } else {\n        // Create new housing unit\n        await createHousingMutation.mutateAsync({\n          project_id: projectId,\n          address: housingForm.address,\n          rooms_total: parseInt(housingForm.rooms_total),\n          beds_total: parseInt(housingForm.beds_total),\n          rent_daily_eur: dailyRate,\n          status: housingForm.status,\n          advance_payment: housingForm.advance_payment ? parseFloat(housingForm.advance_payment) : undefined,\n          check_in_date: housingForm.check_in_date || undefined,\n          check_out_date: housingForm.check_out_date || undefined,\n        });\n      }\n\n      // Reset form\n      setHousingForm({\n        address: '',\n        rooms_total: '',\n        beds_total: '',\n        rent_daily_eur: '',\n        rent_period: 'daily',\n        advance_payment: '',\n        check_in_date: '',\n        check_out_date: '',\n        status: 'available',\n      });\n      setShowHousingForm(false);\n    } catch (error) {\n      // Error is handled by the mutation\n    }\n  };\n\n  const handleEditHousing = (housing: any) => {\n    setHousingForm({\n      address: housing.address || '',\n      rooms_total: housing.rooms_total ? housing.rooms_total.toString() : '',\n      beds_total: housing.beds_total ? housing.beds_total.toString() : '',\n      rent_daily_eur: housing.rent_daily_eur ? housing.rent_daily_eur.toString() : '',\n      rent_period: 'daily',\n      advance_payment: housing.advance_payment ? housing.advance_payment.toString() : '',\n      check_in_date: housing.check_in_date || '',\n      check_out_date: housing.check_out_date || '',\n      status: housing.status || 'available',\n    });\n    setEditingHousingId(housing.id);\n    setShowHousingForm(true);\n  };\n\n  const handleDeleteHousing = async (housingId: string, address: string) => {\n    if (confirm(`Are you sure you want to delete housing unit at \"${address}\"?`)) {\n      try {\n        await deleteHousingMutation.mutateAsync(housingId);\n      } catch (error) {\n        // Error is handled by the mutation\n      }\n    }\n  };\n\n  const handleCancelHousingEdit = () => {\n    setEditingHousingId(null);\n    setHousingForm({\n      address: '',\n      rooms_total: '',\n      beds_total: '',\n      rent_daily_eur: '',\n      rent_period: 'daily',\n      advance_payment: '',\n      check_in_date: '',\n      check_out_date: '',\n      status: 'available',\n    });\n    setShowHousingForm(false);\n  };\n\n  const handleEditFacility = (facility: any) => {\n    setFacilityForm({\n      type: facility.type,\n      rent_daily_eur: facility.rent_daily_eur.toString(),\n      rent_period: 'daily',\n      service_freq: facility.service_freq || '',\n      status: facility.status,\n      start_date: facility.start_date || '',\n      end_date: facility.end_date || '',\n      location_text: facility.location_text || '',\n    });\n    setShowFacilityForm(true);\n  };\n\n  const handleDeleteFacility = async (facilityId: string, facilityType: string) => {\n    if (confirm(`Are you sure you want to delete facility \"${facilityType}\"?`)) {\n      try {\n        await deleteFacilityMutation.mutateAsync(facilityId);\n      } catch (error) {\n        // Error is handled by the mutation\n      }\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'planned':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'active':\n        return 'bg-green-100 text-green-800';\n      case 'completed':\n        return 'bg-blue-100 text-blue-800';\n      case 'available':\n        return 'bg-green-100 text-green-800';\n      case 'occupied':\n        return 'bg-red-100 text-red-800';\n      case 'maintenance':\n        return 'bg-orange-100 text-orange-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  if (facilitiesLoading || housingLoading) {\n    return <div>Loading facilities and housing...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-semibold\">Facilities & Housing Management</h3>\n        <p className=\"text-gray-600\">\n          Manage project facilities and housing arrangements for the team\n        </p>\n        {projectCosts && (\n          <div className=\"mt-4 p-4 bg-blue-50 rounded-lg border border-blue-200\">\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 text-sm\">\n              <div>\n                <p className=\"font-medium text-blue-900\">Project Budget</p>\n                <p className=\"text-xl font-bold text-blue-600\">\n                  €{projectCosts.project?.budget?.toLocaleString() || '0'}\n                </p>\n              </div>\n              <div>\n                <p className=\"font-medium text-orange-900\">Facilities Cost</p>\n                <p className=\"text-lg font-semibold text-orange-600\">\n                  €{projectCosts.costs?.facilities?.total?.toLocaleString() || '0'}\n                </p>\n              </div>\n              <div>\n                <p className=\"font-medium text-green-900\">Housing Cost</p>\n                <p className=\"text-lg font-semibold text-green-600\">\n                  €{projectCosts.costs?.housing?.total?.toLocaleString() || '0'}\n                </p>\n              </div>\n              <div>\n                <p className=\"font-medium text-red-900\">Remaining Budget</p>\n                <p className=\"text-lg font-semibold text-red-600\">\n                  €{projectCosts.project?.remaining_budget?.toLocaleString() || '0'}\n                </p>\n                <p className=\"text-xs text-gray-600\">\n                  {projectCosts.project?.budget_utilized_percentage?.toFixed(1) || '0'}% used\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <Tabs defaultValue=\"facilities\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"facilities\" className=\"flex items-center gap-2\">\n            <Building className=\"w-4 h-4\" />\n            Facilities\n          </TabsTrigger>\n          <TabsTrigger value=\"housing\" className=\"flex items-center gap-2\">\n            <Home className=\"w-4 h-4\" />\n            Housing\n          </TabsTrigger>\n        </TabsList>\n\n        {/* Facilities Tab */}\n        <TabsContent value=\"facilities\" className=\"space-y-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h4 className=\"text-md font-medium\">Project Facilities</h4>\n              <p className=\"text-sm text-gray-600\">\n                {facilities?.length || 0} facilities configured\n              </p>\n            </div>\n            <Button\n              onClick={() => setShowFacilityForm(!showFacilityForm)}\n              className=\"flex items-center gap-2\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              Add Facility\n            </Button>\n          </div>\n\n          {/* Add Facility Form */}\n          {showFacilityForm && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Add New Facility</CardTitle>\n                <CardDescription>\n                  Add a new facility for the project (e.g., office, warehouse, site office)\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleFacilitySubmit} className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"facility-type\">Facility Type *</Label>\n                      <Select\n                        value={facilityTypes.includes(facilityForm.type) ? facilityForm.type : ''}\n                        onValueChange={(value) => setFacilityForm(prev => ({ ...prev, type: value }))}\n                      >\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select facility type\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {facilityTypes.map((type) => (\n                            <SelectItem key={type} value={type}>\n                              {type}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      <Input\n                        className=\"mt-2\"\n                        placeholder=\"Or enter custom type...\"\n                        value={facilityTypes.includes(facilityForm.type) ? '' : facilityForm.type}\n                        onChange={(e) => setFacilityForm(prev => ({ ...prev, type: e.target.value }))}\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"supplier\">Supplier</Label>\n                      <Select\n                        value={facilityForm.supplier_id}\n                        onValueChange={(value) => setFacilityForm(prev => ({ ...prev, supplier_id: value }))}\n                      >\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select supplier (optional)\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {suppliers?.map((supplier) => (\n                            <SelectItem key={supplier.id} value={supplier.id}>\n                              <div className=\"flex flex-col\">\n                                <span className=\"font-medium\">{supplier.name}</span>\n                                <div className=\"flex items-center gap-4 text-xs text-gray-500 mt-1\">\n                                  {supplier.contact_person && (\n                                    <span className=\"flex items-center gap-1\">\n                                      <User className=\"w-3 h-3\" />\n                                      {supplier.contact_person}\n                                    </span>\n                                  )}\n                                  {supplier.materials_count > 0 && (\n                                    <span className=\"flex items-center gap-1\">\n                                      <Package className=\"w-3 h-3\" />\n                                      {supplier.materials_count} items\n                                    </span>\n                                  )}\n                                </div>\n                              </div>\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n\n                      {/* Supplier Information Card */}\n                      {selectedSupplier && (\n                        <div className=\"mt-3 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n                          <h4 className=\"font-medium text-blue-900 mb-3 flex items-center gap-2\">\n                            <Building className=\"w-4 h-4\" />\n                            {selectedSupplier.name}\n                          </h4>\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 text-sm\">\n                            {selectedSupplier.contact_person && (\n                              <div className=\"flex items-center gap-2 text-blue-700\">\n                                <User className=\"w-4 h-4\" />\n                                <span>{selectedSupplier.contact_person}</span>\n                              </div>\n                            )}\n                            {selectedSupplier.email && (\n                              <div className=\"flex items-center gap-2 text-blue-700\">\n                                <Mail className=\"w-4 h-4\" />\n                                <span>{selectedSupplier.email}</span>\n                              </div>\n                            )}\n                            {selectedSupplier.phone && (\n                              <div className=\"flex items-center gap-2 text-blue-700\">\n                                <Phone className=\"w-4 h-4\" />\n                                <span>{selectedSupplier.phone}</span>\n                              </div>\n                            )}\n                            {selectedSupplier.address && (\n                              <div className=\"flex items-center gap-2 text-blue-700\">\n                                <MapPin className=\"w-4 h-4\" />\n                                <span>{selectedSupplier.address}</span>\n                              </div>\n                            )}\n                            {selectedSupplier.materials_count > 0 && (\n                              <div className=\"flex items-center gap-2 text-blue-700\">\n                                <Package className=\"w-4 h-4\" />\n                                <span>{selectedSupplier.materials_count} materials available</span>\n                              </div>\n                            )}\n                          </div>\n\n                          {/* Materials List */}\n                          {supplierMaterials && supplierMaterials.length > 0 && (\n                            <div className=\"mt-4 pt-3 border-t border-blue-200\">\n                              <h5 className=\"font-medium text-blue-900 mb-2 text-sm\">Available Materials:</h5>\n                              <div className=\"space-y-2 max-h-40 overflow-y-auto\">\n                                {supplierMaterials.slice(0, 5).map((material: any) => (\n                                  <div key={material.id} className=\"flex justify-between items-center text-xs bg-white p-2 rounded border\">\n                                    <span className=\"font-medium text-gray-700\">{material.name}</span>\n                                    <span className=\"text-blue-600\">\n                                      €{material.unit_price_eur ? material.unit_price_eur.toFixed(2) : 'N/A'}/{material.unit}\n                                    </span>\n                                  </div>\n                                ))}\n                                {supplierMaterials.length > 5 && (\n                                  <div className=\"text-xs text-blue-600 text-center py-1\">\n                                    +{supplierMaterials.length - 5} more materials...\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      )}\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"facility-rent\">Rent Amount (EUR) *</Label>\n                      <div className=\"flex gap-2\">\n                        <Input\n                          id=\"facility-rent\"\n                          type=\"number\"\n                          step=\"0.01\"\n                          value={facilityForm.rent_daily_eur}\n                          onChange={(e) => setFacilityForm(prev => ({ ...prev, rent_daily_eur: e.target.value }))}\n                          placeholder=\"150.00\"\n                          required\n                        />\n                        <Select\n                          value={facilityForm.rent_period}\n                          onValueChange={(value) => setFacilityForm(prev => ({ ...prev, rent_period: value }))}\n                        >\n                          <SelectTrigger className=\"w-[100px]\">\n                            <SelectValue />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"daily\">/day</SelectItem>\n                            <SelectItem value=\"monthly\">/month</SelectItem>\n                          </SelectContent>\n                        </Select>\n                      </div>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"facility-status\">Status</Label>\n                      <Select\n                        value={facilityForm.status}\n                        onValueChange={(value) => setFacilityForm(prev => ({ ...prev, status: value }))}\n                      >\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"planned\">Planned</SelectItem>\n                          <SelectItem value=\"active\">Active</SelectItem>\n                          <SelectItem value=\"completed\">Completed</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"service-freq\">Service Frequency</Label>\n                      <Input\n                        id=\"service-freq\"\n                        value={facilityForm.service_freq}\n                        onChange={(e) => setFacilityForm(prev => ({ ...prev, service_freq: e.target.value }))}\n                        placeholder=\"e.g., Weekly, Daily\"\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"start-date\">Start Date</Label>\n                      <Input\n                        id=\"start-date\"\n                        type=\"date\"\n                        value={facilityForm.start_date}\n                        onChange={(e) => setFacilityForm(prev => ({ ...prev, start_date: e.target.value }))}\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"end-date\">End Date</Label>\n                      <Input\n                        id=\"end-date\"\n                        type=\"date\"\n                        value={facilityForm.end_date}\n                        onChange={(e) => setFacilityForm(prev => ({ ...prev, end_date: e.target.value }))}\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"location\">Location</Label>\n                    <Input\n                      id=\"location\"\n                      value={facilityForm.location_text}\n                      onChange={(e) => setFacilityForm(prev => ({ ...prev, location_text: e.target.value }))}\n                      placeholder=\"Facility address or location description\"\n                    />\n                  </div>\n\n                  <div className=\"flex gap-2\">\n                    <Button\n                      type=\"submit\"\n                      disabled={createFacilityMutation.isPending}\n                    >\n                      Add Facility\n                    </Button>\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      onClick={() => setShowFacilityForm(false)}\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                </form>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Facilities List */}\n          <Card>\n            <CardContent className=\"p-6\">\n              {!facilities || facilities.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Building className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n                  <h3 className=\"text-lg font-medium mb-2\">No Facilities</h3>\n                  <p className=\"text-gray-600 mb-4\">\n                    Add facilities needed for the project.\n                  </p>\n                  <Button onClick={() => setShowFacilityForm(true)}>\n                    Add First Facility\n                  </Button>\n                </div>\n              ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Type</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Daily Rent</TableHead>\n                      <TableHead>Period</TableHead>\n                      <TableHead>Location</TableHead>\n                      <TableHead>Supplier</TableHead>\n                      <TableHead>Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {facilities.map((facility) => (\n                      <TableRow key={facility.id}>\n                        <TableCell className=\"font-medium\">\n                          {facility.type}\n                        </TableCell>\n                        <TableCell>\n                          <Badge className={getStatusColor(facility.status)}>\n                            {facility.status}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>\n                          €{facility.rent_daily_eur.toLocaleString()}/day\n                        </TableCell>\n                        <TableCell>\n                          {facility.start_date && facility.end_date ? (\n                            <span className=\"text-sm\">\n                              {facility.start_date} - {facility.end_date}\n                            </span>\n                          ) : facility.start_date ? (\n                            <span className=\"text-sm\">From {facility.start_date}</span>\n                          ) : (\n                            <span className=\"text-gray-400\">Not set</span>\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          {facility.location_text || (\n                            <span className=\"text-gray-400\">-</span>\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          {facility.supplier_name || (\n                            <span className=\"text-gray-400\">-</span>\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex gap-1\">\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => handleEditFacility(facility)}\n                            >\n                              <Edit className=\"w-4 h-4\" />\n                            </Button>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => handleDeleteFacility(facility.id, facility.type)}\n                            >\n                              <Trash2 className=\"w-4 h-4 text-red-500\" />\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Housing Tab */}\n        <TabsContent value=\"housing\" className=\"space-y-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h4 className=\"text-md font-medium\">Housing Units</h4>\n              <p className=\"text-sm text-gray-600\">\n                {housingUnits?.length || 0} housing units configured\n              </p>\n            </div>\n            <Button\n              onClick={() => setShowHousingForm(!showHousingForm)}\n              className=\"flex items-center gap-2\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              Add Housing\n            </Button>\n          </div>\n\n          {/* Add Housing Form */}\n          {showHousingForm && (\n            <Card>\n              <CardHeader>\n                <CardTitle>\n                  {editingHousingId ? 'Edit Housing Unit' : 'Add New Housing Unit'}\n                </CardTitle>\n                <CardDescription>\n                  {editingHousingId\n                    ? 'Update housing unit information'\n                    : 'Add accommodation for project team members'\n                  }\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleHousingSubmit} className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"md:col-span-2\">\n                      <Label htmlFor=\"housing-address\">Address *</Label>\n                      <Input\n                        id=\"housing-address\"\n                        value={housingForm.address}\n                        onChange={(e) => setHousingForm(prev => ({ ...prev, address: e.target.value }))}\n                        placeholder=\"Full address of the housing unit\"\n                        required\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"rooms\">Total Rooms *</Label>\n                      <Input\n                        id=\"rooms\"\n                        type=\"number\"\n                        min=\"1\"\n                        value={housingForm.rooms_total}\n                        onChange={(e) => setHousingForm(prev => ({ ...prev, rooms_total: e.target.value }))}\n                        placeholder=\"Number of rooms\"\n                        required\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"beds\">Total Beds *</Label>\n                      <Input\n                        id=\"beds\"\n                        type=\"number\"\n                        min=\"1\"\n                        value={housingForm.beds_total}\n                        onChange={(e) => setHousingForm(prev => ({ ...prev, beds_total: e.target.value }))}\n                        placeholder=\"Number of beds\"\n                        required\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"housing-rent\">Rent Amount (EUR) *</Label>\n                      <div className=\"flex gap-2\">\n                        <Input\n                          id=\"housing-rent\"\n                          type=\"number\"\n                          step=\"0.01\"\n                          value={housingForm.rent_daily_eur}\n                          onChange={(e) => setHousingForm(prev => ({ ...prev, rent_daily_eur: e.target.value }))}\n                          placeholder=\"150.00\"\n                          required\n                        />\n                        <Select\n                          value={housingForm.rent_period}\n                          onValueChange={(value) => setHousingForm(prev => ({ ...prev, rent_period: value }))}\n                        >\n                          <SelectTrigger className=\"w-[100px]\">\n                            <SelectValue />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"daily\">/day</SelectItem>\n                            <SelectItem value=\"monthly\">/month</SelectItem>\n                          </SelectContent>\n                        </Select>\n                      </div>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"advance-payment\">Advance Payment (EUR)</Label>\n                      <Input\n                        id=\"advance-payment\"\n                        type=\"number\"\n                        step=\"0.01\"\n                        value={housingForm.advance_payment}\n                        onChange={(e) => setHousingForm(prev => ({ ...prev, advance_payment: e.target.value }))}\n                        placeholder=\"0.00\"\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"check-in-date\">Check-in Date</Label>\n                      <Input\n                        id=\"check-in-date\"\n                        type=\"date\"\n                        value={housingForm.check_in_date}\n                        onChange={(e) => setHousingForm(prev => ({ ...prev, check_in_date: e.target.value }))}\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"check-out-date\">Check-out Date</Label>\n                      <Input\n                        id=\"check-out-date\"\n                        type=\"date\"\n                        value={housingForm.check_out_date}\n                        onChange={(e) => setHousingForm(prev => ({ ...prev, check_out_date: e.target.value }))}\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"housing-status\">Status</Label>\n                      <Select\n                        value={housingForm.status}\n                        onValueChange={(value) => setHousingForm(prev => ({ ...prev, status: value }))}\n                      >\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"available\">Available</SelectItem>\n                          <SelectItem value=\"occupied\">Occupied</SelectItem>\n                          <SelectItem value=\"maintenance\">Maintenance</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  </div>\n\n                  <div className=\"flex gap-2\">\n                    <Button\n                      type=\"submit\"\n                      disabled={createHousingMutation.isPending || updateHousingMutation.isPending}\n                    >\n                      {editingHousingId ? 'Update Housing Unit' : 'Add Housing Unit'}\n                    </Button>\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      onClick={handleCancelHousingEdit}\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                </form>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Housing List */}\n          <Card>\n            <CardContent className=\"p-6\">\n              {!housingUnits || housingUnits.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Home className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n                  <h3 className=\"text-lg font-medium mb-2\">No Housing Units</h3>\n                  <p className=\"text-gray-600 mb-4\">\n                    Add housing accommodations for the project team.\n                  </p>\n                  <Button onClick={() => setShowHousingForm(true)}>\n                    Add First Housing Unit\n                  </Button>\n                </div>\n              ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Address</TableHead>\n                      <TableHead>Rooms</TableHead>\n                      <TableHead>Beds</TableHead>\n                      <TableHead>Daily Rent</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {housingUnits?.map((housing) => (\n                      <TableRow key={housing.id}>\n                        <TableCell className=\"font-medium\">\n                          {housing.address || 'N/A'}\n                        </TableCell>\n                        <TableCell>{housing.rooms_total || 'N/A'}</TableCell>\n                        <TableCell>{housing.beds_total || 'N/A'}</TableCell>\n                        <TableCell>\n                          €{housing.rent_daily_eur ? housing.rent_daily_eur.toLocaleString() : '0'}/day\n                        </TableCell>\n                        <TableCell>\n                          <Badge className={getStatusColor(housing.status)}>\n                            {housing.status}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex gap-1\">\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => handleEditHousing(housing)}\n                              disabled={updateHousingMutation.isPending}\n                            >\n                              <Edit className=\"w-4 h-4\" />\n                            </Button>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => handleDeleteHousing(housing.id, housing.address)}\n                              disabled={deleteHousingMutation.isPending}\n                            >\n                              <Trash2 className=\"w-4 h-4 text-red-500\" />\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}