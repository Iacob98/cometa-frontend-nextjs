{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/project-preparation/facilities-management.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Building, Home, Plus, Edit, Trash2, MapPin, Euro, Calendar } from 'lucide-react';\nimport { useFacilities, useCreateFacility } from '@/hooks/use-project-preparation';\nimport { useHousingUnits, useCreateHousingUnit, useUpdateHousingUnit, useDeleteHousingUnit } from '@/hooks/use-housing-units';\nimport { toast } from 'sonner';\n\ninterface FacilitiesManagementProps {\n  projectId: string;\n}\n\nexport default function FacilitiesManagement({ projectId }: FacilitiesManagementProps) {\n  const { data: facilities, isLoading: facilitiesLoading } = useFacilities(projectId);\n  const { data: housingUnits, isLoading: housingLoading } = useHousingUnits(projectId);\n  const createFacilityMutation = useCreateFacility();\n  const createHousingMutation = useCreateHousingUnit();\n  const updateHousingMutation = useUpdateHousingUnit();\n  const deleteHousingMutation = useDeleteHousingUnit();\n\n  const [showFacilityForm, setShowFacilityForm] = useState(false);\n  const [showHousingForm, setShowHousingForm] = useState(false);\n  const [editingHousingId, setEditingHousingId] = useState<string | null>(null);\n\n  const [facilityForm, setFacilityForm] = useState({\n    type: '',\n    rent_daily_eur: '',\n    service_freq: '',\n    status: 'planned',\n    start_date: '',\n    end_date: '',\n    location_text: '',\n  });\n\n  const [housingForm, setHousingForm] = useState({\n    address: '',\n    rooms_total: '',\n    beds_total: '',\n    rent_daily_eur: '',\n    status: 'available',\n  });\n\n  const handleFacilitySubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!facilityForm.type || !facilityForm.rent_daily_eur) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n\n    try {\n      await createFacilityMutation.mutateAsync({\n        project_id: projectId,\n        type: facilityForm.type,\n        rent_daily_eur: parseFloat(facilityForm.rent_daily_eur),\n        service_freq: facilityForm.service_freq || undefined,\n        status: facilityForm.status,\n        start_date: facilityForm.start_date || undefined,\n        end_date: facilityForm.end_date || undefined,\n        location_text: facilityForm.location_text || undefined,\n      });\n\n      // Reset form\n      setFacilityForm({\n        type: '',\n        rent_daily_eur: '',\n        service_freq: '',\n        status: 'planned',\n        start_date: '',\n        end_date: '',\n        location_text: '',\n      });\n      setShowFacilityForm(false);\n    } catch (error) {\n      // Error is handled by the mutation\n    }\n  };\n\n  const handleHousingSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!housingForm.address || !housingForm.rooms_total || !housingForm.beds_total || !housingForm.rent_daily_eur) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n\n    try {\n      if (editingHousingId) {\n        // Update existing housing unit\n        await updateHousingMutation.mutateAsync({\n          id: editingHousingId,\n          address: housingForm.address,\n          rooms_total: parseInt(housingForm.rooms_total),\n          beds_total: parseInt(housingForm.beds_total),\n          rent_daily_eur: parseFloat(housingForm.rent_daily_eur),\n          status: housingForm.status,\n        });\n        setEditingHousingId(null);\n      } else {\n        // Create new housing unit\n        await createHousingMutation.mutateAsync({\n          project_id: projectId,\n          address: housingForm.address,\n          rooms_total: parseInt(housingForm.rooms_total),\n          beds_total: parseInt(housingForm.beds_total),\n          rent_daily_eur: parseFloat(housingForm.rent_daily_eur),\n          status: housingForm.status,\n        });\n      }\n\n      // Reset form\n      setHousingForm({\n        address: '',\n        rooms_total: '',\n        beds_total: '',\n        rent_daily_eur: '',\n        status: 'available',\n      });\n      setShowHousingForm(false);\n    } catch (error) {\n      // Error is handled by the mutation\n    }\n  };\n\n  const handleEditHousing = (housing: any) => {\n    setHousingForm({\n      address: housing.address,\n      rooms_total: housing.rooms_total.toString(),\n      beds_total: housing.beds_total.toString(),\n      rent_daily_eur: housing.rent_daily_eur.toString(),\n      status: housing.status,\n    });\n    setEditingHousingId(housing.id);\n    setShowHousingForm(true);\n  };\n\n  const handleDeleteHousing = async (housingId: string, address: string) => {\n    if (confirm(`Are you sure you want to delete housing unit at \"${address}\"?`)) {\n      try {\n        await deleteHousingMutation.mutateAsync(housingId);\n      } catch (error) {\n        // Error is handled by the mutation\n      }\n    }\n  };\n\n  const handleCancelHousingEdit = () => {\n    setEditingHousingId(null);\n    setHousingForm({\n      address: '',\n      rooms_total: '',\n      beds_total: '',\n      rent_daily_eur: '',\n      status: 'available',\n    });\n    setShowHousingForm(false);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'planned':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'active':\n        return 'bg-green-100 text-green-800';\n      case 'completed':\n        return 'bg-blue-100 text-blue-800';\n      case 'available':\n        return 'bg-green-100 text-green-800';\n      case 'occupied':\n        return 'bg-red-100 text-red-800';\n      case 'maintenance':\n        return 'bg-orange-100 text-orange-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  if (facilitiesLoading || housingLoading) {\n    return <div>Loading facilities and housing...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-semibold\">Facilities & Housing Management</h3>\n        <p className=\"text-gray-600\">\n          Manage project facilities and housing arrangements for the team\n        </p>\n      </div>\n\n      <Tabs defaultValue=\"facilities\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"facilities\" className=\"flex items-center gap-2\">\n            <Building className=\"w-4 h-4\" />\n            Facilities\n          </TabsTrigger>\n          <TabsTrigger value=\"housing\" className=\"flex items-center gap-2\">\n            <Home className=\"w-4 h-4\" />\n            Housing\n          </TabsTrigger>\n        </TabsList>\n\n        {/* Facilities Tab */}\n        <TabsContent value=\"facilities\" className=\"space-y-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h4 className=\"text-md font-medium\">Project Facilities</h4>\n              <p className=\"text-sm text-gray-600\">\n                {facilities?.length || 0} facilities configured\n              </p>\n            </div>\n            <Button\n              onClick={() => setShowFacilityForm(!showFacilityForm)}\n              className=\"flex items-center gap-2\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              Add Facility\n            </Button>\n          </div>\n\n          {/* Add Facility Form */}\n          {showFacilityForm && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Add New Facility</CardTitle>\n                <CardDescription>\n                  Add a new facility for the project (e.g., office, warehouse, site office)\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleFacilitySubmit} className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"facility-type\">Facility Type *</Label>\n                      <Input\n                        id=\"facility-type\"\n                        value={facilityForm.type}\n                        onChange={(e) => setFacilityForm(prev => ({ ...prev, type: e.target.value }))}\n                        placeholder=\"e.g., Site Office, Warehouse, Storage\"\n                        required\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"facility-rent\">Daily Rent (EUR) *</Label>\n                      <Input\n                        id=\"facility-rent\"\n                        type=\"number\"\n                        step=\"0.01\"\n                        value={facilityForm.rent_daily_eur}\n                        onChange={(e) => setFacilityForm(prev => ({ ...prev, rent_daily_eur: e.target.value }))}\n                        placeholder=\"150.00\"\n                        required\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"facility-status\">Status</Label>\n                      <Select\n                        value={facilityForm.status}\n                        onValueChange={(value) => setFacilityForm(prev => ({ ...prev, status: value }))}\n                      >\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"planned\">🟡 Planned</SelectItem>\n                          <SelectItem value=\"active\">🟢 Active</SelectItem>\n                          <SelectItem value=\"completed\">🔵 Completed</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"service-freq\">Service Frequency</Label>\n                      <Input\n                        id=\"service-freq\"\n                        value={facilityForm.service_freq}\n                        onChange={(e) => setFacilityForm(prev => ({ ...prev, service_freq: e.target.value }))}\n                        placeholder=\"e.g., Weekly, Daily\"\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"start-date\">Start Date</Label>\n                      <Input\n                        id=\"start-date\"\n                        type=\"date\"\n                        value={facilityForm.start_date}\n                        onChange={(e) => setFacilityForm(prev => ({ ...prev, start_date: e.target.value }))}\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"end-date\">End Date</Label>\n                      <Input\n                        id=\"end-date\"\n                        type=\"date\"\n                        value={facilityForm.end_date}\n                        onChange={(e) => setFacilityForm(prev => ({ ...prev, end_date: e.target.value }))}\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"location\">Location</Label>\n                    <Input\n                      id=\"location\"\n                      value={facilityForm.location_text}\n                      onChange={(e) => setFacilityForm(prev => ({ ...prev, location_text: e.target.value }))}\n                      placeholder=\"Facility address or location description\"\n                    />\n                  </div>\n\n                  <div className=\"flex gap-2\">\n                    <Button\n                      type=\"submit\"\n                      disabled={createFacilityMutation.isPending}\n                    >\n                      Add Facility\n                    </Button>\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      onClick={() => setShowFacilityForm(false)}\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                </form>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Facilities List */}\n          <Card>\n            <CardContent className=\"p-6\">\n              {!facilities || facilities.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Building className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n                  <h3 className=\"text-lg font-medium mb-2\">No Facilities</h3>\n                  <p className=\"text-gray-600 mb-4\">\n                    Add facilities needed for the project.\n                  </p>\n                  <Button onClick={() => setShowFacilityForm(true)}>\n                    Add First Facility\n                  </Button>\n                </div>\n              ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Type</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Daily Rent</TableHead>\n                      <TableHead>Period</TableHead>\n                      <TableHead>Location</TableHead>\n                      <TableHead>Supplier</TableHead>\n                      <TableHead>Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {facilities.map((facility) => (\n                      <TableRow key={facility.id}>\n                        <TableCell className=\"font-medium\">\n                          {facility.type}\n                        </TableCell>\n                        <TableCell>\n                          <Badge className={getStatusColor(facility.status)}>\n                            {facility.status}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>\n                          €{facility.rent_daily_eur.toLocaleString()}/day\n                        </TableCell>\n                        <TableCell>\n                          {facility.start_date && facility.end_date ? (\n                            <span className=\"text-sm\">\n                              {facility.start_date} - {facility.end_date}\n                            </span>\n                          ) : facility.start_date ? (\n                            <span className=\"text-sm\">From {facility.start_date}</span>\n                          ) : (\n                            <span className=\"text-gray-400\">Not set</span>\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          {facility.location_text || (\n                            <span className=\"text-gray-400\">-</span>\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          {facility.supplier_name || (\n                            <span className=\"text-gray-400\">-</span>\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex gap-1\">\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <Edit className=\"w-4 h-4\" />\n                            </Button>\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <Trash2 className=\"w-4 h-4 text-red-500\" />\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Housing Tab */}\n        <TabsContent value=\"housing\" className=\"space-y-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h4 className=\"text-md font-medium\">Housing Units</h4>\n              <p className=\"text-sm text-gray-600\">\n                {housingUnits?.length || 0} housing units configured\n              </p>\n            </div>\n            <Button\n              onClick={() => setShowHousingForm(!showHousingForm)}\n              className=\"flex items-center gap-2\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              Add Housing\n            </Button>\n          </div>\n\n          {/* Add Housing Form */}\n          {showHousingForm && (\n            <Card>\n              <CardHeader>\n                <CardTitle>\n                  {editingHousingId ? 'Edit Housing Unit' : 'Add New Housing Unit'}\n                </CardTitle>\n                <CardDescription>\n                  {editingHousingId\n                    ? 'Update housing unit information'\n                    : 'Add accommodation for project team members'\n                  }\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleHousingSubmit} className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"md:col-span-2\">\n                      <Label htmlFor=\"housing-address\">Address *</Label>\n                      <Input\n                        id=\"housing-address\"\n                        value={housingForm.address}\n                        onChange={(e) => setHousingForm(prev => ({ ...prev, address: e.target.value }))}\n                        placeholder=\"Full address of the housing unit\"\n                        required\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"rooms\">Total Rooms *</Label>\n                      <Input\n                        id=\"rooms\"\n                        type=\"number\"\n                        min=\"1\"\n                        value={housingForm.rooms_total}\n                        onChange={(e) => setHousingForm(prev => ({ ...prev, rooms_total: e.target.value }))}\n                        placeholder=\"Number of rooms\"\n                        required\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"beds\">Total Beds *</Label>\n                      <Input\n                        id=\"beds\"\n                        type=\"number\"\n                        min=\"1\"\n                        value={housingForm.beds_total}\n                        onChange={(e) => setHousingForm(prev => ({ ...prev, beds_total: e.target.value }))}\n                        placeholder=\"Number of beds\"\n                        required\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"housing-rent\">Daily Rent (EUR) *</Label>\n                      <Input\n                        id=\"housing-rent\"\n                        type=\"number\"\n                        step=\"0.01\"\n                        value={housingForm.rent_daily_eur}\n                        onChange={(e) => setHousingForm(prev => ({ ...prev, rent_daily_eur: e.target.value }))}\n                        placeholder=\"Daily rental cost\"\n                        required\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"housing-status\">Status</Label>\n                      <Select\n                        value={housingForm.status}\n                        onValueChange={(value) => setHousingForm(prev => ({ ...prev, status: value }))}\n                      >\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"available\">🟢 Available</SelectItem>\n                          <SelectItem value=\"occupied\">🔴 Occupied</SelectItem>\n                          <SelectItem value=\"maintenance\">🟡 Maintenance</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  </div>\n\n                  <div className=\"flex gap-2\">\n                    <Button\n                      type=\"submit\"\n                      disabled={createHousingMutation.isPending || updateHousingMutation.isPending}\n                    >\n                      {editingHousingId ? 'Update Housing Unit' : 'Add Housing Unit'}\n                    </Button>\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      onClick={handleCancelHousingEdit}\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                </form>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Housing List */}\n          <Card>\n            <CardContent className=\"p-6\">\n              {!housingUnits || housingUnits.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Home className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n                  <h3 className=\"text-lg font-medium mb-2\">No Housing Units</h3>\n                  <p className=\"text-gray-600 mb-4\">\n                    Add housing accommodations for the project team.\n                  </p>\n                  <Button onClick={() => setShowHousingForm(true)}>\n                    Add First Housing Unit\n                  </Button>\n                </div>\n              ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Address</TableHead>\n                      <TableHead>Rooms</TableHead>\n                      <TableHead>Area (sqm)</TableHead>\n                      <TableHead>Type</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {housingUnits?.map((housing) => (\n                      <TableRow key={housing.id}>\n                        <TableCell className=\"font-medium\">\n                          {housing.full_address || housing.unit_number || 'N/A'}\n                        </TableCell>\n                        <TableCell>{housing.room_count || 'N/A'}</TableCell>\n                        <TableCell>{housing.area_sqm || 'N/A'}</TableCell>\n                        <TableCell>\n                          {housing.unit_type}\n                        </TableCell>\n                        <TableCell>\n                          <Badge className={getStatusColor(housing.status)}>\n                            {housing.status}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex gap-1\">\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => handleEditHousing(housing)}\n                              disabled={updateHousingMutation.isPending}\n                            >\n                              <Edit className=\"w-4 h-4\" />\n                            </Button>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => handleDeleteHousing(housing.id, housing.address)}\n                              disabled={deleteHousingMutation.isPending}\n                            >\n                              <Trash2 className=\"w-4 h-4 text-red-500\" />\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}