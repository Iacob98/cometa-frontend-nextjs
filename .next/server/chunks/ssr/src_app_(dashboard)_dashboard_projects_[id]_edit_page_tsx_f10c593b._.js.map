{"version":3,"sources":["turbopack:///[project]/src/app/(dashboard)/dashboard/projects/[id]/edit/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useParams, useRouter } from \"next/navigation\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { CalendarIcon, ArrowLeft, Save, Building2, AlertTriangle } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\n\nimport { useProject, useUpdateProject } from \"@/hooks/use-projects\";\nimport { usePermissions } from \"@/hooks/use-auth\";\nimport type { UpdateProjectRequest, Language } from \"@/types\";\n\nconst updateProjectSchema = z.object({\n  name: z.string().min(1, \"Project name is required\").max(255, \"Project name too long\"),\n  customer: z.string().optional(),\n  city: z.string().optional(),\n  address: z.string().optional(),\n  contact_24h: z.string().optional(),\n  start_date: z.string().optional(),\n  end_date_plan: z.string().optional(),\n  total_length_m: z.coerce.number().min(0, \"Length must be positive\"),\n  base_rate_per_m: z.coerce.number().min(0, \"Rate must be positive\"),\n  language_default: z.enum([\"ru\", \"en\", \"de\", \"uz\", \"tr\"]),\n  status: z.enum([\"draft\", \"active\", \"waiting_invoice\", \"closed\"]),\n});\n\ntype UpdateProjectFormData = z.infer<typeof updateProjectSchema>;\n\nexport default function EditProjectPage() {\n  const params = useParams();\n  const router = useRouter();\n  const { canManageProjects } = usePermissions();\n  const updateProject = useUpdateProject();\n\n  const projectId = params.id as string;\n  const { data: project, isLoading, error } = useProject(projectId);\n\n  const form = useForm<UpdateProjectFormData>({\n    resolver: zodResolver(updateProjectSchema),\n    defaultValues: {\n      name: \"\",\n      customer: \"\",\n      city: \"\",\n      address: \"\",\n      contact_24h: \"\",\n      start_date: \"\",\n      end_date_plan: \"\",\n      total_length_m: 0,\n      base_rate_per_m: 15.5,\n      language_default: \"de\",\n      status: \"draft\",\n    },\n  });\n\n  // Update form when project data loads\n  if (project && !form.formState.isDirty) {\n    form.reset({\n      name: project.name,\n      customer: project.customer || \"\",\n      city: project.city || \"\",\n      address: project.address || \"\",\n      contact_24h: project.contact_24h || \"\",\n      start_date: project.start_date ? new Date(project.start_date).toISOString().split('T')[0] : \"\",\n      end_date_plan: project.end_date_plan ? new Date(project.end_date_plan).toISOString().split('T')[0] : \"\",\n      total_length_m: project.total_length_m,\n      base_rate_per_m: project.base_rate_per_m,\n      language_default: project.language_default || \"de\",\n      status: project.status,\n    });\n  }\n\n  const onSubmit = async (data: UpdateProjectFormData) => {\n    try {\n      const projectData: UpdateProjectRequest = {\n        ...data,\n        start_date: data.start_date || undefined,\n        end_date_plan: data.end_date_plan || undefined,\n      };\n\n      await updateProject.mutateAsync({ id: projectId, data: projectData });\n      router.push(`/dashboard/projects/${projectId}`);\n    } catch (error) {\n      console.error(\"Failed to update project:\", error);\n    }\n  };\n\n  const languages: { value: Language; label: string }[] = [\n    { value: \"de\", label: \"German (Deutsch)\" },\n    { value: \"en\", label: \"English\" },\n    { value: \"ru\", label: \"Russian (Русский)\" },\n    { value: \"uz\", label: \"Uzbek (Oʻzbek)\" },\n    { value: \"tr\", label: \"Turkish (Türkçe)\" },\n  ];\n\n  const statusOptions = [\n    { value: \"draft\", label: \"Draft\" },\n    { value: \"active\", label: \"Active\" },\n    { value: \"waiting_invoice\", label: \"Waiting Invoice\" },\n    { value: \"closed\", label: \"Closed\" },\n  ];\n\n  if (!canManageProjects) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => router.back()}\n            className=\"flex items-center space-x-2\"\n          >\n            <ArrowLeft className=\"h-4 w-4\" />\n            <span>Back</span>\n          </Button>\n        </div>\n        <Card>\n          <CardContent className=\"py-8\">\n            <div className=\"text-center\">\n              <AlertTriangle className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n              <h3 className=\"mt-2 text-sm font-semibold\">Access Denied</h3>\n              <p className=\"mt-1 text-sm text-muted-foreground\">\n                You don&apos;t have permission to edit projects.\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"h-8 w-8 bg-muted animate-pulse rounded\" />\n          <div className=\"space-y-2\">\n            <div className=\"h-8 w-64 bg-muted animate-pulse rounded\" />\n            <div className=\"h-4 w-48 bg-muted animate-pulse rounded\" />\n          </div>\n        </div>\n        <div className=\"max-w-2xl space-y-6\">\n          {[...Array(3)].map((_, i) => (\n            <div key={i} className=\"h-48 bg-muted animate-pulse rounded-lg\" />\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !project) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => router.back()}\n            className=\"flex items-center space-x-2\"\n          >\n            <ArrowLeft className=\"h-4 w-4\" />\n            <span>Back</span>\n          </Button>\n        </div>\n        <Card>\n          <CardContent className=\"py-8\">\n            <div className=\"text-center\">\n              <AlertTriangle className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n              <h3 className=\"mt-2 text-sm font-semibold\">Project not found</h3>\n              <p className=\"mt-1 text-sm text-muted-foreground\">\n                The project you&apos;re looking for doesn&apos;t exist or you don&apos;t have permission to view it.\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => router.back()}\n            className=\"flex items-center space-x-2\"\n          >\n            <ArrowLeft className=\"h-4 w-4\" />\n            <span>Back</span>\n          </Button>\n          <div>\n            <h1 className=\"text-3xl font-bold tracking-tight\">Edit Project</h1>\n            <p className=\"text-muted-foreground\">\n              Modify project details and configuration\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Form */}\n      <div className=\"max-w-2xl\">\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            {/* Basic Information */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Building2 className=\"h-5 w-5\" />\n                  <span>Basic Information</span>\n                </CardTitle>\n                <CardDescription>\n                  Update the fundamental details about the project\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <FormField\n                  control={form.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Project Name *</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"e.g., Fiber Installation Berlin District 1\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormDescription>\n                        A clear, descriptive name for the project\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"customer\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Customer</FormLabel>\n                        <FormControl>\n                          <Input\n                            placeholder=\"e.g., Deutsche Telekom\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"city\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>City</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g., Berlin\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n\n                <FormField\n                  control={form.control}\n                  name=\"address\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Project Address</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"e.g., Hauptstraße 123, 10115 Berlin\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormDescription>\n                        Primary address or area where the work will be performed\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"contact_24h\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>24h Emergency Contact</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"e.g., +49 30 12345678\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormDescription>\n                        Contact number for emergencies during the project\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"language_default\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Default Language</FormLabel>\n                        <Select onValueChange={field.onChange} value={field.value}>\n                          <FormControl>\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Select project language\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            {languages.map((lang) => (\n                              <SelectItem key={lang.value} value={lang.value}>\n                                {lang.label}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                        <FormDescription>\n                          Primary language used for project documentation and interface\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"status\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Project Status</FormLabel>\n                        <Select onValueChange={field.onChange} value={field.value}>\n                          <FormControl>\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Select project status\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            {statusOptions.map((status) => (\n                              <SelectItem key={status.value} value={status.value}>\n                                {status.label}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                        <FormDescription>\n                          Current status of the project\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Project Scope */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Project Scope</CardTitle>\n                <CardDescription>\n                  Update the scope and financial parameters of the project\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"total_length_m\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Total Length (meters) *</FormLabel>\n                        <FormControl>\n                          <Input\n                            type=\"number\"\n                            step=\"0.01\"\n                            min=\"0\"\n                            placeholder=\"e.g., 1500\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          Total length of fiber cable to be installed\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"base_rate_per_m\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Rate per Meter (€) *</FormLabel>\n                        <FormControl>\n                          <Input\n                            type=\"number\"\n                            step=\"0.01\"\n                            min=\"0\"\n                            placeholder=\"e.g., 15.50\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          Base rate charged per meter of installation\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n\n                {/* Calculated Total */}\n                <div className=\"rounded-md bg-muted p-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"font-medium\">Estimated Project Value:</span>\n                    <span className=\"text-lg font-bold\">\n                      €{(form.watch(\"total_length_m\") * form.watch(\"base_rate_per_m\")).toLocaleString(\"de-DE\", {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2,\n                      })}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground mt-1\">\n                    {form.watch(\"total_length_m\")} meters × €{form.watch(\"base_rate_per_m\")} per meter\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Timeline */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <CalendarIcon className=\"h-5 w-5\" />\n                  <span>Project Timeline</span>\n                </CardTitle>\n                <CardDescription>\n                  Update the planned start and end dates (optional)\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"start_date\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Planned Start Date</FormLabel>\n                        <FormControl>\n                          <Input type=\"date\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"end_date_plan\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Planned End Date</FormLabel>\n                        <FormControl>\n                          <Input type=\"date\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Actions */}\n            <div className=\"flex justify-end space-x-4\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => router.back()}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                disabled={updateProject.isPending}\n                className=\"flex items-center space-x-2\"\n              >\n                {updateProject.isPending ? (\n                  <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-background border-t-transparent\" />\n                ) : (\n                  <Save className=\"h-4 w-4\" />\n                )}\n                <span>Save Changes</span>\n              </Button>\n            </div>\n          </form>\n        </Form>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}