{"version":3,"sources":["turbopack:///[project]/src/app/(dashboard)/dashboard/activities/page.tsx","turbopack:///[project]/src/hooks/use-activities.ts"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  Search,\n  Filter,\n  Calendar,\n  User,\n  Activity,\n  BarChart3,\n  Clock,\n  Users,\n  Download,\n  RefreshCw,\n  TrendingUp,\n  Eye\n} from \"lucide-react\";\n\nimport {\n  useActivities,\n  useActivityStats,\n  getActivityTypeLabel,\n  getActivityTypeColor,\n  ACTIVITY_TYPES,\n  type ActivityFilters\n} from \"@/hooks/use-activities\";\n\nexport default function ActivitiesPage() {\n  const router = useRouter();\n  const [filters, setFilters] = useState<ActivityFilters>({\n    page: 1,\n    per_page: 50,\n  });\n\n  const { data: activities, isLoading, error, refetch } = useActivities(filters);\n  const { data: stats, isLoading: statsLoading } = useActivityStats({\n    user_id: filters.user_id,\n    project_id: filters.project_id,\n    activity_type: filters.activity_type,\n    date_from: filters.date_from,\n    date_to: filters.date_to,\n  });\n\n  const handleFilterChange = (key: keyof ActivityFilters, value: string | number) => {\n    // Convert \"all\" values to undefined for proper filtering\n    const actualValue = value === \"all\" ? undefined : value;\n\n    setFilters(prev => ({\n      ...prev,\n      [key]: actualValue,\n      page: 1, // Reset to first page when filters change\n    }));\n  };\n\n  const handleDateRangeFilter = (range: string) => {\n    const now = new Date();\n    let dateFrom: string | undefined;\n\n    switch (range) {\n      case 'today':\n        dateFrom = new Date(now.getFullYear(), now.getMonth(), now.getDate()).toISOString();\n        break;\n      case 'week':\n        dateFrom = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000).toISOString();\n        break;\n      case 'month':\n        dateFrom = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000).toISOString();\n        break;\n      case 'all':\n      default:\n        dateFrom = undefined;\n        break;\n    }\n\n    setFilters(prev => ({\n      ...prev,\n      date_from: dateFrom,\n      page: 1,\n    }));\n  };\n\n  const formatTimestamp = (timestamp: string) => {\n    return new Date(timestamp).toLocaleString('en-GB', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  if (error) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <h1 className=\"text-3xl font-bold tracking-tight\">Activity Log</h1>\n        </div>\n        <Card>\n          <CardContent className=\"py-8\">\n            <div className=\"text-center\">\n              <Activity className=\"mx-auto h-12 w-12 text-red-500\" />\n              <h3 className=\"mt-2 text-sm font-semibold\">Error Loading Activities</h3>\n              <p className=\"mt-1 text-sm text-muted-foreground\">\n                Failed to load activity log. Please try again.\n              </p>\n              <Button onClick={() => refetch()} className=\"mt-4\">\n                <RefreshCw className=\"mr-2 h-4 w-4\" />\n                Retry\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Activity Log</h1>\n          <p className=\"text-muted-foreground\">\n            Complete audit trail of system activities and user actions\n          </p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <Button\n            variant=\"outline\"\n            onClick={() => refetch()}\n            disabled={isLoading}\n          >\n            <RefreshCw className={`mr-2 h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\n            Refresh\n          </Button>\n          <Button variant=\"outline\">\n            <Download className=\"mr-2 h-4 w-4\" />\n            Export\n          </Button>\n        </div>\n      </div>\n\n      <Tabs defaultValue=\"activities\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"activities\">\n            Activity Log ({activities?.total || 0})\n          </TabsTrigger>\n          <TabsTrigger value=\"analytics\">\n            <BarChart3 className=\"mr-2 h-4 w-4\" />\n            Analytics\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"activities\" className=\"space-y-6\">\n          {/* Statistics Cards */}\n          {stats && (\n            <div className=\"grid gap-6 md:grid-cols-4\">\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Total Activities</CardTitle>\n                  <Activity className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{stats.overview.total_activities}</div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    All logged activities\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Active Users</CardTitle>\n                  <Users className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{stats.overview.unique_users}</div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Users with activity\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Activity Types</CardTitle>\n                  <BarChart3 className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{stats.overview.activity_types_count}</div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Different action types\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Active Projects</CardTitle>\n                  <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{stats.overview.active_projects}</div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Projects with activity\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n          )}\n\n          {/* Filters */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Filter className=\"w-5 h-5\" />\n                Filter Activities\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-6 gap-4\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n                  <Input\n                    placeholder=\"Search activities...\"\n                    className=\"pl-9\"\n                    value={filters.search || ''}\n                    onChange={(e) => handleFilterChange('search', e.target.value)}\n                  />\n                </div>\n\n                <Select onValueChange={(value) => handleFilterChange('activity_type', value)}>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Activity type\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Types</SelectItem>\n                    {ACTIVITY_TYPES.map((type) => (\n                      <SelectItem key={type} value={type}>\n                        {getActivityTypeLabel(type)}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n\n                <Select onValueChange={handleDateRangeFilter}>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Time range\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Time</SelectItem>\n                    <SelectItem value=\"today\">Today</SelectItem>\n                    <SelectItem value=\"week\">Last 7 Days</SelectItem>\n                    <SelectItem value=\"month\">Last 30 Days</SelectItem>\n                  </SelectContent>\n                </Select>\n\n                <Input\n                  type=\"datetime-local\"\n                  placeholder=\"From date\"\n                  value={filters.date_from ? new Date(filters.date_from).toISOString().slice(0, 16) : ''}\n                  onChange={(e) => handleFilterChange('date_from', e.target.value ? new Date(e.target.value).toISOString() : '')}\n                />\n\n                <Input\n                  type=\"datetime-local\"\n                  placeholder=\"To date\"\n                  value={filters.date_to ? new Date(filters.date_to).toISOString().slice(0, 16) : ''}\n                  onChange={(e) => handleFilterChange('date_to', e.target.value ? new Date(e.target.value).toISOString() : '')}\n                />\n\n                <Select onValueChange={(value) => handleFilterChange('per_page', parseInt(value))}>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Page size\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"25\">25 per page</SelectItem>\n                    <SelectItem value=\"50\">50 per page</SelectItem>\n                    <SelectItem value=\"100\">100 per page</SelectItem>\n                    <SelectItem value=\"200\">200 per page</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Activities Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Activity Log</CardTitle>\n              <CardDescription>\n                {activities?.total || 0} activities found\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {isLoading ? (\n                <div className=\"space-y-4\">\n                  {[...Array(10)].map((_, i) => (\n                    <div key={i} className=\"flex space-x-4\">\n                      <Skeleton className=\"h-4 w-[100px]\" />\n                      <Skeleton className=\"h-4 w-[150px]\" />\n                      <Skeleton className=\"h-4 w-[200px]\" />\n                      <Skeleton className=\"h-4 w-[100px]\" />\n                      <Skeleton className=\"h-4 w-[80px]\" />\n                    </div>\n                  ))}\n                </div>\n              ) : !activities?.activities || activities.activities.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Activity className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n                  <h3 className=\"text-lg font-medium mb-2\">No Activities Found</h3>\n                  <p className=\"text-gray-600 mb-4\">\n                    No activities match the current filters.\n                  </p>\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => setFilters({ page: 1, per_page: 50 })}\n                  >\n                    Clear Filters\n                  </Button>\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Timestamp</TableHead>\n                        <TableHead>User</TableHead>\n                        <TableHead>Activity</TableHead>\n                        <TableHead>Description</TableHead>\n                        <TableHead>Project</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {activities.activities.map((activity) => (\n                        <TableRow key={activity.id}>\n                          <TableCell>\n                            <div className=\"flex items-center gap-2\">\n                              <Clock className=\"w-4 h-4 text-gray-400\" />\n                              <span className=\"text-sm\">\n                                {formatTimestamp(activity.timestamp)}\n                              </span>\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex items-center gap-2\">\n                              <User className=\"w-4 h-4 text-gray-400\" />\n                              <div>\n                                <div className=\"font-medium text-sm\">\n                                  {activity.user?.name || 'Unknown User'}\n                                </div>\n                                {activity.user?.role && (\n                                  <div className=\"text-xs text-muted-foreground\">\n                                    {activity.user.role}\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <Badge className={getActivityTypeColor(activity.activity_type)}>\n                              {getActivityTypeLabel(activity.activity_type)}\n                            </Badge>\n                          </TableCell>\n                          <TableCell>\n                            <span className=\"text-sm max-w-xs truncate block\">\n                              {activity.description}\n                            </span>\n                          </TableCell>\n                          <TableCell>\n                            {activity.project ? (\n                              <span className=\"text-sm font-medium\">\n                                {activity.project.name}\n                              </span>\n                            ) : (\n                              <span className=\"text-sm text-muted-foreground\">—</span>\n                            )}\n                          </TableCell>\n                          <TableCell>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => {\n                                // Show activity details in a modal or navigate to details page\n                                console.log('View activity details:', activity);\n                              }}\n                            >\n                              <Eye className=\"w-4 h-4\" />\n                            </Button>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Pagination */}\n          {activities && activities.total_pages > 1 && (\n            <div className=\"flex items-center justify-between\">\n              <p className=\"text-sm text-muted-foreground\">\n                Showing {((activities.page - 1) * activities.per_page) + 1} to{' '}\n                {Math.min(activities.page * activities.per_page, activities.total)} of{' '}\n                {activities.total} activities\n              </p>\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handleFilterChange('page', Math.max(1, (filters.page || 1) - 1))}\n                  disabled={activities.page <= 1}\n                >\n                  Previous\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handleFilterChange('page', (filters.page || 1) + 1)}\n                  disabled={activities.page >= activities.total_pages}\n                >\n                  Next\n                </Button>\n              </div>\n            </div>\n          )}\n        </TabsContent>\n\n        <TabsContent value=\"analytics\" className=\"space-y-6\">\n          {statsLoading ? (\n            <div className=\"grid gap-6 md:grid-cols-2\">\n              {[...Array(4)].map((_, i) => (\n                <Card key={i}>\n                  <CardContent className=\"p-6\">\n                    <Skeleton className=\"h-48 w-full\" />\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          ) : stats ? (\n            <>\n              {/* Activity Types Breakdown */}\n              <Card>\n                <CardHeader>\n                  <CardTitle>Activity Types</CardTitle>\n                  <CardDescription>\n                    Distribution of activity types\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {stats.activity_types.slice(0, 10).map((type) => (\n                      <div key={type.activity_type} className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-3\">\n                          <Badge className={getActivityTypeColor(type.activity_type)}>\n                            {getActivityTypeLabel(type.activity_type)}\n                          </Badge>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <span className=\"text-sm font-medium\">{type.count}</span>\n                          <span className=\"text-sm text-muted-foreground\">\n                            ({type.percentage.toFixed(1)}%)\n                          </span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Most Active Users */}\n              <Card>\n                <CardHeader>\n                  <CardTitle>Most Active Users</CardTitle>\n                  <CardDescription>\n                    Users with the highest activity\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {stats.most_active_users.slice(0, 10).map((user, index) => (\n                      <div key={user.user_id} className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-3\">\n                          <div className=\"w-6 h-6 rounded-full bg-primary text-primary-foreground text-xs flex items-center justify-center\">\n                            {index + 1}\n                          </div>\n                          <div>\n                            <div className=\"font-medium\">{user.user_name}</div>\n                            <div className=\"text-sm text-muted-foreground\">{user.role}</div>\n                          </div>\n                        </div>\n                        <div className=\"text-sm font-medium\">\n                          {user.activity_count} activities\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Project Activity */}\n              {stats.project_activity.length > 0 && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Project Activity</CardTitle>\n                    <CardDescription>\n                      Most active projects\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      {stats.project_activity.slice(0, 10).map((project, index) => (\n                        <div key={project.project_id} className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center gap-3\">\n                            <div className=\"w-6 h-6 rounded-full bg-secondary text-secondary-foreground text-xs flex items-center justify-center\">\n                              {index + 1}\n                            </div>\n                            <div className=\"font-medium\">{project.project_name}</div>\n                          </div>\n                          <div className=\"text-sm font-medium\">\n                            {project.activity_count} activities\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </>\n          ) : (\n            <Card>\n              <CardContent className=\"py-8\">\n                <div className=\"text-center text-muted-foreground\">\n                  No analytics data available\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}","'use client';\n\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { toast } from 'sonner';\n\nexport interface ActivityLog {\n  id: string;\n  user_id?: string;\n  project_id?: string;\n  activity_type: string;\n  description: string;\n  target_type?: string;\n  target_id?: string;\n  extra_data?: any;\n  timestamp: string;\n  ip_address?: string;\n  user_agent?: string;\n  user?: {\n    id: string;\n    name: string;\n    email?: string;\n    role?: string;\n  };\n  project?: {\n    id: string;\n    name: string;\n  };\n}\n\nexport interface ActivitiesResponse {\n  activities: ActivityLog[];\n  total: number;\n  page: number;\n  per_page: number;\n  total_pages: number;\n}\n\nexport interface ActivityFilters {\n  user_id?: string;\n  project_id?: string;\n  activity_type?: string;\n  date_from?: string;\n  date_to?: string;\n  search?: string;\n  page?: number;\n  per_page?: number;\n}\n\nexport interface ActivityStats {\n  overview: {\n    total_activities: number;\n    unique_users: number;\n    activity_types_count: number;\n    active_projects: number;\n  };\n  activity_types: Array<{\n    activity_type: string;\n    count: number;\n    percentage: number;\n  }>;\n  most_active_users: Array<{\n    user_id: string;\n    user_name: string;\n    role: string;\n    activity_count: number;\n  }>;\n  hourly_timeline: Array<{\n    hour: number;\n    activity_count: number;\n  }>;\n  project_activity: Array<{\n    project_id: string;\n    project_name: string;\n    activity_count: number;\n  }>;\n}\n\nexport interface CreateActivityData {\n  user_id: string;\n  project_id?: string;\n  activity_type: string;\n  description: string;\n  target_type?: string;\n  target_id?: string;\n  extra_data?: any;\n  ip_address?: string;\n  user_agent?: string;\n}\n\n// Query keys\nexport const activityKeys = {\n  all: ['activities'] as const,\n  lists: () => [...activityKeys.all, 'list'] as const,\n  list: (filters: ActivityFilters) => [...activityKeys.lists(), filters] as const,\n  stats: (filters: Omit<ActivityFilters, 'page' | 'per_page' | 'search'>) =>\n    [...activityKeys.all, 'stats', filters] as const,\n};\n\n// Fetch activities with filters\nexport function useActivities(filters: ActivityFilters = {}) {\n  const searchParams = new URLSearchParams();\n\n  Object.entries(filters).forEach(([key, value]) => {\n    if (value !== undefined && value !== null && value !== '') {\n      searchParams.append(key, value.toString());\n    }\n  });\n\n  return useQuery({\n    queryKey: activityKeys.list(filters),\n    queryFn: async (): Promise<ActivitiesResponse> => {\n      const response = await fetch(`/api/activities?${searchParams.toString()}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch activities');\n      }\n      return response.json();\n    },\n  });\n}\n\n// Fetch activity statistics\nexport function useActivityStats(filters: Omit<ActivityFilters, 'page' | 'per_page' | 'search'> = {}) {\n  const searchParams = new URLSearchParams();\n\n  Object.entries(filters).forEach(([key, value]) => {\n    if (value !== undefined && value !== null && value !== '') {\n      searchParams.append(key, value.toString());\n    }\n  });\n\n  return useQuery({\n    queryKey: activityKeys.stats(filters),\n    queryFn: async (): Promise<ActivityStats> => {\n      const response = await fetch(`/api/activities/stats?${searchParams.toString()}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch activity statistics');\n      }\n      return response.json();\n    },\n  });\n}\n\n// Log new activity\nexport function useLogActivity() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (data: CreateActivityData) => {\n      // Get client IP and user agent\n      const activityData = {\n        ...data,\n        ip_address: data.ip_address || 'unknown',\n        user_agent: data.user_agent || navigator.userAgent,\n      };\n\n      const response = await fetch('/api/activities', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(activityData),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to log activity');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      // Invalidate all activity queries to refresh data\n      queryClient.invalidateQueries({ queryKey: activityKeys.all });\n    },\n    onError: (error: Error) => {\n      console.error('Failed to log activity:', error);\n      // Don't show toast for activity logging errors as they should be silent\n    },\n  });\n}\n\n// Specialized hooks for common use cases\nexport function useUserActivities(userId?: string) {\n  return useActivities({\n    user_id: userId,\n    page: 1,\n    per_page: 20,\n  });\n}\n\nexport function useProjectActivities(projectId?: string) {\n  return useActivities({\n    project_id: projectId,\n    page: 1,\n    per_page: 30,\n  });\n}\n\nexport function useRecentActivities(limit = 10) {\n  return useActivities({\n    page: 1,\n    per_page: limit,\n  });\n}\n\n// Activity types for filtering\nexport const ACTIVITY_TYPES = [\n  'login',\n  'logout',\n  'project_created',\n  'project_updated',\n  'project_deleted',\n  'work_entry_created',\n  'work_entry_updated',\n  'work_entry_approved',\n  'work_entry_deleted',\n  'crew_created',\n  'crew_updated',\n  'crew_deleted',\n  'user_created',\n  'user_updated',\n  'user_deleted',\n  'equipment_created',\n  'equipment_updated',\n  'equipment_deleted',\n  'equipment_assigned',\n  'material_allocated',\n  'material_used',\n  'expense_created',\n  'expense_approved',\n  'document_uploaded',\n  'document_deleted',\n  'report_generated',\n  'settings_updated',\n] as const;\n\nexport type ActivityType = typeof ACTIVITY_TYPES[number];\n\n// Helper function to get activity type label\nexport function getActivityTypeLabel(type: string): string {\n  const labels: Record<string, string> = {\n    login: 'User Login',\n    logout: 'User Logout',\n    project_created: 'Project Created',\n    project_updated: 'Project Updated',\n    project_deleted: 'Project Deleted',\n    work_entry_created: 'Work Entry Created',\n    work_entry_updated: 'Work Entry Updated',\n    work_entry_approved: 'Work Entry Approved',\n    work_entry_deleted: 'Work Entry Deleted',\n    crew_created: 'Team Created',\n    crew_updated: 'Team Updated',\n    crew_deleted: 'Team Deleted',\n    user_created: 'User Created',\n    user_updated: 'User Updated',\n    user_deleted: 'User Deleted',\n    equipment_created: 'Equipment Added',\n    equipment_updated: 'Equipment Updated',\n    equipment_deleted: 'Equipment Deleted',\n    equipment_assigned: 'Equipment Assigned',\n    material_allocated: 'Material Allocated',\n    material_used: 'Material Used',\n    expense_created: 'Expense Created',\n    expense_approved: 'Expense Approved',\n    document_uploaded: 'Document Uploaded',\n    document_deleted: 'Document Deleted',\n    report_generated: 'Report Generated',\n    settings_updated: 'Settings Updated',\n  };\n\n  return labels[type] || type.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n}\n\n// Helper function to get activity type color\nexport function getActivityTypeColor(type: string): string {\n  const colors: Record<string, string> = {\n    login: 'bg-green-100 text-green-800',\n    logout: 'bg-gray-100 text-gray-800',\n    project_created: 'bg-blue-100 text-blue-800',\n    project_updated: 'bg-yellow-100 text-yellow-800',\n    project_deleted: 'bg-red-100 text-red-800',\n    work_entry_created: 'bg-purple-100 text-purple-800',\n    work_entry_updated: 'bg-purple-100 text-purple-800',\n    work_entry_approved: 'bg-green-100 text-green-800',\n    work_entry_deleted: 'bg-red-100 text-red-800',\n    crew_created: 'bg-indigo-100 text-indigo-800',\n    crew_updated: 'bg-indigo-100 text-indigo-800',\n    crew_deleted: 'bg-red-100 text-red-800',\n    user_created: 'bg-emerald-100 text-emerald-800',\n    user_updated: 'bg-emerald-100 text-emerald-800',\n    user_deleted: 'bg-red-100 text-red-800',\n    equipment_created: 'bg-orange-100 text-orange-800',\n    equipment_updated: 'bg-orange-100 text-orange-800',\n    equipment_deleted: 'bg-red-100 text-red-800',\n    equipment_assigned: 'bg-cyan-100 text-cyan-800',\n    material_allocated: 'bg-teal-100 text-teal-800',\n    material_used: 'bg-teal-100 text-teal-800',\n    expense_created: 'bg-rose-100 text-rose-800',\n    expense_approved: 'bg-green-100 text-green-800',\n    document_uploaded: 'bg-violet-100 text-violet-800',\n    document_deleted: 'bg-red-100 text-red-800',\n    report_generated: 'bg-sky-100 text-sky-800',\n    settings_updated: 'bg-slate-100 text-slate-800',\n  };\n\n  return colors[type] || 'bg-gray-100 text-gray-800';\n}"],"names":[],"mappings":"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"}