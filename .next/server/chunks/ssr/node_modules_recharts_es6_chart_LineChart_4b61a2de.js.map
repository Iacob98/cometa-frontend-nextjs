{"version":3,"sources":["turbopack:///[project]/node_modules/recharts/es6/chart/LineChart.js","turbopack:///[project]/node_modules/recharts/es6/cartesian/Line.js","turbopack:///[project]/node_modules/recharts/es6/state/selectors/lineSelectors.js"],"sourcesContent":["import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { arrayTooltipSearcher } from '../state/optionsSlice';\nimport { CartesianChart } from './CartesianChart';\nvar allowedTooltipTypes = ['axis'];\nexport var LineChart = /*#__PURE__*/forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(CartesianChart, {\n    chartName: \"LineChart\",\n    defaultTooltipEventType: \"axis\",\n    validateTooltipEventTypes: allowedTooltipTypes,\n    tooltipPayloadSearcher: arrayTooltipSearcher,\n    categoricalChartProps: props,\n    ref: ref\n  });\n});","var _excluded = [\"id\"],\n  _excluded2 = [\"type\", \"layout\", \"connectNulls\", \"needClip\"],\n  _excluded3 = [\"activeDot\", \"animateNewValues\", \"animationBegin\", \"animationDuration\", \"animationEasing\", \"connectNulls\", \"dot\", \"hide\", \"isAnimationActive\", \"label\", \"legendType\", \"xAxisId\", \"yAxisId\", \"id\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from 'react';\nimport { Component, useCallback, useMemo, useRef, useState } from 'react';\nimport { clsx } from 'clsx';\nimport { Curve } from '../shape/Curve';\nimport { Dot } from '../shape/Dot';\nimport { Layer } from '../container/Layer';\nimport { CartesianLabelListContextProvider, LabelListFromLabelProp } from '../component/LabelList';\nimport { interpolate, isNullish } from '../util/DataUtils';\nimport { filterProps, isClipDot } from '../util/ReactUtils';\nimport { Global } from '../util/Global';\nimport { getCateCoordinateOfLine, getTooltipNameProp, getValueByDataKey } from '../util/ChartUtils';\nimport { ActivePoints } from '../component/ActivePoints';\nimport { SetTooltipEntrySettings } from '../state/SetTooltipEntrySettings';\nimport { SetErrorBarContext } from '../context/ErrorBarContext';\nimport { GraphicalItemClipPath, useNeedsClip } from './GraphicalItemClipPath';\nimport { useChartLayout } from '../context/chartLayoutContext';\nimport { useIsPanorama } from '../context/PanoramaContext';\nimport { selectLinePoints } from '../state/selectors/lineSelectors';\nimport { useAppSelector } from '../state/hooks';\nimport { SetLegendPayload } from '../state/SetLegendPayload';\nimport { useAnimationId } from '../util/useAnimationId';\nimport { resolveDefaultProps } from '../util/resolveDefaultProps';\nimport { usePlotArea } from '../hooks';\nimport { RegisterGraphicalItemId } from '../context/RegisterGraphicalItemId';\nimport { SetCartesianGraphicalItem } from '../state/SetGraphicalItem';\nimport { svgPropertiesNoEvents } from '../util/svgPropertiesNoEvents';\nimport { JavascriptAnimate } from '../animation/JavascriptAnimate';\n\n/**\n * Internal props, combination of external props + defaultProps + private Recharts state\n */\n\n/**\n * External props, intended for end users to fill in\n */\n\n/**\n * Because of naming conflict, we are forced to ignore certain (valid) SVG attributes.\n */\n\nvar computeLegendPayloadFromAreaData = props => {\n  var {\n    dataKey,\n    name,\n    stroke,\n    legendType,\n    hide\n  } = props;\n  return [{\n    inactive: hide,\n    dataKey,\n    type: legendType,\n    color: stroke,\n    value: getTooltipNameProp(name, dataKey),\n    payload: props\n  }];\n};\nfunction getTooltipEntrySettings(props) {\n  var {\n    dataKey,\n    data,\n    stroke,\n    strokeWidth,\n    fill,\n    name,\n    hide,\n    unit\n  } = props;\n  return {\n    dataDefinedOnItem: data,\n    positions: undefined,\n    settings: {\n      stroke,\n      strokeWidth,\n      fill,\n      dataKey,\n      nameKey: undefined,\n      name: getTooltipNameProp(name, dataKey),\n      hide,\n      type: props.tooltipType,\n      color: props.stroke,\n      unit\n    }\n  };\n}\nvar generateSimpleStrokeDasharray = (totalLength, length) => {\n  return \"\".concat(length, \"px \").concat(totalLength - length, \"px\");\n};\nfunction repeat(lines, count) {\n  var linesUnit = lines.length % 2 !== 0 ? [...lines, 0] : lines;\n  var result = [];\n  for (var i = 0; i < count; ++i) {\n    result = [...result, ...linesUnit];\n  }\n  return result;\n}\nvar getStrokeDasharray = (length, totalLength, lines) => {\n  var lineLength = lines.reduce((pre, next) => pre + next);\n\n  // if lineLength is 0 return the default when no strokeDasharray is provided\n  if (!lineLength) {\n    return generateSimpleStrokeDasharray(totalLength, length);\n  }\n  var count = Math.floor(length / lineLength);\n  var remainLength = length % lineLength;\n  var restLength = totalLength - length;\n  var remainLines = [];\n  for (var i = 0, sum = 0; i < lines.length; sum += lines[i], ++i) {\n    if (sum + lines[i] > remainLength) {\n      remainLines = [...lines.slice(0, i), remainLength - sum];\n      break;\n    }\n  }\n  var emptyLines = remainLines.length % 2 === 0 ? [0, restLength] : [restLength];\n  return [...repeat(lines, count), ...remainLines, ...emptyLines].map(line => \"\".concat(line, \"px\")).join(', ');\n};\nfunction renderDotItem(option, props) {\n  var dotItem;\n  if (/*#__PURE__*/React.isValidElement(option)) {\n    dotItem = /*#__PURE__*/React.cloneElement(option, props);\n  } else if (typeof option === 'function') {\n    dotItem = option(props);\n  } else {\n    var className = clsx('recharts-line-dot', typeof option !== 'boolean' ? option.className : '');\n    dotItem = /*#__PURE__*/React.createElement(Dot, _extends({}, props, {\n      className: className\n    }));\n  }\n  return dotItem;\n}\nfunction shouldRenderDots(points, dot) {\n  if (points == null) {\n    return false;\n  }\n  if (dot) {\n    return true;\n  }\n  return points.length === 1;\n}\nfunction Dots(_ref) {\n  var {\n    clipPathId,\n    points,\n    props\n  } = _ref;\n  var {\n    dot,\n    dataKey,\n    needClip\n  } = props;\n  if (!shouldRenderDots(points, dot)) {\n    return null;\n  }\n\n  /*\n   * Exclude ID from the props passed to the Dots component\n   * because then the ID would be applied to multiple dots and it would no longer be unique.\n   */\n  var {\n      id\n    } = props,\n    propsWithoutId = _objectWithoutProperties(props, _excluded);\n  var clipDot = isClipDot(dot);\n  var lineProps = svgPropertiesNoEvents(propsWithoutId);\n  var customDotProps = filterProps(dot, true);\n  var dots = points.map((entry, i) => {\n    var dotProps = _objectSpread(_objectSpread(_objectSpread({\n      key: \"dot-\".concat(i),\n      r: 3\n    }, lineProps), customDotProps), {}, {\n      index: i,\n      cx: entry.x,\n      cy: entry.y,\n      dataKey,\n      value: entry.value,\n      payload: entry.payload,\n      points\n    });\n    return renderDotItem(dot, dotProps);\n  });\n  var dotsProps = {\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipDot ? '' : 'dots-').concat(clipPathId, \")\") : undefined\n  };\n  return /*#__PURE__*/React.createElement(Layer, _extends({\n    className: \"recharts-line-dots\",\n    key: \"dots\"\n  }, dotsProps), dots);\n}\nfunction LineLabelListProvider(_ref2) {\n  var {\n    showLabels,\n    children,\n    points\n  } = _ref2;\n  var labelListEntries = useMemo(() => {\n    return points === null || points === void 0 ? void 0 : points.map(point => {\n      var viewBox = {\n        x: point.x,\n        y: point.y,\n        width: 0,\n        height: 0\n      };\n      return _objectSpread(_objectSpread({}, viewBox), {}, {\n        value: point.value,\n        payload: point.payload,\n        viewBox,\n        /*\n         * Line is not passing parentViewBox to the LabelList so the labels can escape - looks like a bug, should we pass parentViewBox?\n         * Or should this just be the root chart viewBox?\n         */\n        parentViewBox: undefined,\n        fill: undefined\n      });\n    });\n  }, [points]);\n  return /*#__PURE__*/React.createElement(CartesianLabelListContextProvider, {\n    value: showLabels ? labelListEntries : null\n  }, children);\n}\nfunction StaticCurve(_ref3) {\n  var {\n    clipPathId,\n    pathRef,\n    points,\n    strokeDasharray,\n    props\n  } = _ref3;\n  var {\n      type,\n      layout,\n      connectNulls,\n      needClip\n    } = props,\n    others = _objectWithoutProperties(props, _excluded2);\n  var curveProps = _objectSpread(_objectSpread({}, filterProps(others, true)), {}, {\n    fill: 'none',\n    className: 'recharts-line-curve',\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : undefined,\n    points,\n    type,\n    layout,\n    connectNulls,\n    strokeDasharray: strokeDasharray !== null && strokeDasharray !== void 0 ? strokeDasharray : props.strokeDasharray\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, (points === null || points === void 0 ? void 0 : points.length) > 1 && /*#__PURE__*/React.createElement(Curve, _extends({}, curveProps, {\n    pathRef: pathRef\n  })), /*#__PURE__*/React.createElement(Dots, {\n    points: points,\n    clipPathId: clipPathId,\n    props: props\n  }));\n}\nfunction getTotalLength(mainCurve) {\n  try {\n    return mainCurve && mainCurve.getTotalLength && mainCurve.getTotalLength() || 0;\n  } catch (_unused) {\n    return 0;\n  }\n}\nfunction CurveWithAnimation(_ref4) {\n  var {\n    clipPathId,\n    props,\n    pathRef,\n    previousPointsRef,\n    longestAnimatedLengthRef\n  } = _ref4;\n  var {\n    points,\n    strokeDasharray,\n    isAnimationActive,\n    animationBegin,\n    animationDuration,\n    animationEasing,\n    animateNewValues,\n    width,\n    height,\n    onAnimationEnd,\n    onAnimationStart\n  } = props;\n  var prevPoints = previousPointsRef.current;\n  var animationId = useAnimationId(props, 'recharts-line-');\n  var [isAnimating, setIsAnimating] = useState(false);\n  var showLabels = !isAnimating;\n  var handleAnimationEnd = useCallback(() => {\n    if (typeof onAnimationEnd === 'function') {\n      onAnimationEnd();\n    }\n    setIsAnimating(false);\n  }, [onAnimationEnd]);\n  var handleAnimationStart = useCallback(() => {\n    if (typeof onAnimationStart === 'function') {\n      onAnimationStart();\n    }\n    setIsAnimating(true);\n  }, [onAnimationStart]);\n  var totalLength = getTotalLength(pathRef.current);\n  /*\n   * Here we want to detect if the length animation has been interrupted.\n   * For that we keep a reference to the furthest length that has been animated.\n   *\n   * And then, to keep things smooth, we add to it the current length that is being animated right now.\n   *\n   * If we did Math.max then it makes the length animation \"pause\" but we want to keep it smooth\n   * so in case we have some \"leftover\" length from the previous animation we add it to the current length.\n   *\n   * This is not perfect because the animation changes speed due to easing. The default easing is 'ease' which is not linear\n   * and makes it stand out. But it's good enough I suppose.\n   * If we want to fix it then we need to keep track of multiple animations and their easing and timings.\n   *\n   * If you want to see this in action, try to change the dataKey of the line chart while the initial animation is running.\n   * The Line begins with zero length and slowly grows to the full length. While this growth is in progress,\n   * change the dataKey and the Line will continue growing from where it has grown so far.\n   */\n  var startingPoint = longestAnimatedLengthRef.current;\n  return /*#__PURE__*/React.createElement(LineLabelListProvider, {\n    points: points,\n    showLabels: showLabels\n  }, props.children, /*#__PURE__*/React.createElement(JavascriptAnimate, {\n    animationId: animationId,\n    begin: animationBegin,\n    duration: animationDuration,\n    isActive: isAnimationActive,\n    easing: animationEasing,\n    onAnimationEnd: handleAnimationEnd,\n    onAnimationStart: handleAnimationStart,\n    key: animationId\n  }, t => {\n    var lengthInterpolated = interpolate(startingPoint, totalLength + startingPoint, t);\n    var curLength = Math.min(lengthInterpolated, totalLength);\n    var currentStrokeDasharray;\n    if (isAnimationActive) {\n      if (strokeDasharray) {\n        var lines = \"\".concat(strokeDasharray).split(/[,\\s]+/gim).map(num => parseFloat(num));\n        currentStrokeDasharray = getStrokeDasharray(curLength, totalLength, lines);\n      } else {\n        currentStrokeDasharray = generateSimpleStrokeDasharray(totalLength, curLength);\n      }\n    } else {\n      currentStrokeDasharray = strokeDasharray == null ? undefined : String(strokeDasharray);\n    }\n    if (prevPoints) {\n      var prevPointsDiffFactor = prevPoints.length / points.length;\n      var stepData = t === 1 ? points : points.map((entry, index) => {\n        var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n        if (prevPoints[prevPointIndex]) {\n          var prev = prevPoints[prevPointIndex];\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            x: interpolate(prev.x, entry.x, t),\n            y: interpolate(prev.y, entry.y, t)\n          });\n        }\n\n        // magic number of faking previous x and y location\n        if (animateNewValues) {\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            x: interpolate(width * 2, entry.x, t),\n            y: interpolate(height / 2, entry.y, t)\n          });\n        }\n        return _objectSpread(_objectSpread({}, entry), {}, {\n          x: entry.x,\n          y: entry.y\n        });\n      });\n      // eslint-disable-next-line no-param-reassign\n      previousPointsRef.current = stepData;\n      return /*#__PURE__*/React.createElement(StaticCurve, {\n        props: props,\n        points: stepData,\n        clipPathId: clipPathId,\n        pathRef: pathRef,\n        strokeDasharray: currentStrokeDasharray\n      });\n    }\n\n    /*\n     * Here it is important to wait a little bit with updating the previousPointsRef\n     * before the animation has a time to initialize.\n     * If we set the previous pointsRef immediately, we set it before the Legend height it calculated\n     * and before pathRef is set.\n     * If that happens, the Line will re-render again after Legend had reported its height\n     * which will start a new animation with the previous points as the starting point\n     * which gives the effect of the Line animating slightly upwards (where the animation distance equals the Legend height).\n     * Waiting for t > 0 is indirect but good enough to ensure that the Legend height is calculated and animation works properly.\n     *\n     * Total length similarly is calculated from the pathRef. We should not update the previousPointsRef\n     * before the pathRef is set, otherwise we will have a wrong total length.\n     */\n    if (t > 0 && totalLength > 0) {\n      // eslint-disable-next-line no-param-reassign\n      previousPointsRef.current = points;\n      /*\n       * totalLength is set from a ref and is not updated in the first tick of the animation.\n       * It defaults to zero which is exactly what we want here because we want to grow from zero,\n       * however the same happens when the data change.\n       *\n       * In that case we want to remember the previous length and continue from there, and only animate the shape.\n       *\n       * Therefore the totalLength > 0 check.\n       *\n       * The Animate is about to fire handleAnimationStart which will update the state\n       * and cause a re-render and read a new proper totalLength which will be used in the next tick\n       * and update the longestAnimatedLengthRef.\n       */\n      // eslint-disable-next-line no-param-reassign\n      longestAnimatedLengthRef.current = curLength;\n    }\n    return /*#__PURE__*/React.createElement(StaticCurve, {\n      props: props,\n      points: points,\n      clipPathId: clipPathId,\n      pathRef: pathRef,\n      strokeDasharray: currentStrokeDasharray\n    });\n  }), /*#__PURE__*/React.createElement(LabelListFromLabelProp, {\n    label: props.label\n  }));\n}\nfunction RenderCurve(_ref5) {\n  var {\n    clipPathId,\n    props\n  } = _ref5;\n  var previousPointsRef = useRef(null);\n  var longestAnimatedLengthRef = useRef(0);\n  var pathRef = useRef(null);\n  return /*#__PURE__*/React.createElement(CurveWithAnimation, {\n    props: props,\n    clipPathId: clipPathId,\n    previousPointsRef: previousPointsRef,\n    longestAnimatedLengthRef: longestAnimatedLengthRef,\n    pathRef: pathRef\n  });\n}\nvar errorBarDataPointFormatter = (dataPoint, dataKey) => {\n  return {\n    x: dataPoint.x,\n    y: dataPoint.y,\n    value: dataPoint.value,\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    errorVal: getValueByDataKey(dataPoint.payload, dataKey)\n  };\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass LineWithState extends Component {\n  render() {\n    var _filterProps;\n    var {\n      hide,\n      dot,\n      points,\n      className,\n      xAxisId,\n      yAxisId,\n      top,\n      left,\n      width,\n      height,\n      id,\n      needClip\n    } = this.props;\n    if (hide) {\n      return null;\n    }\n    var layerClass = clsx('recharts-line', className);\n    var clipPathId = id;\n    var {\n      r = 3,\n      strokeWidth = 2\n    } = (_filterProps = filterProps(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {\n      r: 3,\n      strokeWidth: 2\n    };\n    var clipDot = isClipDot(dot);\n    var dotSize = r * 2 + strokeWidth;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Layer, {\n      className: layerClass\n    }, needClip && /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(GraphicalItemClipPath, {\n      clipPathId: clipPathId,\n      xAxisId: xAxisId,\n      yAxisId: yAxisId\n    }), !clipDot && /*#__PURE__*/React.createElement(\"clipPath\", {\n      id: \"clipPath-dots-\".concat(clipPathId)\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      x: left - dotSize / 2,\n      y: top - dotSize / 2,\n      width: width + dotSize,\n      height: height + dotSize\n    }))), /*#__PURE__*/React.createElement(SetErrorBarContext, {\n      xAxisId: xAxisId,\n      yAxisId: yAxisId,\n      data: points,\n      dataPointFormatter: errorBarDataPointFormatter,\n      errorBarOffset: 0\n    }, /*#__PURE__*/React.createElement(RenderCurve, {\n      props: this.props,\n      clipPathId: clipPathId\n    }))), /*#__PURE__*/React.createElement(ActivePoints, {\n      activeDot: this.props.activeDot,\n      points: points,\n      mainColor: this.props.stroke,\n      itemDataKey: this.props.dataKey\n    }));\n  }\n}\nvar defaultLineProps = {\n  activeDot: true,\n  animateNewValues: true,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'ease',\n  connectNulls: false,\n  dot: true,\n  fill: '#fff',\n  hide: false,\n  isAnimationActive: !Global.isSsr,\n  label: false,\n  legendType: 'line',\n  stroke: '#3182bd',\n  strokeWidth: 1,\n  xAxisId: 0,\n  yAxisId: 0\n};\nfunction LineImpl(props) {\n  var _resolveDefaultProps = resolveDefaultProps(props, defaultLineProps),\n    {\n      activeDot,\n      animateNewValues,\n      animationBegin,\n      animationDuration,\n      animationEasing,\n      connectNulls,\n      dot,\n      hide,\n      isAnimationActive,\n      label,\n      legendType,\n      xAxisId,\n      yAxisId,\n      id\n    } = _resolveDefaultProps,\n    everythingElse = _objectWithoutProperties(_resolveDefaultProps, _excluded3);\n  var {\n    needClip\n  } = useNeedsClip(xAxisId, yAxisId);\n  var plotArea = usePlotArea();\n  var layout = useChartLayout();\n  var isPanorama = useIsPanorama();\n  var points = useAppSelector(state => selectLinePoints(state, xAxisId, yAxisId, isPanorama, id));\n  if (layout !== 'horizontal' && layout !== 'vertical' || points == null || plotArea == null) {\n    // Cannot render Line in an unsupported layout\n    return null;\n  }\n  var {\n    height,\n    width,\n    x: left,\n    y: top\n  } = plotArea;\n  return /*#__PURE__*/React.createElement(LineWithState, _extends({}, everythingElse, {\n    id: id,\n    connectNulls: connectNulls,\n    dot: dot,\n    activeDot: activeDot,\n    animateNewValues: animateNewValues,\n    animationBegin: animationBegin,\n    animationDuration: animationDuration,\n    animationEasing: animationEasing,\n    isAnimationActive: isAnimationActive,\n    hide: hide,\n    label: label,\n    legendType: legendType,\n    xAxisId: xAxisId,\n    yAxisId: yAxisId,\n    points: points,\n    layout: layout,\n    height: height,\n    width: width,\n    left: left,\n    top: top,\n    needClip: needClip\n  }));\n}\nexport function computeLinePoints(_ref6) {\n  var {\n    layout,\n    xAxis,\n    yAxis,\n    xAxisTicks,\n    yAxisTicks,\n    dataKey,\n    bandSize,\n    displayedData\n  } = _ref6;\n  return displayedData.map((entry, index) => {\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    var value = getValueByDataKey(entry, dataKey);\n    if (layout === 'horizontal') {\n      var _x = getCateCoordinateOfLine({\n        axis: xAxis,\n        ticks: xAxisTicks,\n        bandSize,\n        entry,\n        index\n      });\n      var _y = isNullish(value) ? null : yAxis.scale(value);\n      return {\n        x: _x,\n        y: _y,\n        value,\n        payload: entry\n      };\n    }\n    var x = isNullish(value) ? null : xAxis.scale(value);\n    var y = getCateCoordinateOfLine({\n      axis: yAxis,\n      ticks: yAxisTicks,\n      bandSize,\n      entry,\n      index\n    });\n    if (x == null || y == null) {\n      return null;\n    }\n    return {\n      x,\n      y,\n      value,\n      payload: entry\n    };\n  }).filter(Boolean);\n}\nfunction LineFn(outsideProps) {\n  var props = resolveDefaultProps(outsideProps, defaultLineProps);\n  var isPanorama = useIsPanorama();\n  return /*#__PURE__*/React.createElement(RegisterGraphicalItemId, {\n    id: props.id,\n    type: \"line\"\n  }, id => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SetLegendPayload, {\n    legendPayload: computeLegendPayloadFromAreaData(props)\n  }), /*#__PURE__*/React.createElement(SetTooltipEntrySettings, {\n    fn: getTooltipEntrySettings,\n    args: props\n  }), /*#__PURE__*/React.createElement(SetCartesianGraphicalItem, {\n    type: \"line\",\n    id: id,\n    data: props.data,\n    xAxisId: props.xAxisId,\n    yAxisId: props.yAxisId,\n    zAxisId: 0,\n    dataKey: props.dataKey,\n    hide: props.hide,\n    isPanorama: isPanorama\n  }), /*#__PURE__*/React.createElement(LineImpl, _extends({}, props, {\n    id: id\n  }))));\n}\nexport var Line = /*#__PURE__*/React.memo(LineFn);\nLine.displayName = 'Line';","import { createSelector } from 'reselect';\nimport { computeLinePoints } from '../../cartesian/Line';\nimport { selectChartDataWithIndexesIfNotInPanorama } from './dataSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { selectAxisWithScale, selectTicksOfGraphicalItem, selectUnfilteredCartesianItems } from './axisSelectors';\nimport { getBandSizeOfAxis, isCategoricalAxis } from '../../util/ChartUtils';\nvar selectXAxisWithScale = (state, xAxisId, _yAxisId, isPanorama) => selectAxisWithScale(state, 'xAxis', xAxisId, isPanorama);\nvar selectXAxisTicks = (state, xAxisId, _yAxisId, isPanorama) => selectTicksOfGraphicalItem(state, 'xAxis', xAxisId, isPanorama);\nvar selectYAxisWithScale = (state, _xAxisId, yAxisId, isPanorama) => selectAxisWithScale(state, 'yAxis', yAxisId, isPanorama);\nvar selectYAxisTicks = (state, _xAxisId, yAxisId, isPanorama) => selectTicksOfGraphicalItem(state, 'yAxis', yAxisId, isPanorama);\nvar selectBandSize = createSelector([selectChartLayout, selectXAxisWithScale, selectYAxisWithScale, selectXAxisTicks, selectYAxisTicks], (layout, xAxis, yAxis, xAxisTicks, yAxisTicks) => {\n  if (isCategoricalAxis(layout, 'xAxis')) {\n    return getBandSizeOfAxis(xAxis, xAxisTicks, false);\n  }\n  return getBandSizeOfAxis(yAxis, yAxisTicks, false);\n});\nvar pickLineId = (_state, _xAxisId, _yAxisId, _isPanorama, id) => id;\nfunction isLineSettings(item) {\n  return item.type === 'line';\n}\n\n/*\n * There is a race condition problem because we read some data from props and some from the state.\n * The state is updated through a dispatch and is one render behind,\n * and so we have this weird one tick render where the displayedData in one selector have the old dataKey\n * but the new dataKey in another selector.\n *\n * So here instead of reading the dataKey from the props, we always read it from the state.\n */\nvar selectSynchronisedLineSettings = createSelector([selectUnfilteredCartesianItems, pickLineId], (graphicalItems, id) => graphicalItems.filter(isLineSettings).find(x => x.id === id));\nexport var selectLinePoints = createSelector([selectChartLayout, selectXAxisWithScale, selectYAxisWithScale, selectXAxisTicks, selectYAxisTicks, selectSynchronisedLineSettings, selectBandSize, selectChartDataWithIndexesIfNotInPanorama], (layout, xAxis, yAxis, xAxisTicks, yAxisTicks, lineSettings, bandSize, _ref) => {\n  var {\n    chartData,\n    dataStartIndex,\n    dataEndIndex\n  } = _ref;\n  if (lineSettings == null || xAxis == null || yAxis == null || xAxisTicks == null || yAxisTicks == null || xAxisTicks.length === 0 || yAxisTicks.length === 0 || bandSize == null) {\n    return undefined;\n  }\n  var {\n    dataKey,\n    data\n  } = lineSettings;\n  var displayedData;\n  if (data != null && data.length > 0) {\n    displayedData = data;\n  } else {\n    displayedData = chartData === null || chartData === void 0 ? void 0 : chartData.slice(dataStartIndex, dataEndIndex + 1);\n  }\n  if (displayedData == null) {\n    return undefined;\n  }\n  return computeLinePoints({\n    layout,\n    xAxis,\n    yAxis,\n    xAxisTicks,\n    yAxisTicks,\n    dataKey,\n    bandSize,\n    displayedData\n  });\n});"],"names":[],"mappings":"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","ignoreList":[0,1,2]}