{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,mNAAgB,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,4KAAsB;QACrB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,iLAA2B;YAC1B,WAAW,IAAA,yHAAE,EAAC;sBAEd,cAAA,8OAAC,6MAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,4KAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-teams.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport {\n  teamsApi,\n  type Crew,\n  type PaginatedResponse,\n} from \"@/lib/api-client\";\n\n// Query keys\nexport const teamKeys = {\n  all: [\"teams\"] as const,\n  crews: () => [...teamKeys.all, \"crews\"] as const,\n  crew: (id: string) => [...teamKeys.all, \"crew\", id] as const,\n};\n\n// Hooks\nexport function useTeams() {\n  return useQuery({\n    queryKey: teamKeys.crews(),\n    queryFn: async () => {\n      const response = await fetch('/api/crews');\n      if (!response.ok) {\n        throw new Error('Failed to fetch crews');\n      }\n      const data = await response.json();\n      return data.crews || [];\n    },\n    staleTime: 30 * 1000, // 30 seconds - frequent updates for team changes\n  });\n}\n\nexport function useCrew(id: string) {\n  return useQuery({\n    queryKey: teamKeys.crew(id),\n    queryFn: () => teamsApi.getCrew(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000,\n  });\n}\n\nexport function useCreateCrew() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: Partial<Crew>) => teamsApi.createCrew(data),\n    onSuccess: (newCrew) => {\n      // Invalidate and refetch crews list\n      queryClient.invalidateQueries({ queryKey: teamKeys.crews() });\n\n      // Add the new crew to the cache\n      queryClient.setQueryData(teamKeys.crew(newCrew.id), newCrew);\n\n      toast.success(\"Team created successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to create team: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateCrew() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<Crew> }) =>\n      teamsApi.updateCrew(id, data),\n    onMutate: async ({ id, data }) => {\n      // Cancel any outgoing refetches\n      await queryClient.cancelQueries({ queryKey: teamKeys.crew(id) });\n\n      // Snapshot the previous value\n      const previousCrew = queryClient.getQueryData(teamKeys.crew(id));\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(teamKeys.crew(id), (old: Crew | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Return a context object with the snapshotted value\n      return { previousCrew };\n    },\n    onError: (error, { id }, context) => {\n      // If the mutation fails, use the context returned from onMutate to roll back\n      if (context?.previousCrew) {\n        queryClient.setQueryData(teamKeys.crew(id), context.previousCrew);\n      }\n      toast.error(`Failed to update team: ${error.message}`);\n    },\n    onSuccess: () => {\n      // Invalidate and refetch crews list\n      queryClient.invalidateQueries({ queryKey: teamKeys.crews() });\n      toast.success(\"Team updated successfully\");\n    },\n    onSettled: (data, error, { id }) => {\n      // Always refetch after error or success\n      queryClient.invalidateQueries({ queryKey: teamKeys.crew(id) });\n    },\n  });\n}\n\nexport function useDeleteCrew() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: string) => teamsApi.deleteCrew(id),\n    onSuccess: (_, deletedId) => {\n      // Remove from cache\n      queryClient.removeQueries({ queryKey: teamKeys.crew(deletedId) });\n\n      // Invalidate crews list\n      queryClient.invalidateQueries({ queryKey: teamKeys.crews() });\n\n      toast.success(\"Team deleted successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to delete team: ${error.message}`);\n    },\n  });\n}\n\n// Additional interfaces for project preparation\nexport interface ProjectUser {\n  id: string;\n  name: string;\n  email: string;\n  role: string;\n  assigned_at: string;\n  assigned_by: string;\n}\n\nexport interface GlobalTeam {\n  id: string;\n  name: string;\n  foreman_name?: string;\n  is_active: boolean;\n  project_count?: number;\n  specialization?: string;\n}\n\n// Additional hooks for project preparation\nexport function useGlobalTeams() {\n  return useQuery({\n    queryKey: ['global-teams'],\n    queryFn: async (): Promise<GlobalTeam[]> => {\n      const response = await fetch('/api/crews');\n      if (!response.ok) {\n        throw new Error('Failed to fetch global teams');\n      }\n      const data = await response.json();\n      const crews = data.crews || [];\n\n      // Transform to GlobalTeam format and count projects per team\n      const projectCounts: Record<string, number> = {};\n      crews.forEach((crew: any) => {\n        if (crew.project_id) {\n          projectCounts[crew.name] = (projectCounts[crew.name] || 0) + 1;\n        }\n      });\n\n      return crews.map((crew: any) => ({\n        id: crew.id,\n        name: crew.name,\n        foreman_name: crew.foreman?.full_name || crew.foreman_name,\n        is_active: crew.status === 'active',\n        project_count: projectCounts[crew.name] || 0,\n        specialization: 'mixed'\n      }));\n    },\n  });\n}\n\nexport function useProjectUsers(projectId: string) {\n  return useQuery({\n    queryKey: ['project-users', projectId],\n    queryFn: async (): Promise<ProjectUser[]> => {\n      try {\n        const response = await fetch(`/api/projects/${projectId}/users`);\n        if (!response.ok) {\n          if (response.status === 404) {\n            return []; // No users assigned yet\n          }\n          throw new Error('Failed to fetch project users');\n        }\n        const data = await response.json();\n        return data.users || [];\n      } catch (error) {\n        console.warn('Project users not available:', error);\n        return []; // Return empty array instead of mock data\n      }\n    },\n    enabled: !!projectId,\n  });\n}\n\nexport function useForemenUsers() {\n  return useQuery({\n    queryKey: ['foremen-users'],\n    queryFn: async () => {\n      const response = await fetch('/api/users?role=foreman&is_active=true');\n      if (!response.ok) {\n        // Try to get PM users as well if no foremen\n        const pmResponse = await fetch('/api/users?role=pm&is_active=true');\n        if (!pmResponse.ok) {\n          throw new Error('Failed to fetch users');\n        }\n        const pmData = await pmResponse.json();\n        return pmData.items || [];\n      }\n      const data = await response.json();\n\n      // If no foremen, get both foremen and PMs\n      if (data.items.length === 0) {\n        const allResponse = await fetch('/api/users?is_active=true');\n        if (!allResponse.ok) {\n          throw new Error('Failed to fetch users');\n        }\n        const allData = await allResponse.json();\n        return (allData.items || []).filter((user: any) =>\n          user.role === 'foreman' || user.role === 'pm'\n        );\n      }\n\n      return data.items || [];\n    },\n  });\n}\n\nexport function useCreateTeam() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (data: any) => {\n      const response = await fetch('/api/crews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to create team');\n      }\n\n      return response.json();\n    },\n    onSuccess: (data, variables) => {\n      if (variables.project_id) {\n        queryClient.invalidateQueries({ queryKey: ['project-teams', variables.project_id] });\n        queryClient.invalidateQueries({ queryKey: ['project-preparation', variables.project_id] });\n      }\n      queryClient.invalidateQueries({ queryKey: ['global-teams'] });\n      queryClient.invalidateQueries({ queryKey: teamKeys.crews() });\n      toast.success(data.message || 'Team created successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}\n\n// Specialized hooks\nexport function useProjectTeams(projectId: string) {\n  return useQuery({\n    queryKey: ['project-teams', projectId],\n    queryFn: async () => {\n      const response = await fetch(`/api/crews?project_id=${projectId}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch project teams');\n      }\n      const data = await response.json();\n      return data.crews || [];\n    },\n    enabled: !!projectId,\n  });\n}\n\nexport function useAvailableTeams() {\n  const { data: crews, ...rest } = useTeams();\n\n  return {\n    ...rest,\n    data: crews?.filter(crew => !crew.project_id) || [],\n  };\n}\n\nexport function useUpdateTeam() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async ({ id, data }: { id: string; data: any }) => {\n      const response = await fetch(`/api/crews/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to update team');\n      }\n\n      return response.json();\n    },\n    onSuccess: (data, variables) => {\n      queryClient.invalidateQueries({ queryKey: ['project-teams'] });\n      queryClient.invalidateQueries({ queryKey: ['global-teams'] });\n      queryClient.invalidateQueries({ queryKey: teamKeys.crews() });\n      queryClient.invalidateQueries({ queryKey: ['project-preparation'] });\n      toast.success(data.message || 'Team updated successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}\n\nexport function useDeleteTeam() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (id: string) => {\n      const response = await fetch(`/api/crews/${id}`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to delete team');\n      }\n\n      return response.json();\n    },\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({ queryKey: ['project-teams'] });\n      queryClient.invalidateQueries({ queryKey: ['global-teams'] });\n      queryClient.invalidateQueries({ queryKey: teamKeys.crews() });\n      queryClient.invalidateQueries({ queryKey: ['project-preparation'] });\n      toast.success(data.message || 'Team deleted successfully');\n    },\n    onError: (error: Error) => {\n      toast.error(error.message);\n    },\n  });\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;;;;AAOO,MAAM,WAAW;IACtB,KAAK;QAAC;KAAQ;IACd,OAAO,IAAM;eAAI,SAAS,GAAG;YAAE;SAAQ;IACvC,MAAM,CAAC,KAAe;eAAI,SAAS,GAAG;YAAE;YAAQ;SAAG;AACrD;AAGO,SAAS;IACd,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,SAAS,KAAK;QACxB,SAAS;YACP,MAAM,WAAW,MAAM,MAAM;YAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,OAAO,KAAK,KAAK,IAAI,EAAE;QACzB;QACA,WAAW,KAAK;IAClB;AACF;AAEO,SAAS,QAAQ,EAAU;IAChC,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,SAAS,IAAI,CAAC;QACxB,SAAS,IAAM,uIAAQ,CAAC,OAAO,CAAC;QAChC,SAAS,CAAC,CAAC;QACX,WAAW,IAAI,KAAK;IACtB;AACF;AAEO,SAAS;IACd,MAAM,cAAc,IAAA,wMAAc;IAElC,OAAO,IAAA,6LAAW,EAAC;QACjB,YAAY,CAAC,OAAwB,uIAAQ,CAAC,UAAU,CAAC;QACzD,WAAW,CAAC;YACV,oCAAoC;YACpC,YAAY,iBAAiB,CAAC;gBAAE,UAAU,SAAS,KAAK;YAAG;YAE3D,gCAAgC;YAChC,YAAY,YAAY,CAAC,SAAS,IAAI,CAAC,QAAQ,EAAE,GAAG;YAEpD,iJAAK,CAAC,OAAO,CAAC;QAChB;QACA,SAAS,CAAC;YACR,iJAAK,CAAC,KAAK,CAAC,CAAC,uBAAuB,EAAE,MAAM,OAAO,EAAE;QACvD;IACF;AACF;AAEO,SAAS;IACd,MAAM,cAAc,IAAA,wMAAc;IAElC,OAAO,IAAA,6LAAW,EAAC;QACjB,YAAY,CAAC,EAAE,EAAE,EAAE,IAAI,EAAuC,GAC5D,uIAAQ,CAAC,UAAU,CAAC,IAAI;QAC1B,UAAU,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE;YAC3B,gCAAgC;YAChC,MAAM,YAAY,aAAa,CAAC;gBAAE,UAAU,SAAS,IAAI,CAAC;YAAI;YAE9D,8BAA8B;YAC9B,MAAM,eAAe,YAAY,YAAY,CAAC,SAAS,IAAI,CAAC;YAE5D,yCAAyC;YACzC,YAAY,YAAY,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC;gBAC3C,IAAI,CAAC,KAAK,OAAO;gBACjB,OAAO;oBAAE,GAAG,GAAG;oBAAE,GAAG,IAAI;gBAAC;YAC3B;YAEA,qDAAqD;YACrD,OAAO;gBAAE;YAAa;QACxB;QACA,SAAS,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE;YACvB,6EAA6E;YAC7E,IAAI,SAAS,cAAc;gBACzB,YAAY,YAAY,CAAC,SAAS,IAAI,CAAC,KAAK,QAAQ,YAAY;YAClE;YACA,iJAAK,CAAC,KAAK,CAAC,CAAC,uBAAuB,EAAE,MAAM,OAAO,EAAE;QACvD;QACA,WAAW;YACT,oCAAoC;YACpC,YAAY,iBAAiB,CAAC;gBAAE,UAAU,SAAS,KAAK;YAAG;YAC3D,iJAAK,CAAC,OAAO,CAAC;QAChB;QACA,WAAW,CAAC,MAAM,OAAO,EAAE,EAAE,EAAE;YAC7B,wCAAwC;YACxC,YAAY,iBAAiB,CAAC;gBAAE,UAAU,SAAS,IAAI,CAAC;YAAI;QAC9D;IACF;AACF;AAEO,SAAS;IACd,MAAM,cAAc,IAAA,wMAAc;IAElC,OAAO,IAAA,6LAAW,EAAC;QACjB,YAAY,CAAC,KAAe,uIAAQ,CAAC,UAAU,CAAC;QAChD,WAAW,CAAC,GAAG;YACb,oBAAoB;YACpB,YAAY,aAAa,CAAC;gBAAE,UAAU,SAAS,IAAI,CAAC;YAAW;YAE/D,wBAAwB;YACxB,YAAY,iBAAiB,CAAC;gBAAE,UAAU,SAAS,KAAK;YAAG;YAE3D,iJAAK,CAAC,OAAO,CAAC;QAChB;QACA,SAAS,CAAC;YACR,iJAAK,CAAC,KAAK,CAAC,CAAC,uBAAuB,EAAE,MAAM,OAAO,EAAE;QACvD;IACF;AACF;AAsBO,SAAS;IACd,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU;YAAC;SAAe;QAC1B,SAAS;YACP,MAAM,WAAW,MAAM,MAAM;YAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,MAAM,QAAQ,KAAK,KAAK,IAAI,EAAE;YAE9B,6DAA6D;YAC7D,MAAM,gBAAwC,CAAC;YAC/C,MAAM,OAAO,CAAC,CAAC;gBACb,IAAI,KAAK,UAAU,EAAE;oBACnB,aAAa,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI;gBAC/D;YACF;YAEA,OAAO,MAAM,GAAG,CAAC,CAAC,OAAc,CAAC;oBAC/B,IAAI,KAAK,EAAE;oBACX,MAAM,KAAK,IAAI;oBACf,cAAc,KAAK,OAAO,EAAE,aAAa,KAAK,YAAY;oBAC1D,WAAW,KAAK,MAAM,KAAK;oBAC3B,eAAe,aAAa,CAAC,KAAK,IAAI,CAAC,IAAI;oBAC3C,gBAAgB;gBAClB,CAAC;QACH;IACF;AACF;AAEO,SAAS,gBAAgB,SAAiB;IAC/C,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU;YAAC;YAAiB;SAAU;QACtC,SAAS;YACP,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,CAAC,cAAc,EAAE,UAAU,MAAM,CAAC;gBAC/D,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,IAAI,SAAS,MAAM,KAAK,KAAK;wBAC3B,OAAO,EAAE,EAAE,wBAAwB;oBACrC;oBACA,MAAM,IAAI,MAAM;gBAClB;gBACA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,OAAO,KAAK,KAAK,IAAI,EAAE;YACzB,EAAE,OAAO,OAAO;gBACd,QAAQ,IAAI,CAAC,gCAAgC;gBAC7C,OAAO,EAAE,EAAE,0CAA0C;YACvD;QACF;QACA,SAAS,CAAC,CAAC;IACb;AACF;AAEO,SAAS;IACd,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU;YAAC;SAAgB;QAC3B,SAAS;YACP,MAAM,WAAW,MAAM,MAAM;YAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,4CAA4C;gBAC5C,MAAM,aAAa,MAAM,MAAM;gBAC/B,IAAI,CAAC,WAAW,EAAE,EAAE;oBAClB,MAAM,IAAI,MAAM;gBAClB;gBACA,MAAM,SAAS,MAAM,WAAW,IAAI;gBACpC,OAAO,OAAO,KAAK,IAAI,EAAE;YAC3B;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,0CAA0C;YAC1C,IAAI,KAAK,KAAK,CAAC,MAAM,KAAK,GAAG;gBAC3B,MAAM,cAAc,MAAM,MAAM;gBAChC,IAAI,CAAC,YAAY,EAAE,EAAE;oBACnB,MAAM,IAAI,MAAM;gBAClB;gBACA,MAAM,UAAU,MAAM,YAAY,IAAI;gBACtC,OAAO,CAAC,QAAQ,KAAK,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,OACnC,KAAK,IAAI,KAAK,aAAa,KAAK,IAAI,KAAK;YAE7C;YAEA,OAAO,KAAK,KAAK,IAAI,EAAE;QACzB;IACF;AACF;AAEO,SAAS;IACd,MAAM,cAAc,IAAA,wMAAc;IAElC,OAAO,IAAA,6LAAW,EAAC;QACjB,YAAY,OAAO;YACjB,MAAM,WAAW,MAAM,MAAM,cAAc;gBACzC,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,MAAM,IAAI,MAAM,MAAM,KAAK,IAAI;YACjC;YAEA,OAAO,SAAS,IAAI;QACtB;QACA,WAAW,CAAC,MAAM;YAChB,IAAI,UAAU,UAAU,EAAE;gBACxB,YAAY,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;wBAAiB,UAAU,UAAU;qBAAC;gBAAC;gBAClF,YAAY,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;wBAAuB,UAAU,UAAU;qBAAC;gBAAC;YAC1F;YACA,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAe;YAAC;YAC3D,YAAY,iBAAiB,CAAC;gBAAE,UAAU,SAAS,KAAK;YAAG;YAC3D,iJAAK,CAAC,OAAO,CAAC,KAAK,OAAO,IAAI;QAChC;QACA,SAAS,CAAC;YACR,iJAAK,CAAC,KAAK,CAAC,MAAM,OAAO;QAC3B;IACF;AACF;AAGO,SAAS,gBAAgB,SAAiB;IAC/C,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU;YAAC;YAAiB;SAAU;QACtC,SAAS;YACP,MAAM,WAAW,MAAM,MAAM,CAAC,sBAAsB,EAAE,WAAW;YACjE,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,OAAO,KAAK,KAAK,IAAI,EAAE;QACzB;QACA,SAAS,CAAC,CAAC;IACb;AACF;AAEO,SAAS;IACd,MAAM,EAAE,MAAM,KAAK,EAAE,GAAG,MAAM,GAAG;IAEjC,OAAO;QACL,GAAG,IAAI;QACP,MAAM,OAAO,OAAO,CAAA,OAAQ,CAAC,KAAK,UAAU,KAAK,EAAE;IACrD;AACF;AAEO,SAAS;IACd,MAAM,cAAc,IAAA,wMAAc;IAElC,OAAO,IAAA,6LAAW,EAAC;QACjB,YAAY,OAAO,EAAE,EAAE,EAAE,IAAI,EAA6B;YACxD,MAAM,WAAW,MAAM,MAAM,CAAC,WAAW,EAAE,IAAI,EAAE;gBAC/C,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,MAAM,IAAI,MAAM,MAAM,KAAK,IAAI;YACjC;YAEA,OAAO,SAAS,IAAI;QACtB;QACA,WAAW,CAAC,MAAM;YAChB,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAgB;YAAC;YAC5D,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAe;YAAC;YAC3D,YAAY,iBAAiB,CAAC;gBAAE,UAAU,SAAS,KAAK;YAAG;YAC3D,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAsB;YAAC;YAClE,iJAAK,CAAC,OAAO,CAAC,KAAK,OAAO,IAAI;QAChC;QACA,SAAS,CAAC;YACR,iJAAK,CAAC,KAAK,CAAC,MAAM,OAAO;QAC3B;IACF;AACF;AAEO,SAAS;IACd,MAAM,cAAc,IAAA,wMAAc;IAElC,OAAO,IAAA,6LAAW,EAAC;QACjB,YAAY,OAAO;YACjB,MAAM,WAAW,MAAM,MAAM,CAAC,WAAW,EAAE,IAAI,EAAE;gBAC/C,QAAQ;YACV;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,MAAM,IAAI,MAAM,MAAM,KAAK,IAAI;YACjC;YAEA,OAAO,SAAS,IAAI;QACtB;QACA,WAAW,CAAC;YACV,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAgB;YAAC;YAC5D,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAe;YAAC;YAC3D,YAAY,iBAAiB,CAAC;gBAAE,UAAU,SAAS,KAAK;YAAG;YAC3D,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAsB;YAAC;YAClE,iJAAK,CAAC,OAAO,CAAC,KAAK,OAAO,IAAI;QAChC;QACA,SAAS,CAAC;YACR,iJAAK,CAAC,KAAK,CAAC,MAAM,OAAO;QAC3B;IACF;AACF","debugId":null}},
    {"offset": {"line": 564, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-users.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport {\n  usersApi,\n  type User,\n  type PaginatedResponse,\n} from \"@/lib/api-client\";\n\n// Query keys\nexport const userKeys = {\n  all: [\"users\"] as const,\n  lists: () => [...userKeys.all, \"list\"] as const,\n  list: (filters: any) => [...userKeys.lists(), filters] as const,\n  details: () => [...userKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...userKeys.details(), id] as const,\n};\n\n// Hooks\nexport function useUsers(filters?: { role?: string; page?: number; per_page?: number }) {\n  return useQuery({\n    queryKey: userKeys.list(filters || {}),\n    queryFn: () => usersApi.getUsers(filters),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\nexport function useUser(id: string) {\n  return useQuery({\n    queryKey: userKeys.detail(id),\n    queryFn: () => usersApi.getUser(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000,\n  });\n}\n\nexport function useCreateUser() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: Partial<User>) => usersApi.createUser(data),\n    onSuccess: (newUser) => {\n      // Invalidate and refetch users list\n      queryClient.invalidateQueries({ queryKey: userKeys.lists() });\n\n      // Add the new user to the cache\n      queryClient.setQueryData(userKeys.detail(newUser.id), newUser);\n\n      toast.success(\"User created successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to create user: ${error.message}`);\n    },\n  });\n}\n\nexport function useUpdateUser() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<User> }) =>\n      usersApi.updateUser(id, data),\n    onMutate: async ({ id, data }) => {\n      // Cancel any outgoing refetches\n      await queryClient.cancelQueries({ queryKey: userKeys.detail(id) });\n\n      // Snapshot the previous value\n      const previousUser = queryClient.getQueryData(userKeys.detail(id));\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(userKeys.detail(id), (old: User | undefined) => {\n        if (!old) return old;\n        return { ...old, ...data };\n      });\n\n      // Return a context object with the snapshotted value\n      return { previousUser };\n    },\n    onError: (error, { id }, context) => {\n      // If the mutation fails, use the context returned from onMutate to roll back\n      if (context?.previousUser) {\n        queryClient.setQueryData(userKeys.detail(id), context.previousUser);\n      }\n      toast.error(`Failed to update user: ${error.message}`);\n    },\n    onSuccess: () => {\n      // Invalidate and refetch users list\n      queryClient.invalidateQueries({ queryKey: userKeys.lists() });\n      toast.success(\"User updated successfully\");\n    },\n    onSettled: (data, error, { id }) => {\n      // Always refetch after error or success\n      queryClient.invalidateQueries({ queryKey: userKeys.detail(id) });\n    },\n  });\n}\n\nexport function useDeleteUser() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: string) => usersApi.deleteUser(id),\n    onSuccess: (_, deletedId) => {\n      // Remove from cache\n      queryClient.removeQueries({ queryKey: userKeys.detail(deletedId) });\n\n      // Invalidate users list\n      queryClient.invalidateQueries({ queryKey: userKeys.lists() });\n\n      toast.success(\"User deleted successfully\");\n    },\n    onError: (error) => {\n      toast.error(`Failed to delete user: ${error.message}`);\n    },\n  });\n}\n\n// Specialized hooks for common use cases\nexport function useWorkers() {\n  return useUsers({\n    role: \"crew,worker,foreman\",\n    page: 1,\n    per_page: 100,\n  });\n}\n\nexport function useForemen() {\n  return useUsers({\n    role: \"foreman\",\n    page: 1,\n    per_page: 50,\n  });\n}\n\nexport function useProjectManagers() {\n  return useUsers({\n    role: \"pm\",\n    page: 1,\n    per_page: 50,\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 737, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,4KAAsB;QACrB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,iLAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,4KAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-documents.ts"],"sourcesContent":["'use client';\n\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { toast } from 'sonner';\nimport type {\n  WorkerDocument,\n  DocumentCategory,\n  DocumentsResponse,\n  DocumentStatus,\n  DocumentCategoryCode\n} from '@/types';\n\nexport interface DocumentFilters {\n  user_id?: string;\n  category_code?: DocumentCategoryCode;\n  status?: DocumentStatus;\n  search?: string;\n  page?: number;\n  per_page?: number;\n}\n\nexport interface CreateDocumentRequest {\n  user_id: string;\n  category_id: string;\n  document_number?: string;\n  issuing_authority?: string;\n  issue_date?: string;\n  expiry_date?: string;\n  valid_until?: string;\n  file_url: string;\n  file_name: string;\n  file_size?: number;\n  file_type: string;\n  notes?: string;\n}\n\nexport interface VerifyDocumentRequest {\n  document_id: string;\n  verified: boolean;\n  notes?: string;\n}\n\n// Query keys\nexport const documentKeys = {\n  all: ['documents'] as const,\n  lists: () => [...documentKeys.all, 'list'] as const,\n  list: (filters: DocumentFilters) => [...documentKeys.lists(), filters] as const,\n  categories: () => [...documentKeys.all, 'categories'] as const,\n  stats: () => [...documentKeys.all, 'stats'] as const,\n};\n\n// Fetch documents with filters\nexport function useDocuments(filters: DocumentFilters = {}) {\n  const searchParams = new URLSearchParams();\n\n  Object.entries(filters).forEach(([key, value]) => {\n    if (value !== undefined && value !== null && value !== '') {\n      searchParams.append(key, value.toString());\n    }\n  });\n\n  return useQuery({\n    queryKey: documentKeys.list(filters),\n    queryFn: async (): Promise<DocumentsResponse> => {\n      const response = await fetch(`/api/documents?${searchParams.toString()}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch documents');\n      }\n      return response.json();\n    },\n  });\n}\n\n// Upload new document\nexport function useUploadDocument() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (data: CreateDocumentRequest) => {\n      const response = await fetch('/api/documents', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to upload document');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      // Invalidate all document queries to refresh data\n      queryClient.invalidateQueries({ queryKey: documentKeys.all });\n      toast.success('Document uploaded successfully');\n    },\n    onError: (error: Error) => {\n      console.error('Failed to upload document:', error);\n      toast.error(error.message || 'Failed to upload document');\n    },\n  });\n}\n\n// Verify document\nexport function useVerifyDocument() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (data: VerifyDocumentRequest) => {\n      const response = await fetch(`/api/documents/${data.document_id}/verify`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          verified: data.verified,\n          notes: data.notes,\n        }),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to verify document');\n      }\n\n      return response.json();\n    },\n    onSuccess: (_, variables) => {\n      // Invalidate document queries to refresh data\n      queryClient.invalidateQueries({ queryKey: documentKeys.all });\n      toast.success(variables.verified ? 'Document verified successfully' : 'Document verification removed');\n    },\n    onError: (error: Error) => {\n      console.error('Failed to verify document:', error);\n      toast.error(error.message || 'Failed to verify document');\n    },\n  });\n}\n\n// Delete document\nexport function useDeleteDocument() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (documentId: string) => {\n      const response = await fetch(`/api/documents/${documentId}`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to delete document');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      // Invalidate document queries to refresh data\n      queryClient.invalidateQueries({ queryKey: documentKeys.all });\n      toast.success('Document deleted successfully');\n    },\n    onError: (error: Error) => {\n      console.error('Failed to delete document:', error);\n      toast.error(error.message || 'Failed to delete document');\n    },\n  });\n}\n\n// Specialized hooks for common use cases\nexport function useUserDocuments(userId?: string) {\n  return useDocuments({\n    user_id: userId,\n    page: 1,\n    per_page: 50,\n  });\n}\n\nexport function useDocumentsByCategory(categoryCode?: DocumentCategoryCode) {\n  return useDocuments({\n    category_code: categoryCode,\n    page: 1,\n    per_page: 50,\n  });\n}\n\nexport function useExpiredDocuments() {\n  return useDocuments({\n    status: 'expired',\n    page: 1,\n    per_page: 50,\n  });\n}\n\nexport function useExpiringDocuments() {\n  return useDocuments({\n    status: 'expiring_soon',\n    page: 1,\n    per_page: 50,\n  });\n}\n\nexport function usePendingVerifications() {\n  return useDocuments({\n    status: 'pending',\n    page: 1,\n    per_page: 50,\n  });\n}\n\n// Document categories and status constants\nexport const DOCUMENT_CATEGORIES: DocumentCategoryCode[] = [\n  'WORK_PERMIT',\n  'INSURANCE',\n  'ID_DOCUMENT',\n  'VISA',\n  'MEDICAL',\n  'SAFETY_TRAINING',\n  'PASSPORT',\n  'DRIVING_LICENSE',\n];\n\nexport const DOCUMENT_STATUSES: DocumentStatus[] = [\n  'active',\n  'expired',\n  'expiring_soon',\n  'pending',\n  'inactive',\n];\n\n// Helper function to get status label\nexport function getStatusLabel(status: DocumentStatus): string {\n  const labels: Record<DocumentStatus, string> = {\n    active: 'Active',\n    expired: 'Expired',\n    expiring_soon: 'Expiring Soon',\n    pending: 'Pending Verification',\n    inactive: 'Inactive',\n  };\n\n  return labels[status] || status;\n}\n\n// Helper function to get status color\nexport function getStatusColor(status: DocumentStatus): string {\n  const colors: Record<DocumentStatus, string> = {\n    active: 'bg-green-100 text-green-800',\n    expired: 'bg-red-100 text-red-800',\n    expiring_soon: 'bg-yellow-100 text-yellow-800',\n    pending: 'bg-blue-100 text-blue-800',\n    inactive: 'bg-gray-100 text-gray-800',\n  };\n\n  return colors[status] || 'bg-gray-100 text-gray-800';\n}\n\n// Helper function to get category label\nexport function getCategoryLabel(categoryCode: DocumentCategoryCode): string {\n  const labels: Record<DocumentCategoryCode, string> = {\n    WORK_PERMIT: 'Work Permit',\n    INSURANCE: 'Insurance',\n    ID_DOCUMENT: 'ID Document',\n    VISA: 'Visa',\n    MEDICAL: 'Medical Certificate',\n    SAFETY_TRAINING: 'Safety Training',\n    PASSPORT: 'Passport',\n    DRIVING_LICENSE: 'Driving License',\n  };\n\n  return labels[categoryCode] || categoryCode.replace(/_/g, ' ');\n}\n\n// Helper function to check if document is expiring soon\nexport function isExpiringSign(document: WorkerDocument): boolean {\n  if (!document.expiry_date) return false;\n\n  const expiry = new Date(document.expiry_date);\n  const now = new Date();\n  const daysUntilExpiry = Math.ceil((expiry.getTime() - now.getTime()) / (1000 * 60 * 60 * 24));\n\n  return daysUntilExpiry >= 0 && daysUntilExpiry <= 30;\n}\n\n// Helper function to check if document is expired\nexport function isExpired(document: WorkerDocument): boolean {\n  if (!document.expiry_date) return false;\n\n  const expiry = new Date(document.expiry_date);\n  const now = new Date();\n\n  return expiry < now;\n}\n\n// Helper function to get days until expiry\nexport function getDaysUntilExpiry(document: WorkerDocument): number | null {\n  if (!document.expiry_date) return null;\n\n  const expiry = new Date(document.expiry_date);\n  const now = new Date();\n\n  return Math.ceil((expiry.getTime() - now.getTime()) / (1000 * 60 * 60 * 24));\n}\n\n// Helper function to format file size\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n// Helper function to get file type icon\nexport function getFileTypeIcon(fileType: string): string {\n  if (fileType.includes('pdf')) return '📄';\n  if (fileType.includes('image')) return '🖼️';\n  if (fileType.includes('word') || fileType.includes('document')) return '📝';\n  if (fileType.includes('excel') || fileType.includes('spreadsheet')) return '📊';\n  if (fileType.includes('powerpoint') || fileType.includes('presentation')) return '📺';\n  return '📎';\n}\n\n// Document categories hook - get all available categories\nexport function useDocumentCategories() {\n  return useQuery({\n    queryKey: documentKeys.categories(),\n    queryFn: async (): Promise<DocumentCategory[]> => {\n      const response = await fetch('/api/documents');\n      if (!response.ok) {\n        throw new Error('Failed to fetch document categories');\n      }\n      const data = await response.json();\n      return data.categories || [];\n    },\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n}\n\n// Document search hook - search across document content\nexport function useSearchDocuments() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (searchRequest: {\n      query: string;\n      include_content?: boolean;\n      highlight?: boolean;\n      fuzzy?: boolean;\n    }) => {\n      const searchParams = new URLSearchParams();\n      searchParams.append('search', searchRequest.query);\n      if (searchRequest.include_content) searchParams.append('include_content', 'true');\n      if (searchRequest.highlight) searchParams.append('highlight', 'true');\n      if (searchRequest.fuzzy) searchParams.append('fuzzy', 'true');\n\n      const response = await fetch(`/api/documents/search?${searchParams.toString()}`);\n      if (!response.ok) {\n        throw new Error('Failed to search documents');\n      }\n      return response.json();\n    },\n    onSuccess: (data) => {\n      // Cache search results temporarily\n      queryClient.setQueryData(['documents', 'search', data.query], data);\n    },\n    onError: (error: Error) => {\n      toast.error(`Search failed: ${error.message}`);\n    },\n  });\n}\n\n// Document actions hook - for action menus and operations\nexport function useDocumentActions() {\n  const queryClient = useQueryClient();\n\n  const shareDocument = useMutation({\n    mutationFn: async ({ documentId, accessLevel }: { documentId: string; accessLevel: 'public' | 'private' | 'team' }) => {\n      const response = await fetch(`/api/documents/${documentId}/share`, {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ access_level: accessLevel }),\n      });\n      if (!response.ok) throw new Error('Failed to share document');\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: documentKeys.all });\n      toast.success('Document sharing updated');\n    },\n    onError: (error: Error) => toast.error(error.message),\n  });\n\n  const downloadDocument = useMutation({\n    mutationFn: async (documentId: string) => {\n      const response = await fetch(`/api/documents/${documentId}/download`);\n      if (!response.ok) throw new Error('Failed to download document');\n      const blob = await response.blob();\n      return { blob, response };\n    },\n    onError: (error: Error) => toast.error(error.message),\n  });\n\n  const duplicateDocument = useMutation({\n    mutationFn: async (documentId: string) => {\n      const response = await fetch(`/api/documents/${documentId}/duplicate`, {\n        method: 'POST',\n      });\n      if (!response.ok) throw new Error('Failed to duplicate document');\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: documentKeys.all });\n      toast.success('Document duplicated');\n    },\n    onError: (error: Error) => toast.error(error.message),\n  });\n\n  return {\n    shareDocument,\n    downloadDocument,\n    duplicateDocument,\n  };\n}\n\n// Document classification hook - for auto-categorizing documents\nexport function useClassifyDocument() {\n  return useMutation({\n    mutationFn: async (file: File) => {\n      // Simple classification based on file extension and name\n      const fileName = file.name.toLowerCase();\n      const fileType = file.type.toLowerCase();\n\n      // Classify based on file name patterns\n      if (fileName.includes('passport') || fileName.includes('паспорт')) {\n        return { category_code: 'PASSPORT', confidence: 0.9 };\n      }\n      if (fileName.includes('visa') || fileName.includes('виза')) {\n        return { category_code: 'VISA', confidence: 0.85 };\n      }\n      if (fileName.includes('permit') || fileName.includes('разрешение')) {\n        return { category_code: 'WORK_PERMIT', confidence: 0.8 };\n      }\n      if (fileName.includes('insurance') || fileName.includes('страхов')) {\n        return { category_code: 'INSURANCE', confidence: 0.8 };\n      }\n      if (fileName.includes('medical') || fileName.includes('медицин')) {\n        return { category_code: 'MEDICAL', confidence: 0.75 };\n      }\n      if (fileName.includes('safety') || fileName.includes('безопасн')) {\n        return { category_code: 'SAFETY_TRAINING', confidence: 0.75 };\n      }\n      if (fileName.includes('license') || fileName.includes('лицензи')) {\n        return { category_code: 'DRIVING_LICENSE', confidence: 0.7 };\n      }\n\n      // Default to ID document for images\n      if (fileType.includes('image')) {\n        return { category_code: 'ID_DOCUMENT', confidence: 0.5 };\n      }\n\n      // Default classification\n      return { category_code: 'ID_DOCUMENT', confidence: 0.3 };\n    },\n    onError: (error: Error) => {\n      console.warn('Document classification failed:', error);\n    },\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1282, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/documents/document-upload.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Upload, X, FileText, Image, FileIcon, AlertCircle } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  useUploadDocument,\n  useDocumentCategories,\n  useClassifyDocument,\n} from \"@/hooks/use-documents\";\nimport { cn } from \"@/lib/utils\";\nimport type {\n  CreateDocumentRequest,\n  DocumentCategoryCode,\n  DocumentAccessLevel,\n} from \"@/types\";\n\ninterface DocumentUploadProps {\n  projectId?: string;\n  houseId?: string;\n  workEntryId?: string;\n  teamId?: string;\n  userId?: string;\n  onUploadComplete?: (document: any) => void;\n  maxFiles?: number;\n  acceptedFileTypes?: string[];\n  maxFileSize?: number; // in bytes\n}\n\ninterface FileWithPreview {\n  file: File; // Original File object\n  preview?: string;\n  category?: DocumentCategoryCode;\n  tags?: string[];\n  description?: string;\n  accessLevel?: DocumentAccessLevel;\n  documentNumber?: string;\n  issuingAuthority?: string;\n  issueDate?: string;\n  expiryDate?: string;\n  // File properties for compatibility\n  name: string;\n  size: number;\n  type: string;\n}\n\nconst getFileIcon = (fileType: string | undefined) => {\n  if (!fileType) return FileIcon;\n  if (fileType.startsWith(\"image/\")) return Image;\n  if (fileType.includes(\"pdf\") || fileType.includes(\"document\")) return FileText;\n  return FileIcon;\n};\n\nconst formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return \"0 Bytes\";\n  const k = 1024;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n};\n\nexport function DocumentUpload({\n  projectId,\n  houseId,\n  workEntryId,\n  teamId,\n  userId,\n  onUploadComplete,\n  maxFiles = 10,\n  acceptedFileTypes = [\n    \"image/*\",\n    \"application/pdf\",\n    \"application/msword\", // .doc files\n    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", // .docx files\n    \"application/vnd.ms-excel\", // .xls files\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", // .xlsx files\n    \".doc\",\n    \".docx\",\n    \".xls\",\n    \".xlsx\"\n  ],\n  maxFileSize = 50 * 1024 * 1024, // 50MB\n}: DocumentUploadProps) {\n  const [files, setFiles] = useState<FileWithPreview[]>([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState<Record<string, number>>({});\n\n  const uploadDocument = useUploadDocument();\n\n  // Custom upload function for user documents\n  const uploadUserDocument = async (file: FileWithPreview, userId: string) => {\n    console.log('Starting upload for:', file.name, 'to user:', userId, 'category:', file.category);\n\n    if (!file.category) {\n      throw new Error('Please select a document category before uploading');\n    }\n\n    // Use the original file object from our wrapper\n    const formData = new FormData();\n    formData.append('file', file.file); // Use the original File object\n    formData.append('category_id', file.category || '');\n    formData.append('document_number', file.documentNumber || '');\n    formData.append('issuing_authority', file.issuingAuthority || '');\n    formData.append('issue_date', file.issueDate || '');\n    formData.append('expiry_date', file.expiryDate || '');\n    formData.append('notes', file.description || '');\n\n    console.log('FormData prepared:', {\n      fileName: file.name,\n      fileSize: file.size,\n      fileType: file.type,\n      categoryId: file.category,\n      notes: file.description || ''\n    });\n\n    console.log('FormData entries:');\n    for (const [key, value] of formData.entries()) {\n      if (value instanceof File) {\n        console.log(`  ${key}: File(name=\"${value.name}\", size=${value.size}, type=\"${value.type}\")`);\n      } else {\n        console.log(`  ${key}: \"${value}\"`);\n      }\n    }\n\n    const response = await fetch(`/api/users/${userId}/documents`, {\n      method: 'POST',\n      body: formData,\n    });\n\n    console.log('Response status:', response.status, response.statusText);\n\n    if (!response.ok) {\n      let errorMessage = 'Failed to upload document';\n      try {\n        const errorText = await response.text();\n        console.log('Error response text:', errorText);\n        if (errorText && errorText.trim()) {\n          try {\n            const error = JSON.parse(errorText);\n            errorMessage = error.error || error.message || errorMessage;\n          } catch (parseError) {\n            // If JSON parsing fails, use the raw text as error message\n            errorMessage = errorText;\n          }\n        }\n      } catch (e) {\n        errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n      }\n      console.error('Upload error:', errorMessage);\n      throw new Error(errorMessage);\n    }\n\n    const result = await response.json();\n    console.log('Upload successful:', result);\n    return result;\n  };\n  // Custom hook to fetch document categories\n  const { data: userDocumentsData } = useQuery({\n    queryKey: ['user-documents-categories', userId],\n    queryFn: async () => {\n      if (!userId) return { categories: [] };\n      const response = await fetch(`/api/users/${userId}/documents`);\n      if (!response.ok) throw new Error('Failed to fetch categories');\n      return response.json();\n    },\n    enabled: !!userId,\n  });\n\n  const categories = userDocumentsData?.categories || [];\n  const classifyDocument = useClassifyDocument();\n\n  const onDrop = useCallback(\n    async (acceptedFiles: File[]) => {\n      console.log('📁 Файлы выбраны:', acceptedFiles.map(f => ({\n        name: f.name,\n        size: f.size,\n        type: f.type\n      })));\n\n      if (files.length + acceptedFiles.length > maxFiles) {\n        toast.error(`Maximum ${maxFiles} files allowed`);\n        return;\n      }\n\n      const newFiles: FileWithPreview[] = acceptedFiles.map((file) => {\n        console.log('🔧 Обрабатываю файл:', {\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          constructor: file.constructor.name\n        });\n\n        // Create preview for images\n        const preview = file.type.startsWith(\"image/\")\n          ? URL.createObjectURL(file)\n          : undefined;\n\n        // Create a wrapper object that preserves the original File object\n        const enhancedFile: FileWithPreview = {\n          file, // Store the original File object\n          preview,\n          category: undefined,\n          tags: [],\n          description: \"\",\n          accessLevel: \"project\",\n          documentNumber: \"\",\n          issuingAuthority: \"\",\n          issueDate: \"\",\n          expiryDate: \"\",\n          // Copy File properties for compatibility\n          name: file.name,\n          size: file.size,\n          type: file.type\n        };\n\n        console.log('✅ Файл обработан:', {\n          name: enhancedFile.name,\n          size: enhancedFile.size,\n          type: enhancedFile.type,\n          hasPreview: !!enhancedFile.preview,\n          originalFile: enhancedFile.file,\n          hasArrayBuffer: typeof enhancedFile.file.arrayBuffer === 'function',\n          hasStream: typeof enhancedFile.file.stream === 'function'\n        });\n\n        return enhancedFile;\n      });\n\n      console.log('📋 Добавляю файлы в состояние:', newFiles.length);\n      setFiles((prev) => [...prev, ...newFiles]);\n\n      // Auto-classify documents\n      for (const file of newFiles) {\n        try {\n          const result = await classifyDocument.mutateAsync(file.file);\n\n          setFiles((prev) =>\n            prev.map((f) =>\n              f.name === file.name && f.size === file.size\n                ? {\n                    ...f,\n                    category: result.category_code as DocumentCategoryCode,\n                    tags: [], // No tags returned from this hook\n                  }\n                : f\n            )\n          );\n        } catch (error) {\n          console.error(\"Classification failed for\", file.name, error);\n        }\n      }\n    },\n    [files.length, maxFiles, classifyDocument]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.png', '.jpg', '.jpeg', '.gif', '.bmp', '.webp'],\n      'application/pdf': ['.pdf'],\n      'application/msword': ['.doc'],\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'],\n      'application/vnd.ms-excel': ['.xls'],\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['.xlsx'],\n    },\n    maxSize: maxFileSize,\n    multiple: true,\n  });\n\n  const removeFile = (index: number) => {\n    setFiles((prev) => {\n      const file = prev[index];\n      if (file.preview) {\n        URL.revokeObjectURL(file.preview);\n      }\n      return prev.filter((_, i) => i !== index);\n    });\n  };\n\n  const updateFileMetadata = (\n    index: number,\n    field: keyof FileWithPreview,\n    value: any\n  ) => {\n    setFiles((prev) =>\n      prev.map((file, i) =>\n        i === index ? { ...file, [field]: value } : file\n      )\n    );\n  };\n\n  const handleUpload = async () => {\n    if (files.length === 0) {\n      toast.error(\"Пожалуйста, выберите файл для загрузки\");\n      return;\n    }\n    if (!userId) {\n      toast.error(\"User ID is required for uploading documents\");\n      return;\n    }\n\n    // Check if all files have categories\n    const filesWithoutCategory = files.filter(file => !file.category);\n    if (filesWithoutCategory.length > 0) {\n      toast.error(\"Пожалуйста, выберите категорию для всех файлов\");\n      return;\n    }\n\n    console.log('📤 Начинаем загрузку файлов:', files.map((f, i) => ({\n      name: f.name || `file-${i}`,\n      size: f.size,\n      type: f.type,\n      category: f.category\n    })));\n\n    setUploading(true);\n\n    for (const [index, file] of files.entries()) {\n      // Store original filename before it gets corrupted\n      const originalFileName = file.name || `file-${index}`;\n\n      try {\n        setUploadProgress((prev) => ({ ...prev, [originalFileName]: 0 }));\n\n        // Simulate progress (in real implementation, this would come from upload progress)\n        const progressInterval = setInterval(() => {\n          setUploadProgress((prev) => ({\n            ...prev,\n            [originalFileName]: Math.min(prev[originalFileName] + 10, 90),\n          }));\n        }, 100);\n\n        const document = await uploadUserDocument(file, userId);\n\n        clearInterval(progressInterval);\n        setUploadProgress((prev) => ({ ...prev, [originalFileName]: 100 }));\n\n        onUploadComplete?.(document);\n      } catch (error) {\n        console.error(\"Upload failed for\", originalFileName, error);\n        setUploadProgress((prev) => ({ ...prev, [originalFileName]: -1 }));\n      }\n    }\n\n    setUploading(false);\n    setFiles([]);\n    setUploadProgress({});\n  };\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle>Upload Documents</CardTitle>\n        <CardDescription>\n          Drag and drop files or click to select. Maximum {maxFiles} files,{\" \"}\n          {formatFileSize(maxFileSize)} each.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Drop Zone */}\n        <div\n          {...getRootProps()}\n          className={cn(\n            \"border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors\",\n            isDragActive\n              ? \"border-primary bg-primary/10\"\n              : \"border-muted-foreground/25 hover:border-primary/50\"\n          )}\n        >\n          <input {...getInputProps()} />\n          <Upload className=\"mx-auto h-12 w-12 text-muted-foreground mb-4\" />\n          {isDragActive ? (\n            <p className=\"text-primary\">Drop the files here...</p>\n          ) : (\n            <div>\n              <p className=\"text-muted-foreground mb-2\">\n                Drag and drop files here, or click to select files\n              </p>\n              <p className=\"text-sm text-muted-foreground\">\n                Supported: {acceptedFileTypes.join(\", \")}\n              </p>\n            </div>\n          )}\n        </div>\n\n        {/* File List */}\n        {files.length > 0 && (\n          <div className=\"space-y-4\">\n            <h4 className=\"font-medium\">Files to Upload ({files.length})</h4>\n            {files.map((file, index) => {\n              const FileIconComponent = getFileIcon(file.type);\n              const progress = uploadProgress[file.name] || 0;\n              const isError = progress === -1;\n\n              return (\n                <Card key={`${file.name}-${file.size}`} className=\"p-4\">\n                  <div className=\"flex items-start gap-4\">\n                    {/* File Icon/Preview */}\n                    <div className=\"flex-shrink-0\">\n                      {file.preview ? (\n                        <img\n                          src={file.preview}\n                          alt={file.name}\n                          className=\"w-16 h-16 object-cover rounded\"\n                          onLoad={() => URL.revokeObjectURL(file.preview!)}\n                        />\n                      ) : (\n                        <div className=\"w-16 h-16 bg-muted rounded flex items-center justify-center\">\n                          <FileIconComponent className=\"w-8 h-8 text-muted-foreground\" />\n                        </div>\n                      )}\n                    </div>\n\n                    {/* File Details */}\n                    <div className=\"flex-1 space-y-3\">\n                      <div className=\"flex items-start justify-between\">\n                        <div>\n                          <p className=\"font-medium truncate max-w-xs\">\n                            {file.name}\n                          </p>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {formatFileSize(file.size)}\n                          </p>\n                        </div>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => removeFile(index)}\n                          disabled={uploading}\n                        >\n                          <X className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n\n                      {/* Metadata Form */}\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                        <div>\n                          <Label htmlFor={`category-${index}`}>Category</Label>\n                          <Select\n                            value={file.category || \"\"}\n                            onValueChange={(value) =>\n                              updateFileMetadata(index, \"category\", value)\n                            }\n                            disabled={uploading}\n                          >\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Select category\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              {categories?.map((category: any) => (\n                                <SelectItem key={category.id} value={category.id}>\n                                  {category.name_en || category.name_ru || category.code}\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                        </div>\n\n                        <div>\n                          <Label htmlFor={`access-${index}`}>Access Level</Label>\n                          <Select\n                            value={file.accessLevel || \"project\"}\n                            onValueChange={(value) =>\n                              updateFileMetadata(index, \"accessLevel\", value)\n                            }\n                            disabled={uploading}\n                          >\n                            <SelectTrigger>\n                              <SelectValue />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"public\">Public</SelectItem>\n                              <SelectItem value=\"project\">Project</SelectItem>\n                              <SelectItem value=\"team\">Team</SelectItem>\n                              <SelectItem value=\"private\">Private</SelectItem>\n                              <SelectItem value=\"admin\">Admin Only</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </div>\n\n                        <div>\n                          <Label htmlFor={`document-number-${index}`}>Document Number</Label>\n                          <Input\n                            id={`document-number-${index}`}\n                            placeholder=\"Document number...\"\n                            value={file.documentNumber || \"\"}\n                            onChange={(e) =>\n                              updateFileMetadata(index, \"documentNumber\", e.target.value)\n                            }\n                            disabled={uploading}\n                          />\n                        </div>\n\n                        <div>\n                          <Label htmlFor={`issuing-authority-${index}`}>Issuing Authority</Label>\n                          <Input\n                            id={`issuing-authority-${index}`}\n                            placeholder=\"Issuing authority...\"\n                            value={file.issuingAuthority || \"\"}\n                            onChange={(e) =>\n                              updateFileMetadata(index, \"issuingAuthority\", e.target.value)\n                            }\n                            disabled={uploading}\n                          />\n                        </div>\n\n                        <div>\n                          <Label htmlFor={`issue-date-${index}`}>Issue Date</Label>\n                          <Input\n                            id={`issue-date-${index}`}\n                            type=\"date\"\n                            value={file.issueDate || \"\"}\n                            onChange={(e) =>\n                              updateFileMetadata(index, \"issueDate\", e.target.value)\n                            }\n                            disabled={uploading}\n                          />\n                        </div>\n\n                        <div>\n                          <Label htmlFor={`expiry-date-${index}`}>Expiry Date</Label>\n                          <Input\n                            id={`expiry-date-${index}`}\n                            type=\"date\"\n                            value={file.expiryDate || \"\"}\n                            onChange={(e) =>\n                              updateFileMetadata(index, \"expiryDate\", e.target.value)\n                            }\n                            disabled={uploading}\n                          />\n                        </div>\n                      </div>\n\n                      <div>\n                        <Label htmlFor={`description-${index}`}>Description</Label>\n                        <Textarea\n                          id={`description-${index}`}\n                          placeholder=\"Optional description...\"\n                          value={file.description || \"\"}\n                          onChange={(e) =>\n                            updateFileMetadata(index, \"description\", e.target.value)\n                          }\n                          disabled={uploading}\n                          rows={2}\n                        />\n                      </div>\n\n                      {/* Tags */}\n                      {file.tags && file.tags.length > 0 && (\n                        <div>\n                          <Label>Suggested Tags</Label>\n                          <div className=\"flex flex-wrap gap-1 mt-1\">\n                            {file.tags.map((tag, tagIndex) => (\n                              <Badge key={tagIndex} variant=\"secondary\">\n                                {tag}\n                              </Badge>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n\n                      {/* Upload Progress */}\n                      {uploading && progress >= 0 && (\n                        <div className=\"space-y-1\">\n                          <div className=\"flex items-center justify-between text-sm\">\n                            <span>Uploading...</span>\n                            <span>{progress}%</span>\n                          </div>\n                          <Progress value={progress} className=\"h-2\" />\n                        </div>\n                      )}\n\n                      {/* Error State */}\n                      {isError && (\n                        <div className=\"flex items-center gap-2 text-destructive text-sm\">\n                          <AlertCircle className=\"w-4 h-4\" />\n                          <span>Upload failed</span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </Card>\n              );\n            })}\n\n            {/* Upload Button */}\n            <div className=\"flex justify-end\">\n              <Button\n                onClick={handleUpload}\n                disabled={uploading || files.length === 0}\n                className=\"min-w-32\"\n              >\n                {uploading ? \"Uploading...\" : `Upload ${files.length} Files`}\n              </Button>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2245, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/documents/worker-documents-dialog.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport {\n  FileText,\n  Shield,\n  Calendar,\n  AlertTriangle,\n  CheckCircle,\n  Clock,\n  Download,\n  Eye,\n  X,\n  Plus\n} from \"lucide-react\";\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { DocumentUpload } from \"./document-upload\";\n\nimport type { DocumentsResponse, WorkerDocument, DocumentStatus } from \"@/types\";\n\ninterface WorkerDocumentsDialogProps {\n  userId: string;\n  userName: string;\n  trigger?: React.ReactNode;\n}\n\nasync function fetchWorkerDocuments(userId: string): Promise<DocumentsResponse> {\n  const response = await fetch(`/api/users/${userId}/documents`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch documents');\n  }\n  return response.json();\n}\n\nfunction getStatusColor(status: DocumentStatus): string {\n  switch (status) {\n    case 'active':\n      return 'bg-green-500';\n    case 'expired':\n      return 'bg-red-500';\n    case 'expiring_soon':\n      return 'bg-yellow-500';\n    case 'pending':\n      return 'bg-blue-500';\n    case 'inactive':\n      return 'bg-gray-500';\n    default:\n      return 'bg-gray-500';\n  }\n}\n\nfunction getStatusIcon(status: DocumentStatus) {\n  switch (status) {\n    case 'active':\n      return <CheckCircle className=\"h-4 w-4\" />;\n    case 'expired':\n      return <AlertTriangle className=\"h-4 w-4\" />;\n    case 'expiring_soon':\n      return <Clock className=\"h-4 w-4\" />;\n    case 'pending':\n      return <Clock className=\"h-4 w-4\" />;\n    case 'inactive':\n      return <X className=\"h-4 w-4\" />;\n    default:\n      return <FileText className=\"h-4 w-4\" />;\n  }\n}\n\nfunction getStatusText(status: DocumentStatus): string {\n  switch (status) {\n    case 'active':\n      return 'Действителен';\n    case 'expired':\n      return 'Истёк';\n    case 'expiring_soon':\n      return 'Истекает скоро';\n    case 'pending':\n      return 'В ожидании';\n    case 'inactive':\n      return 'Неактивен';\n    default:\n      return 'Неизвестен';\n  }\n}\n\nfunction formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nfunction DocumentCard({ document }: { document: WorkerDocument }) {\n  const statusColor = getStatusColor(document.status);\n  const statusIcon = getStatusIcon(document.status);\n  const statusText = getStatusText(document.status);\n  const queryClient = useQueryClient();\n\n  const handleView = () => {\n    // Open document in new tab for viewing (not downloading)\n    const viewUrl = `/api/users/${document.user_id}/documents/${document.id}/view`;\n    console.log(`👁️ Открываю документ \"${document.file_name}\" для просмотра`);\n    window.open(viewUrl, '_blank');\n  };\n\n  const handleDownload = async () => {\n    try {\n      console.log(`💾 Скачиваю документ \"${document.file_name}\" для работника ID: ${document.user_id}`);\n      // Download the document using the API endpoint\n      const downloadUrl = `/api/users/${document.user_id}/documents/${document.id}/download`;\n\n      const response = await fetch(downloadUrl);\n      if (!response.ok) {\n        throw new Error('Failed to download document');\n      }\n\n      // Create blob from response\n      const blob = await response.blob();\n\n      // Create download link\n      const url = window.URL.createObjectURL(blob);\n      const link = window.document.createElement('a');\n      link.href = url;\n      link.download = document.file_name;\n      window.document.body.appendChild(link);\n      link.click();\n\n      // Cleanup\n      window.URL.revokeObjectURL(url);\n      window.document.body.removeChild(link);\n    } catch (error) {\n      console.error('Download failed:', error);\n      alert('Ошибка при скачивании документа');\n    }\n  };\n\n  const handleDelete = async () => {\n    const confirmDelete = window.confirm(`Вы уверены, что хотите удалить документ \"${document.file_name}\"?`);\n    if (!confirmDelete) return;\n\n    try {\n      console.log(`🗑️ Удаляю документ \"${document.file_name}\" для работника ID: ${document.user_id}`);\n\n      const response = await fetch(`/api/users/${document.user_id}/documents/${document.id}`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete document');\n      }\n\n      console.log(`✅ Документ \"${document.file_name}\" успешно удален`);\n\n      // Refresh the documents list\n      queryClient.invalidateQueries({\n        queryKey: ['worker-documents', document.user_id]\n      });\n\n      alert('Документ успешно удален');\n\n    } catch (error) {\n      console.error('Delete failed:', error);\n      alert('Ошибка при удалении документа');\n    }\n  };\n\n  return (\n    <Card className=\"mb-4\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"text-lg flex items-center gap-2\">\n            <div\n              className=\"w-3 h-3 rounded-full\"\n              style={{ backgroundColor: document.category.color }}\n            />\n            {document.category.name_ru || document.category.name_en}\n          </CardTitle>\n          <Badge\n            variant=\"secondary\"\n            className={`${statusColor} text-white flex items-center gap-1`}\n          >\n            {statusIcon}\n            {statusText}\n          </Badge>\n        </div>\n      </CardHeader>\n      <CardContent className=\"space-y-3\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n          {document.document_number && (\n            <div>\n              <span className=\"font-medium text-muted-foreground\">Номер документа:</span>\n              <p>{document.document_number}</p>\n            </div>\n          )}\n\n          {document.issuing_authority && (\n            <div>\n              <span className=\"font-medium text-muted-foreground\">Выдавший орган:</span>\n              <p>{document.issuing_authority}</p>\n            </div>\n          )}\n\n          {document.issue_date && (\n            <div>\n              <span className=\"font-medium text-muted-foreground\">Дата выдачи:</span>\n              <p>{new Date(document.issue_date).toLocaleDateString('ru-RU')}</p>\n            </div>\n          )}\n\n          {document.expiry_date && (\n            <div>\n              <span className=\"font-medium text-muted-foreground\">Дата истечения:</span>\n              <p className={document.status === 'expired' ? 'text-red-600 font-medium' : document.status === 'expiring_soon' ? 'text-yellow-600 font-medium' : ''}>\n                {new Date(document.expiry_date).toLocaleDateString('ru-RU')}\n              </p>\n            </div>\n          )}\n        </div>\n\n        {document.notes && (\n          <div>\n            <span className=\"font-medium text-muted-foreground\">Примечания:</span>\n            <p className=\"text-sm mt-1\">{document.notes}</p>\n          </div>\n        )}\n\n        <div className=\"flex items-center justify-between pt-2 border-t\">\n          <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n            <FileText className=\"h-4 w-4\" />\n            <span>{document.file_name}</span>\n            <span>({formatFileSize(document.file_size)})</span>\n            {document.is_verified && (\n              <Badge variant=\"outline\" className=\"text-green-600 border-green-600\">\n                <Shield className=\"h-3 w-3 mr-1\" />\n                Проверен\n              </Badge>\n            )}\n          </div>\n\n          <div className=\"flex gap-2\">\n            <Button variant=\"outline\" size=\"sm\" onClick={handleView}>\n              <Eye className=\"h-4 w-4 mr-1\" />\n              Просмотр\n            </Button>\n            <Button variant=\"outline\" size=\"sm\" onClick={handleDownload}>\n              <Download className=\"h-4 w-4 mr-1\" />\n              Скачать\n            </Button>\n            <Button variant=\"outline\" size=\"sm\" onClick={handleDelete} className=\"text-red-600 hover:text-red-700\">\n              <X className=\"h-4 w-4 mr-1\" />\n              Удалить\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction DocumentsByCategory({ documents }: { documents: WorkerDocument[] }) {\n  // Group documents by category\n  const documentsByCategory = documents.reduce((acc, doc) => {\n    const categoryName = doc.category.name_ru || doc.category.name_en;\n    if (!acc[categoryName]) {\n      acc[categoryName] = [];\n    }\n    acc[categoryName].push(doc);\n    return acc;\n  }, {} as Record<string, WorkerDocument[]>);\n\n  return (\n    <div className=\"space-y-6\">\n      {Object.entries(documentsByCategory).map(([categoryName, categoryDocs]) => (\n        <div key={categoryName}>\n          <h3 className=\"font-semibold text-lg mb-3 flex items-center gap-2\">\n            <div\n              className=\"w-3 h-3 rounded-full\"\n              style={{ backgroundColor: categoryDocs[0].category.color }}\n            />\n            {categoryName}\n            <Badge variant=\"outline\">{categoryDocs.length}</Badge>\n          </h3>\n          {categoryDocs.map(doc => (\n            <DocumentCard key={doc.id} document={doc} />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default function WorkerDocumentsDialog({\n  userId,\n  userName,\n  trigger\n}: WorkerDocumentsDialogProps) {\n  const [open, setOpen] = useState(false);\n  const [showUpload, setShowUpload] = useState(false);\n  const queryClient = useQueryClient();\n\n  const { data, isLoading, error } = useQuery({\n    queryKey: ['worker-documents', userId],\n    queryFn: () => fetchWorkerDocuments(userId),\n    enabled: open, // Only fetch when dialog is open\n  });\n\n  const defaultTrigger = (\n    <Button variant=\"outline\" size=\"sm\">\n      <FileText className=\"h-4 w-4 mr-1\" />\n      Документы\n    </Button>\n  );\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        {trigger || defaultTrigger}\n      </DialogTrigger>\n      <DialogContent className=\"max-w-4xl max-h-[80vh] overflow-y-auto\">\n        <DialogHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <DialogTitle className=\"flex items-center gap-2\">\n                <FileText className=\"h-5 w-5\" />\n                Документы работника: {userName}\n              </DialogTitle>\n              <DialogDescription>\n                Просмотр всех документов работника (страховка, разрешения, удостоверения)\n              </DialogDescription>\n            </div>\n            <Button\n              onClick={() => setShowUpload(true)}\n              className=\"flex items-center gap-2\"\n            >\n              <Plus className=\"h-4 w-4\" />\n              Добавить документ\n            </Button>\n          </div>\n        </DialogHeader>\n\n        {isLoading && (\n          <div className=\"flex justify-center py-8\">\n            <div className=\"h-6 w-6 animate-spin rounded-full border-2 border-primary border-t-transparent\" />\n          </div>\n        )}\n\n        {error && (\n          <div className=\"text-center py-8\">\n            <p className=\"text-destructive\">Ошибка загрузки документов</p>\n          </div>\n        )}\n\n        {data && (\n          <div className=\"space-y-6\">\n            {/* Stats */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <Card>\n                <CardContent className=\"p-4 text-center\">\n                  <div className=\"text-2xl font-bold\">{data.stats.total}</div>\n                  <div className=\"text-sm text-muted-foreground\">Всего</div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4 text-center\">\n                  <div className=\"text-2xl font-bold text-green-600\">{data.stats.active}</div>\n                  <div className=\"text-sm text-muted-foreground\">Действительных</div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4 text-center\">\n                  <div className=\"text-2xl font-bold text-yellow-600\">{data.stats.expiring_soon}</div>\n                  <div className=\"text-sm text-muted-foreground\">Истекают скоро</div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4 text-center\">\n                  <div className=\"text-2xl font-bold text-red-600\">{data.stats.expired}</div>\n                  <div className=\"text-sm text-muted-foreground\">Истёкших</div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Documents */}\n            {data.documents.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <FileText className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                <h3 className=\"mt-2 text-sm font-semibold\">Нет документов</h3>\n                <p className=\"mt-1 text-sm text-muted-foreground\">\n                  У этого работника пока нет загруженных документов.\n                </p>\n              </div>\n            ) : (\n              <Tabs defaultValue=\"all\" className=\"w-full\">\n                <TabsList className=\"grid w-full grid-cols-4\">\n                  <TabsTrigger value=\"all\">Все ({data.stats.total})</TabsTrigger>\n                  <TabsTrigger value=\"active\">Действительные ({data.stats.active})</TabsTrigger>\n                  <TabsTrigger value=\"expiring\">Истекают ({data.stats.expiring_soon})</TabsTrigger>\n                  <TabsTrigger value=\"expired\">Истёкшие ({data.stats.expired})</TabsTrigger>\n                </TabsList>\n\n                <TabsContent value=\"all\" className=\"mt-6\">\n                  <DocumentsByCategory documents={data.documents} />\n                </TabsContent>\n\n                <TabsContent value=\"active\" className=\"mt-6\">\n                  <DocumentsByCategory\n                    documents={data.documents.filter(doc => doc.status === 'active')}\n                  />\n                </TabsContent>\n\n                <TabsContent value=\"expiring\" className=\"mt-6\">\n                  <DocumentsByCategory\n                    documents={data.documents.filter(doc => doc.status === 'expiring_soon')}\n                  />\n                </TabsContent>\n\n                <TabsContent value=\"expired\" className=\"mt-6\">\n                  <DocumentsByCategory\n                    documents={data.documents.filter(doc => doc.status === 'expired')}\n                  />\n                </TabsContent>\n              </Tabs>\n            )}\n          </div>\n        )}\n      </DialogContent>\n\n      {/* Upload Document Dialog */}\n      <Dialog open={showUpload} onOpenChange={setShowUpload}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Загрузить документ для {userName}</DialogTitle>\n            <DialogDescription>\n              Загрузите новый документ (паспорт, разрешение на работу, страховка и т.д.)\n            </DialogDescription>\n          </DialogHeader>\n          <DocumentUpload\n            userId={userId}\n            onUploadComplete={(document) => {\n              console.log(`✅ Документ \"${document.file_name}\" успешно добавлен для работника: ${userName} (ID: ${userId})`);\n              setShowUpload(false);\n              // Refresh the documents data\n              queryClient.invalidateQueries({\n                queryKey: ['worker-documents', userId]\n              });\n              // Also invalidate categories data since it might be fetched from the same endpoint\n              queryClient.invalidateQueries({\n                queryKey: ['user-documents-categories', userId]\n              });\n            }}\n          />\n        </DialogContent>\n      </Dialog>\n    </Dialog>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3350, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/lib/validations/user.ts"],"sourcesContent":["import { z } from \"zod\";\n\n// Predefined skills for fiber optic construction workers\nexport const PREDEFINED_SKILLS = [\n  \"Fiber Optic Cable Installation\",\n  \"Fiber Optic Splicing\",\n  \"Cable Pulling\",\n  \"Trenching & Excavation\",\n  \"Underground Construction\",\n  \"Aerial Construction\",\n  \"OSP (Outside Plant) Installation\",\n  \"Fiber Optic Testing (OTDR)\",\n  \"Cable Locating\",\n  \"Traffic Control\",\n  \"Confined Space Entry\",\n  \"Heavy Equipment Operation\",\n  \"Directional Drilling\",\n  \"Manholes & Handholes\",\n  \"Pole Installation\",\n  \"Conduit Installation\",\n  \"Fusion Splicing\",\n  \"Mechanical Splicing\",\n  \"Cable Maintenance\",\n  \"Network Documentation\",\n  \"Safety Compliance\",\n  \"First Aid/CPR\",\n  \"German Language\",\n  \"Russian Language\",\n  \"English Language\",\n  \"Project Management\",\n  \"Team Leadership\"\n] as const;\n\n// User roles\nexport const USER_ROLES = [\n  \"admin\",\n  \"pm\", // project manager\n  \"foreman\",\n  \"crew\", // field worker\n  \"viewer\"\n] as const;\n\n// Create user form schema\nexport const createUserSchema = z.object({\n  email: z\n    .string()\n    .optional()\n    .refine((val) => !val || z.string().email().safeParse(val).success, {\n      message: \"Invalid email format\",\n    }),\n  first_name: z\n    .string()\n    .min(1, \"First name is required\")\n    .min(2, \"First name must be at least 2 characters\")\n    .max(50, \"First name must not exceed 50 characters\"),\n  last_name: z\n    .string()\n    .min(1, \"Last name is required\")\n    .min(2, \"Last name must be at least 2 characters\")\n    .max(50, \"Last name must not exceed 50 characters\"),\n  role: z\n    .enum(USER_ROLES, {\n      required_error: \"Please select a role\",\n    }),\n  phone: z\n    .string()\n    .optional()\n    .refine((val) => !val || val.length >= 10, {\n      message: \"Phone number must be at least 10 digits\",\n    }),\n  pin_code: z\n    .string()\n    .optional()\n    .refine((val) => !val || (val.length >= 4 && val.length <= 6 && /^\\d+$/.test(val)), {\n      message: \"PIN code must be 4-6 digits\",\n    }),\n  skills: z\n    .array(z.string())\n    .default([])\n    .optional(),\n  lang_pref: z\n    .enum([\"en\", \"de\", \"ru\", \"uz\", \"tr\"])\n    .default(\"de\")\n    .optional(),\n}).refine((data) => {\n  // Either email or phone must be provided\n  return data.email || data.phone;\n}, {\n  message: \"Either email or phone number is required\",\n  path: [\"email\"], // This will show the error on the email field\n});\n\nexport type CreateUserFormData = z.infer<typeof createUserSchema>;\n\n// Response type from API\nexport interface UserResponse {\n  id: string;\n  email: string;\n  first_name: string;\n  last_name: string;\n  role: string;\n  phone?: string;\n  is_active: boolean;\n  lang_pref?: string;\n  skills?: string[];\n}\n\n// Skills response from API\nexport interface SkillsResponse {\n  predefined_skills: string[];\n  message: string;\n}"],"names":[],"mappings":";;;;;;;;AAAA;;AAGO,MAAM,oBAAoB;IAC/B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAGM,MAAM,aAAa;IACxB;IACA;IACA;IACA;IACA;CACD;AAGM,MAAM,mBAAmB,kLAAC,CAAC,MAAM,CAAC;IACvC,OAAO,kLAAC,CACL,MAAM,GACN,QAAQ,GACR,MAAM,CAAC,CAAC,MAAQ,CAAC,OAAO,kLAAC,CAAC,MAAM,GAAG,KAAK,GAAG,SAAS,CAAC,KAAK,OAAO,EAAE;QAClE,SAAS;IACX;IACF,YAAY,kLAAC,CACV,MAAM,GACN,GAAG,CAAC,GAAG,0BACP,GAAG,CAAC,GAAG,4CACP,GAAG,CAAC,IAAI;IACX,WAAW,kLAAC,CACT,MAAM,GACN,GAAG,CAAC,GAAG,yBACP,GAAG,CAAC,GAAG,2CACP,GAAG,CAAC,IAAI;IACX,MAAM,kLAAC,CACJ,IAAI,CAAC,YAAY;QAChB,gBAAgB;IAClB;IACF,OAAO,kLAAC,CACL,MAAM,GACN,QAAQ,GACR,MAAM,CAAC,CAAC,MAAQ,CAAC,OAAO,IAAI,MAAM,IAAI,IAAI;QACzC,SAAS;IACX;IACF,UAAU,kLAAC,CACR,MAAM,GACN,QAAQ,GACR,MAAM,CAAC,CAAC,MAAQ,CAAC,OAAQ,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,QAAQ,IAAI,CAAC,MAAO;QAClF,SAAS;IACX;IACF,QAAQ,kLAAC,CACN,KAAK,CAAC,kLAAC,CAAC,MAAM,IACd,OAAO,CAAC,EAAE,EACV,QAAQ;IACX,WAAW,kLAAC,CACT,IAAI,CAAC;QAAC;QAAM;QAAM;QAAM;QAAM;KAAK,EACnC,OAAO,CAAC,MACR,QAAQ;AACb,GAAG,MAAM,CAAC,CAAC;IACT,yCAAyC;IACzC,OAAO,KAAK,KAAK,IAAI,KAAK,KAAK;AACjC,GAAG;IACD,SAAS;IACT,MAAM;QAAC;KAAQ;AACjB","debugId":null}},
    {"offset": {"line": 3432, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/features/user-management/create-user-form.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { X, Plus, Loader2, User, Mail, Phone, Shield, Globe, Code } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { toast } from \"sonner\";\n\nimport {\n  createUserSchema,\n  type CreateUserFormData,\n  type UserResponse,\n  type SkillsResponse,\n  USER_ROLES,\n} from \"@/lib/validations/user\";\n\ninterface CreateUserFormProps {\n  onSuccess?: (user: UserResponse) => void;\n  onCancel?: () => void;\n  defaultRole?: string;\n  editMode?: boolean;\n  initialData?: any;\n}\n\n// API functions\nasync function createUser(data: CreateUserFormData): Promise<UserResponse> {\n  const response = await fetch(\"/api/users\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.detail || \"Failed to create user\");\n  }\n\n  return response.json();\n}\n\nasync function updateUser(id: string, data: CreateUserFormData): Promise<UserResponse> {\n  const response = await fetch(`/api/users/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.detail || \"Failed to update user\");\n  }\n\n  return response.json();\n}\n\nasync function getAvailableSkills(): Promise<SkillsResponse> {\n  const response = await fetch(\"/api/auth/skills\");\n\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch skills\");\n  }\n\n  return response.json();\n}\n\nexport default function CreateUserForm({\n  onSuccess,\n  onCancel,\n  defaultRole = \"crew\",\n  editMode = false,\n  initialData\n}: CreateUserFormProps) {\n  const [selectedSkills, setSelectedSkills] = useState<string[]>(\n    editMode && initialData?.skills ? initialData.skills : []\n  );\n  const [customSkill, setCustomSkill] = useState(\"\");\n  const queryClient = useQueryClient();\n\n  // Fetch available skills\n  const { data: skillsData, isLoading: skillsLoading } = useQuery({\n    queryKey: [\"skills\"],\n    queryFn: getAvailableSkills,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n\n  // Form setup\n  const form = useForm<CreateUserFormData>({\n    resolver: zodResolver(createUserSchema),\n    defaultValues: editMode && initialData ? {\n      email: initialData.email || \"\",\n      first_name: initialData.first_name || \"\",\n      last_name: initialData.last_name || \"\",\n      role: initialData.role || defaultRole as any,\n      phone: initialData.phone || \"\",\n      pin_code: initialData.pin_code || \"\",\n      skills: initialData.skills || [],\n      lang_pref: initialData.lang_pref || \"de\",\n    } : {\n      email: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      role: defaultRole as any,\n      phone: \"\",\n      pin_code: \"\",\n      skills: [],\n      lang_pref: \"de\",\n    },\n  });\n\n  // Create/Update user mutation\n  const userMutation = useMutation({\n    mutationFn: editMode && initialData\n      ? (data: CreateUserFormData) => updateUser(initialData.id, data)\n      : createUser,\n    onSuccess: (data) => {\n      const actionText = editMode ? \"updated\" : \"created\";\n      toast.success(`User ${actionText} successfully!`, {\n        description: `${data.first_name} ${data.last_name} has been ${actionText}.`,\n      });\n\n      // Invalidate users query to refresh the list\n      queryClient.invalidateQueries({ queryKey: [\"users\"] });\n\n      // Reset form only if creating\n      if (!editMode) {\n        form.reset();\n        setSelectedSkills([]);\n      }\n\n      // Call success callback\n      onSuccess?.(data);\n    },\n    onError: (error) => {\n      const actionText = editMode ? \"update\" : \"create\";\n      toast.error(`Failed to ${actionText} user`, {\n        description: error.message,\n      });\n    },\n  });\n\n  // Handle form submission\n  const onSubmit = async (data: CreateUserFormData) => {\n    const formData = {\n      ...data,\n      skills: selectedSkills,\n    };\n\n    userMutation.mutate(formData);\n  };\n\n  // Handle skill selection\n  const toggleSkill = (skill: string) => {\n    setSelectedSkills(prev =>\n      prev.includes(skill)\n        ? prev.filter(s => s !== skill)\n        : [...prev, skill]\n    );\n  };\n\n  // Add custom skill\n  const addCustomSkill = () => {\n    if (customSkill.trim() && !selectedSkills.includes(customSkill.trim())) {\n      setSelectedSkills(prev => [...prev, customSkill.trim()]);\n      setCustomSkill(\"\");\n    }\n  };\n\n  // Remove skill\n  const removeSkill = (skill: string) => {\n    setSelectedSkills(prev => prev.filter(s => s !== skill));\n  };\n\n  const availableSkills = skillsData?.predefined_skills || [];\n\n  return (\n    <Card className=\"w-full max-w-2xl mx-auto\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <User className=\"h-5 w-5\" />\n          {editMode ? \"Edit User\" : \"Create New User\"}\n        </CardTitle>\n        <CardDescription>\n          {editMode\n            ? \"Update user information, roles, and system access.\"\n            : \"Add a new user to the COMETA system. PIN codes will be automatically generated if not provided.\"\n          }\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            {/* Personal Information */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium flex items-center gap-2\">\n                <User className=\"h-4 w-4\" />\n                Personal Information\n              </h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"first_name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>First Name</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"Enter first name\"\n                          {...field}\n                          disabled={userMutation.isPending}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"last_name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Last Name</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"Enter last name\"\n                          {...field}\n                          disabled={userMutation.isPending}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"flex items-center gap-2\">\n                      <Mail className=\"h-4 w-4\" />\n                      Email Address (Optional)\n                    </FormLabel>\n                    <FormControl>\n                      <Input\n                        type=\"email\"\n                        placeholder=\"Enter email address\"\n                        {...field}\n                        disabled={userMutation.isPending}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      Either email or phone number is required for login.\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"phone\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"flex items-center gap-2\">\n                      <Phone className=\"h-4 w-4\" />\n                      Phone Number (Optional)\n                    </FormLabel>\n                    <FormControl>\n                      <Input\n                        type=\"tel\"\n                        placeholder=\"Enter phone number\"\n                        {...field}\n                        disabled={userMutation.isPending}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      Either email or phone number is required for login.\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* System Access */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium flex items-center gap-2\">\n                <Shield className=\"h-4 w-4\" />\n                System Access\n              </h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"role\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Role</FormLabel>\n                      <Select\n                        onValueChange={field.onChange}\n                        defaultValue={field.value}\n                        disabled={userMutation.isPending}\n                      >\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select user role\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          <SelectItem value=\"admin\">Administrator</SelectItem>\n                          <SelectItem value=\"pm\">Project Manager</SelectItem>\n                          <SelectItem value=\"foreman\">Foreman</SelectItem>\n                          <SelectItem value=\"crew\">Field Worker</SelectItem>\n                          <SelectItem value=\"viewer\">Viewer (Read-only)</SelectItem>\n                        </SelectContent>\n                      </Select>\n                      <FormDescription>\n                        Determines what the user can access in the system.\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"pin_code\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"flex items-center gap-2\">\n                        <Code className=\"h-4 w-4\" />\n                        PIN Code (Optional)\n                      </FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Leave empty for auto-generation\"\n                          maxLength={6}\n                          {...field}\n                          disabled={userMutation.isPending}\n                        />\n                      </FormControl>\n                      <FormDescription>\n                        4-6 digits. If empty, will be generated automatically.\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"lang_pref\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"flex items-center gap-2\">\n                      <Globe className=\"h-4 w-4\" />\n                      Language Preference\n                    </FormLabel>\n                    <Select\n                      onValueChange={field.onChange}\n                      defaultValue={field.value}\n                      disabled={userMutation.isPending}\n                    >\n                      <FormControl>\n                        <SelectTrigger className=\"w-full md:w-[200px]\">\n                          <SelectValue />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"de\">German (Deutsch)</SelectItem>\n                        <SelectItem value=\"en\">English</SelectItem>\n                        <SelectItem value=\"ru\">Russian (Русский)</SelectItem>\n                        <SelectItem value=\"uz\">Uzbek (O'zbek)</SelectItem>\n                        <SelectItem value=\"tr\">Turkish (Türkçe)</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Skills */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium\">Skills & Competencies</h3>\n\n              {/* Selected Skills */}\n              {selectedSkills.length > 0 && (\n                <div>\n                  <Label className=\"text-sm font-medium\">Selected Skills:</Label>\n                  <div className=\"flex flex-wrap gap-2 mt-2\">\n                    {selectedSkills.map((skill) => (\n                      <Badge key={skill} variant=\"secondary\" className=\"pr-1\">\n                        {skill}\n                        <Button\n                          type=\"button\"\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"h-auto p-1 ml-1\"\n                          onClick={() => removeSkill(skill)}\n                          disabled={userMutation.isPending}\n                        >\n                          <X className=\"h-3 w-3\" />\n                        </Button>\n                      </Badge>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Add Custom Skill */}\n              <div>\n                <Label className=\"text-sm font-medium\">Add Custom Skill:</Label>\n                <div className=\"flex gap-2 mt-2\">\n                  <Input\n                    placeholder=\"Enter skill name\"\n                    value={customSkill}\n                    onChange={(e) => setCustomSkill(e.target.value)}\n                    onKeyPress={(e) => e.key === \"Enter\" && (e.preventDefault(), addCustomSkill())}\n                    disabled={userMutation.isPending}\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={addCustomSkill}\n                    disabled={!customSkill.trim() || userMutation.isPending}\n                  >\n                    <Plus className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              {/* Predefined Skills */}\n              {skillsLoading ? (\n                <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                  <Loader2 className=\"h-4 w-4 animate-spin\" />\n                  Loading skills...\n                </div>\n              ) : (\n                <div>\n                  <Label className=\"text-sm font-medium\">Select from predefined skills:</Label>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 mt-2 max-h-60 overflow-y-auto\">\n                    {availableSkills.map((skill) => (\n                      <div key={skill} className=\"flex items-center space-x-2\">\n                        <Checkbox\n                          id={skill}\n                          checked={selectedSkills.includes(skill)}\n                          onCheckedChange={() => toggleSkill(skill)}\n                          disabled={userMutation.isPending}\n                        />\n                        <Label\n                          htmlFor={skill}\n                          className=\"text-sm font-normal cursor-pointer\"\n                        >\n                          {skill}\n                        </Label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Actions */}\n            <div className=\"flex gap-4 pt-6 border-t\">\n              {onCancel && (\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={onCancel}\n                  disabled={userMutation.isPending}\n                >\n                  Cancel\n                </Button>\n              )}\n              <Button\n                type=\"submit\"\n                disabled={userMutation.isPending}\n                className=\"flex-1\"\n              >\n                {userMutation.isPending ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                    {editMode ? \"Updating User...\" : \"Creating User...\"}\n                  </>\n                ) : (\n                  editMode ? \"Update User\" : \"Create User\"\n                )}\n              </Button>\n            </div>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAOA;AACA;AASA;AAOA;AACA;AAEA;AAvCA;;;;;;;;;;;;;;;;;AAuDA,gBAAgB;AAChB,eAAe,WAAW,IAAwB;IAChD,MAAM,WAAW,MAAM,MAAM,cAAc;QACzC,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;QACjC,MAAM,IAAI,MAAM,MAAM,MAAM,IAAI;IAClC;IAEA,OAAO,SAAS,IAAI;AACtB;AAEA,eAAe,WAAW,EAAU,EAAE,IAAwB;IAC5D,MAAM,WAAW,MAAM,MAAM,CAAC,WAAW,EAAE,IAAI,EAAE;QAC/C,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;QACjC,MAAM,IAAI,MAAM,MAAM,MAAM,IAAI;IAClC;IAEA,OAAO,SAAS,IAAI;AACtB;AAEA,eAAe;IACb,MAAM,WAAW,MAAM,MAAM;IAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,SAAS,IAAI;AACtB;AAEe,SAAS,eAAe,EACrC,SAAS,EACT,QAAQ,EACR,cAAc,MAAM,EACpB,WAAW,KAAK,EAChB,WAAW,EACS;IACpB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,iNAAQ,EAClD,YAAY,aAAa,SAAS,YAAY,MAAM,GAAG,EAAE;IAE3D,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAC;IAC/C,MAAM,cAAc,IAAA,wMAAc;IAElC,yBAAyB;IACzB,MAAM,EAAE,MAAM,UAAU,EAAE,WAAW,aAAa,EAAE,GAAG,IAAA,uLAAQ,EAAC;QAC9D,UAAU;YAAC;SAAS;QACpB,SAAS;QACT,WAAW,IAAI,KAAK;IACtB;IAEA,aAAa;IACb,MAAM,OAAO,IAAA,yKAAO,EAAqB;QACvC,UAAU,IAAA,6KAAW,EAAC,qJAAgB;QACtC,eAAe,YAAY,cAAc;YACvC,OAAO,YAAY,KAAK,IAAI;YAC5B,YAAY,YAAY,UAAU,IAAI;YACtC,WAAW,YAAY,SAAS,IAAI;YACpC,MAAM,YAAY,IAAI,IAAI;YAC1B,OAAO,YAAY,KAAK,IAAI;YAC5B,UAAU,YAAY,QAAQ,IAAI;YAClC,QAAQ,YAAY,MAAM,IAAI,EAAE;YAChC,WAAW,YAAY,SAAS,IAAI;QACtC,IAAI;YACF,OAAO;YACP,YAAY;YACZ,WAAW;YACX,MAAM;YACN,OAAO;YACP,UAAU;YACV,QAAQ,EAAE;YACV,WAAW;QACb;IACF;IAEA,8BAA8B;IAC9B,MAAM,eAAe,IAAA,6LAAW,EAAC;QAC/B,YAAY,YAAY,cACpB,CAAC,OAA6B,WAAW,YAAY,EAAE,EAAE,QACzD;QACJ,WAAW,CAAC;YACV,MAAM,aAAa,WAAW,YAAY;YAC1C,iJAAK,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,WAAW,cAAc,CAAC,EAAE;gBAChD,aAAa,GAAG,KAAK,UAAU,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;YAC7E;YAEA,6CAA6C;YAC7C,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAQ;YAAC;YAEpD,8BAA8B;YAC9B,IAAI,CAAC,UAAU;gBACb,KAAK,KAAK;gBACV,kBAAkB,EAAE;YACtB;YAEA,wBAAwB;YACxB,YAAY;QACd;QACA,SAAS,CAAC;YACR,MAAM,aAAa,WAAW,WAAW;YACzC,iJAAK,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,WAAW,KAAK,CAAC,EAAE;gBAC1C,aAAa,MAAM,OAAO;YAC5B;QACF;IACF;IAEA,yBAAyB;IACzB,MAAM,WAAW,OAAO;QACtB,MAAM,WAAW;YACf,GAAG,IAAI;YACP,QAAQ;QACV;QAEA,aAAa,MAAM,CAAC;IACtB;IAEA,yBAAyB;IACzB,MAAM,cAAc,CAAC;QACnB,kBAAkB,CAAA,OAChB,KAAK,QAAQ,CAAC,SACV,KAAK,MAAM,CAAC,CAAA,IAAK,MAAM,SACvB;mBAAI;gBAAM;aAAM;IAExB;IAEA,mBAAmB;IACnB,MAAM,iBAAiB;QACrB,IAAI,YAAY,IAAI,MAAM,CAAC,eAAe,QAAQ,CAAC,YAAY,IAAI,KAAK;YACtE,kBAAkB,CAAA,OAAQ;uBAAI;oBAAM,YAAY,IAAI;iBAAG;YACvD,eAAe;QACjB;IACF;IAEA,eAAe;IACf,MAAM,cAAc,CAAC;QACnB,kBAAkB,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,IAAK,MAAM;IACnD;IAEA,MAAM,kBAAkB,YAAY,qBAAqB,EAAE;IAE3D,qBACE,8OAAC,wIAAI;QAAC,WAAU;;0BACd,8OAAC,8IAAU;;kCACT,8OAAC,6IAAS;wBAAC,WAAU;;0CACnB,8OAAC,0MAAI;gCAAC,WAAU;;;;;;4BACf,WAAW,cAAc;;;;;;;kCAE5B,8OAAC,mJAAe;kCACb,WACG,uDACA;;;;;;;;;;;;0BAIR,8OAAC,+IAAW;0BACV,cAAA,8OAAC,wIAAI;oBAAE,GAAG,IAAI;8BACZ,cAAA,8OAAC;wBAAK,UAAU,KAAK,YAAY,CAAC;wBAAW,WAAU;;0CAErD,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;;0DACZ,8OAAC,0MAAI;gDAAC,WAAU;;;;;;4CAAY;;;;;;;kDAI9B,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,6IAAS;gDACR,SAAS,KAAK,OAAO;gDACrB,MAAK;gDACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,4IAAQ;;0EACP,8OAAC,6IAAS;0EAAC;;;;;;0EACX,8OAAC,+IAAW;0EACV,cAAA,8OAAC,0IAAK;oEACJ,aAAY;oEACX,GAAG,KAAK;oEACT,UAAU,aAAa,SAAS;;;;;;;;;;;0EAGpC,8OAAC,+IAAW;;;;;;;;;;;;;;;;0DAKlB,8OAAC,6IAAS;gDACR,SAAS,KAAK,OAAO;gDACrB,MAAK;gDACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,4IAAQ;;0EACP,8OAAC,6IAAS;0EAAC;;;;;;0EACX,8OAAC,+IAAW;0EACV,cAAA,8OAAC,0IAAK;oEACJ,aAAY;oEACX,GAAG,KAAK;oEACT,UAAU,aAAa,SAAS;;;;;;;;;;;0EAGpC,8OAAC,+IAAW;;;;;;;;;;;;;;;;;;;;;;kDAMpB,8OAAC,6IAAS;wCACR,SAAS,KAAK,OAAO;wCACrB,MAAK;wCACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,4IAAQ;;kEACP,8OAAC,6IAAS;wDAAC,WAAU;;0EACnB,8OAAC,0MAAI;gEAAC,WAAU;;;;;;4DAAY;;;;;;;kEAG9B,8OAAC,+IAAW;kEACV,cAAA,8OAAC,0IAAK;4DACJ,MAAK;4DACL,aAAY;4DACX,GAAG,KAAK;4DACT,UAAU,aAAa,SAAS;;;;;;;;;;;kEAGpC,8OAAC,mJAAe;kEAAC;;;;;;kEAGjB,8OAAC,+IAAW;;;;;;;;;;;;;;;;kDAKlB,8OAAC,6IAAS;wCACR,SAAS,KAAK,OAAO;wCACrB,MAAK;wCACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,4IAAQ;;kEACP,8OAAC,6IAAS;wDAAC,WAAU;;0EACnB,8OAAC,6MAAK;gEAAC,WAAU;;;;;;4DAAY;;;;;;;kEAG/B,8OAAC,+IAAW;kEACV,cAAA,8OAAC,0IAAK;4DACJ,MAAK;4DACL,aAAY;4DACX,GAAG,KAAK;4DACT,UAAU,aAAa,SAAS;;;;;;;;;;;kEAGpC,8OAAC,mJAAe;kEAAC;;;;;;kEAGjB,8OAAC,+IAAW;;;;;;;;;;;;;;;;;;;;;;0CAOpB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;;0DACZ,8OAAC,gNAAM;gDAAC,WAAU;;;;;;4CAAY;;;;;;;kDAIhC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,6IAAS;gDACR,SAAS,KAAK,OAAO;gDACrB,MAAK;gDACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,4IAAQ;;0EACP,8OAAC,6IAAS;0EAAC;;;;;;0EACX,8OAAC,4IAAM;gEACL,eAAe,MAAM,QAAQ;gEAC7B,cAAc,MAAM,KAAK;gEACzB,UAAU,aAAa,SAAS;;kFAEhC,8OAAC,+IAAW;kFACV,cAAA,8OAAC,mJAAa;sFACZ,cAAA,8OAAC,iJAAW;gFAAC,aAAY;;;;;;;;;;;;;;;;kFAG7B,8OAAC,mJAAa;;0FACZ,8OAAC,gJAAU;gFAAC,OAAM;0FAAQ;;;;;;0FAC1B,8OAAC,gJAAU;gFAAC,OAAM;0FAAK;;;;;;0FACvB,8OAAC,gJAAU;gFAAC,OAAM;0FAAU;;;;;;0FAC5B,8OAAC,gJAAU;gFAAC,OAAM;0FAAO;;;;;;0FACzB,8OAAC,gJAAU;gFAAC,OAAM;0FAAS;;;;;;;;;;;;;;;;;;0EAG/B,8OAAC,mJAAe;0EAAC;;;;;;0EAGjB,8OAAC,+IAAW;;;;;;;;;;;;;;;;0DAKlB,8OAAC,6IAAS;gDACR,SAAS,KAAK,OAAO;gDACrB,MAAK;gDACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,4IAAQ;;0EACP,8OAAC,6IAAS;gEAAC,WAAU;;kFACnB,8OAAC,0MAAI;wEAAC,WAAU;;;;;;oEAAY;;;;;;;0EAG9B,8OAAC,+IAAW;0EACV,cAAA,8OAAC,0IAAK;oEACJ,MAAK;oEACL,aAAY;oEACZ,WAAW;oEACV,GAAG,KAAK;oEACT,UAAU,aAAa,SAAS;;;;;;;;;;;0EAGpC,8OAAC,mJAAe;0EAAC;;;;;;0EAGjB,8OAAC,+IAAW;;;;;;;;;;;;;;;;;;;;;;kDAMpB,8OAAC,6IAAS;wCACR,SAAS,KAAK,OAAO;wCACrB,MAAK;wCACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,4IAAQ;;kEACP,8OAAC,6IAAS;wDAAC,WAAU;;0EACnB,8OAAC,6MAAK;gEAAC,WAAU;;;;;;4DAAY;;;;;;;kEAG/B,8OAAC,4IAAM;wDACL,eAAe,MAAM,QAAQ;wDAC7B,cAAc,MAAM,KAAK;wDACzB,UAAU,aAAa,SAAS;;0EAEhC,8OAAC,+IAAW;0EACV,cAAA,8OAAC,mJAAa;oEAAC,WAAU;8EACvB,cAAA,8OAAC,iJAAW;;;;;;;;;;;;;;;0EAGhB,8OAAC,mJAAa;;kFACZ,8OAAC,gJAAU;wEAAC,OAAM;kFAAK;;;;;;kFACvB,8OAAC,gJAAU;wEAAC,OAAM;kFAAK;;;;;;kFACvB,8OAAC,gJAAU;wEAAC,OAAM;kFAAK;;;;;;kFACvB,8OAAC,gJAAU;wEAAC,OAAM;kFAAK;;;;;;kFACvB,8OAAC,gJAAU;wEAAC,OAAM;kFAAK;;;;;;;;;;;;;;;;;;kEAG3B,8OAAC,+IAAW;;;;;;;;;;;;;;;;;;;;;;0CAOpB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDAAsB;;;;;;oCAGnC,eAAe,MAAM,GAAG,mBACvB,8OAAC;;0DACC,8OAAC,0IAAK;gDAAC,WAAU;0DAAsB;;;;;;0DACvC,8OAAC;gDAAI,WAAU;0DACZ,eAAe,GAAG,CAAC,CAAC,sBACnB,8OAAC,0IAAK;wDAAa,SAAQ;wDAAY,WAAU;;4DAC9C;0EACD,8OAAC,4IAAM;gEACL,MAAK;gEACL,SAAQ;gEACR,MAAK;gEACL,WAAU;gEACV,SAAS,IAAM,YAAY;gEAC3B,UAAU,aAAa,SAAS;0EAEhC,cAAA,8OAAC,iMAAC;oEAAC,WAAU;;;;;;;;;;;;uDAVL;;;;;;;;;;;;;;;;kDAmBpB,8OAAC;;0DACC,8OAAC,0IAAK;gDAAC,WAAU;0DAAsB;;;;;;0DACvC,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,0IAAK;wDACJ,aAAY;wDACZ,OAAO;wDACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wDAC9C,YAAY,CAAC,IAAM,EAAE,GAAG,KAAK,WAAW,CAAC,EAAE,cAAc,IAAI,gBAAgB;wDAC7E,UAAU,aAAa,SAAS;;;;;;kEAElC,8OAAC,4IAAM;wDACL,MAAK;wDACL,SAAQ;wDACR,MAAK;wDACL,SAAS;wDACT,UAAU,CAAC,YAAY,IAAI,MAAM,aAAa,SAAS;kEAEvD,cAAA,8OAAC,0MAAI;4DAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;oCAMrB,8BACC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,4NAAO;gDAAC,WAAU;;;;;;4CAAyB;;;;;;6DAI9C,8OAAC;;0DACC,8OAAC,0IAAK;gDAAC,WAAU;0DAAsB;;;;;;0DACvC,8OAAC;gDAAI,WAAU;0DACZ,gBAAgB,GAAG,CAAC,CAAC,sBACpB,8OAAC;wDAAgB,WAAU;;0EACzB,8OAAC,gJAAQ;gEACP,IAAI;gEACJ,SAAS,eAAe,QAAQ,CAAC;gEACjC,iBAAiB,IAAM,YAAY;gEACnC,UAAU,aAAa,SAAS;;;;;;0EAElC,8OAAC,0IAAK;gEACJ,SAAS;gEACT,WAAU;0EAET;;;;;;;uDAXK;;;;;;;;;;;;;;;;;;;;;;0CAqBpB,8OAAC;gCAAI,WAAU;;oCACZ,0BACC,8OAAC,4IAAM;wCACL,MAAK;wCACL,SAAQ;wCACR,SAAS;wCACT,UAAU,aAAa,SAAS;kDACjC;;;;;;kDAIH,8OAAC,4IAAM;wCACL,MAAK;wCACL,UAAU,aAAa,SAAS;wCAChC,WAAU;kDAET,aAAa,SAAS,iBACrB;;8DACE,8OAAC,4NAAO;oDAAC,WAAU;;;;;;gDAClB,WAAW,qBAAqB;;2DAGnC,WAAW,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS7C","debugId":null}},
    {"offset": {"line": 4478, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/hooks/use-toast.ts"],"sourcesContent":["import { toast as sonnerToast } from \"sonner\";\n\ninterface ToastOptions {\n  title?: string;\n  description?: string;\n  variant?: \"default\" | \"destructive\";\n  duration?: number;\n}\n\nexport function useToast() {\n  const toast = ({ title, description, variant = \"default\", duration = 5000 }: ToastOptions) => {\n    if (variant === \"destructive\") {\n      sonnerToast.error(title || \"Error\", {\n        description,\n        duration,\n      });\n    } else {\n      sonnerToast.success(title || \"Success\", {\n        description,\n        duration,\n      });\n    }\n  };\n\n  return { toast };\n}"],"names":[],"mappings":";;;;AAAA;;AASO,SAAS;IACd,MAAM,QAAQ,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,SAAS,EAAE,WAAW,IAAI,EAAgB;QACvF,IAAI,YAAY,eAAe;YAC7B,iJAAW,CAAC,KAAK,CAAC,SAAS,SAAS;gBAClC;gBACA;YACF;QACF,OAAO;YACL,iJAAW,CAAC,OAAO,CAAC,SAAS,WAAW;gBACtC;gBACA;YACF;QACF;IACF;IAEA,OAAO;QAAE;IAAM;AACjB","debugId":null}},
    {"offset": {"line": 4506, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/teams/assign-user-to-team-dialog.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { UserPlus, Check } from \"lucide-react\";\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface Team {\n  id: string;\n  name: string;\n  project_name?: string;\n  members?: any[];\n  member_count: number;\n}\n\ninterface User {\n  id: string;\n  full_name: string;\n  email?: string;\n  role: string;\n}\n\ninterface AssignUserToTeamDialogProps {\n  user: User;\n  teams: Team[];\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  onSuccess?: () => void;\n}\n\nasync function addUserToTeam(teamId: string, userId: string, role: string = 'member') {\n  const response = await fetch(`/api/crews/${teamId}/members`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      user_id: userId,\n      role_in_crew: role,\n    }),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to add user to team');\n  }\n\n  return response.json();\n}\n\nexport default function AssignUserToTeamDialog({\n  user,\n  teams,\n  children,\n  open: controlledOpen,\n  onOpenChange,\n  onSuccess\n}: AssignUserToTeamDialogProps) {\n  const [internalOpen, setInternalOpen] = useState(false);\n  const open = controlledOpen !== undefined ? controlledOpen : internalOpen;\n  const setOpen = onOpenChange || setInternalOpen;\n  const [selectedTeamId, setSelectedTeamId] = useState<string>(\"\");\n  const [selectedRole, setSelectedRole] = useState<string>(\"member\");\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const router = useRouter();\n\n  // Filter out teams where user is already a member\n  const availableTeams = teams.filter(team =>\n    !team.members?.some(member => member.user_id === user.id)\n  );\n\n  const addToTeamMutation = useMutation({\n    mutationFn: ({ teamId, userId, role }: { teamId: string; userId: string; role: string }) =>\n      addUserToTeam(teamId, userId, role),\n    onSuccess: () => {\n      // Use correct cache keys from useTeams hook\n      queryClient.invalidateQueries({ queryKey: ['teams'] });\n      queryClient.invalidateQueries({ queryKey: ['teams', 'crews'] });\n      queryClient.invalidateQueries({ queryKey: ['crews'] });\n      queryClient.invalidateQueries({ queryKey: ['users'] });\n\n      const selectedTeam = teams.find(t => t.id === selectedTeamId);\n      toast({\n        title: \"Пользователь добавлен в команду\",\n        description: `${user.full_name} добавлен в команду \"${selectedTeam?.name}\"`,\n      });\n\n      setOpen(false);\n      setSelectedTeamId(\"\");\n      setSelectedRole(\"member\");\n\n      if (onSuccess) {\n        onSuccess();\n      }\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Ошибка\",\n        description: error.message || \"Не удалось добавить пользователя в команду\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleAssign = () => {\n    if (!selectedTeamId) {\n      toast({\n        title: \"Ошибка\",\n        description: \"Выберите команду для назначения\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    addToTeamMutation.mutate({\n      teamId: selectedTeamId,\n      userId: user.id,\n      role: selectedRole,\n    });\n  };\n\n  const handleManageMembers = () => {\n    if (selectedTeamId) {\n      setOpen(false);\n      router.push(`/dashboard/teams/${selectedTeamId}/members`);\n    }\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      {children && (\n        <DialogTrigger asChild>\n          {children}\n        </DialogTrigger>\n      )}\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle>Назначить пользователя в команду</DialogTitle>\n          <DialogDescription>\n            Выберите команду для добавления пользователя <strong>{user.full_name}</strong>\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-4 py-4\">\n          {/* User Info */}\n          <div className=\"flex items-center space-x-3 p-3 border rounded-lg bg-muted/50\">\n            <div className=\"flex-1\">\n              <div className=\"font-medium\">{user.full_name}</div>\n              <div className=\"text-sm text-muted-foreground\">{user.email}</div>\n            </div>\n            <Badge variant=\"outline\">{user.role}</Badge>\n          </div>\n\n          {/* Team Selection */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"team-select\">Выберите команду</Label>\n            {availableTeams.length > 0 ? (\n              <Select value={selectedTeamId} onValueChange={setSelectedTeamId}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Выберите команду\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {availableTeams.map((team) => (\n                    <SelectItem key={team.id} value={team.id}>\n                      <div className=\"flex items-center justify-between w-full\">\n                        <div>\n                          <div className=\"font-medium\">{team.name}</div>\n                          {team.project_name && (\n                            <div className=\"text-sm text-muted-foreground\">\n                              Проект: {team.project_name}\n                            </div>\n                          )}\n                        </div>\n                        <Badge variant=\"secondary\" className=\"ml-2\">\n                          {team.member_count} участников\n                        </Badge>\n                      </div>\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            ) : (\n              <div className=\"text-center py-4 text-muted-foreground\">\n                <UserPlus className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n                <p className=\"text-sm\">\n                  Пользователь уже назначен во все доступные команды\n                </p>\n              </div>\n            )}\n          </div>\n\n          {/* Role Selection */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"role-select\">Роль в команде</Label>\n            <Select value={selectedRole} onValueChange={setSelectedRole}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Выберите роль\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"member\">Участник</SelectItem>\n                <SelectItem value=\"leader\">Лидер</SelectItem>\n                <SelectItem value=\"trainee\">Стажер</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n\n        <DialogFooter className=\"flex-col sm:flex-row gap-2\">\n          {selectedTeamId && (\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={handleManageMembers}\n              className=\"w-full sm:w-auto\"\n            >\n              Управлять участниками\n            </Button>\n          )}\n          <div className=\"flex gap-2 w-full sm:w-auto\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => setOpen(false)}\n              className=\"flex-1 sm:flex-initial\"\n            >\n              Отмена\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={handleAssign}\n              disabled={!selectedTeamId || addToTeamMutation.isPending || availableTeams.length === 0}\n              className=\"flex-1 sm:flex-initial\"\n            >\n              {addToTeamMutation.isPending ? (\n                <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-background border-t-transparent mr-2\" />\n              ) : (\n                <Check className=\"mr-2 h-4 w-4\" />\n              )}\n              Назначить\n            </Button>\n          </div>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5005, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/app/%28dashboard%29/dashboard/teams/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Plus, Search, Users, UserPlus, Eye, Edit, Trash2, Phone, Mail, MapPin, FileText, Calendar, Shield, Globe, Code } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\n\nimport { useTeams, useDeleteCrew, useCreateTeam, useUpdateTeam, useForemenUsers } from \"@/hooks/use-teams\";\nimport { useUsers, useCreateUser, useUpdateUser, useDeleteUser } from \"@/hooks/use-users\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport WorkerDocumentsDialog from \"@/components/documents/worker-documents-dialog\";\nimport { usePermissions } from \"@/hooks/use-auth\";\nimport CreateUserForm from \"@/components/features/user-management/create-user-form\";\nimport AssignUserToTeamDialog from \"@/components/teams/assign-user-to-team-dialog\";\n\n\n// Validation schema for creating/editing teams\nconst teamSchema = z.object({\n  name: z.string().min(1, \"Team name is required\"),\n  foreman_user_id: z.string().optional(),\n  project_id: z.string().optional(),\n  description: z.string().optional(),\n});\n\ntype TeamFormData = z.infer<typeof teamSchema>;\n\nexport default function TeamsPage() {\n  const router = useRouter();\n  const { canManageTeams } = usePermissions();\n  const deleteCrew = useDeleteCrew();\n  const createTeam = useCreateTeam();\n  const updateTeam = useUpdateTeam();\n  const updateUser = useUpdateUser();\n  const deleteUser = useDeleteUser();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [showCreateUserDialog, setShowCreateUserDialog] = useState(false);\n  const [showCreateTeamDialog, setShowCreateTeamDialog] = useState(false);\n  const [showEditTeamDialog, setShowEditTeamDialog] = useState(false);\n  const [showUserDetailDialog, setShowUserDetailDialog] = useState(false);\n  const [showEditUserDialog, setShowEditUserDialog] = useState(false);\n  const [showDeleteUserDialog, setShowDeleteUserDialog] = useState(false);\n  const [showAssignUserDialog, setShowAssignUserDialog] = useState(false);\n  const [editingTeam, setEditingTeam] = useState<any>(null);\n  const [selectedUser, setSelectedUser] = useState<any>(null);\n  const [userToAssign, setUserToAssign] = useState<any>(null);\n  const [editingUser, setEditingUser] = useState<any>(null);\n  const [defaultUserRole, setDefaultUserRole] = useState<string>(\"crew\");\n\n  // Bulk operations state\n  const [selectedUsers, setSelectedUsers] = useState<Set<string>>(new Set());\n  const [showBulkActionsDialog, setShowBulkActionsDialog] = useState(false);\n  const [bulkAction, setBulkAction] = useState<string>(\"\");\n\n  const createTeamForm = useForm<TeamFormData>({\n    resolver: zodResolver(teamSchema),\n    defaultValues: {\n      name: \"\",\n      foreman_user_id: \"none\",\n      project_id: \"none\",\n      description: \"\",\n    },\n  });\n\n  const editTeamForm = useForm<TeamFormData>({\n    resolver: zodResolver(teamSchema),\n    defaultValues: {\n      name: \"\",\n      foreman_user_id: \"none\",\n      project_id: \"none\",\n      description: \"\",\n    },\n  });\n\n  const { data: crews, isLoading: crewsLoading, error: crewsError } = useTeams();\n\n  // Get query client for manual refresh\n  const queryClient = useQueryClient();\n\n  const { data: usersResponse, isLoading: usersLoading } = useUsers({\n    page: 1,\n    per_page: 100 // Load more users to see all of them\n  });\n  const { data: foremenUsers } = useForemenUsers();\n\n  const users = usersResponse?.items || [];\n\n  // Helper function to check if user is assigned to any team\n  const isUserAssignedToTeam = (userId: string): boolean => {\n    if (!crews) return false;\n\n    return crews.some(crew =>\n      // Check if user is foreman of any crew\n      crew.foreman?.id === userId ||\n      // Check if user is member of any crew\n      crew.members?.some(member => member.user_id === userId)\n    );\n  };\n\n  // Filter workers: only show those not assigned to any team\n  const availableWorkers = users.filter(user =>\n    [\"crew\", \"worker\", \"foreman\"].includes(user.role) &&\n    !isUserAssignedToTeam(user.id)\n  );\n\n  // Filter users based on search query for the \"All Users\" tab\n  const filteredUsers = users.filter(user =>\n    !searchQuery ||\n    user.full_name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    user.email?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    user.role.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    user.skills?.some(skill => skill.toLowerCase().includes(searchQuery.toLowerCase()))\n  );\n\n  const handleDeleteCrew = async (crewId: string, crewName: string) => {\n    if (confirm(`Are you sure you want to delete \"${crewName}\"? This action cannot be undone.`)) {\n      await deleteCrew.mutateAsync(crewId);\n    }\n  };\n\n  const handleUserCreated = () => {\n    setShowCreateUserDialog(false);\n    // The CreateUserForm component handles success notifications and query invalidation\n  };\n\n  const handleUserClick = (user: any) => {\n    setSelectedUser(user);\n    setShowUserDetailDialog(true);\n  };\n\n  const handleEditUser = (user: any) => {\n    setEditingUser(user);\n    setShowEditUserDialog(true);\n    setShowUserDetailDialog(false);\n  };\n\n  const handleDeleteUser = (user: any) => {\n    setSelectedUser(user);\n    setShowDeleteUserDialog(true);\n    setShowUserDetailDialog(false);\n  };\n\n  const confirmDeleteUser = async () => {\n    if (!selectedUser) return;\n\n    try {\n      await deleteUser.mutateAsync(selectedUser.id);\n      setShowDeleteUserDialog(false);\n      setSelectedUser(null);\n    } catch (error) {\n      console.error(\"Failed to delete user:\", error);\n    }\n  };\n\n  // Bulk operations handlers\n  const handleSelectUser = (userId: string, checked: boolean) => {\n    const newSelection = new Set(selectedUsers);\n    if (checked) {\n      newSelection.add(userId);\n    } else {\n      newSelection.delete(userId);\n    }\n    setSelectedUsers(newSelection);\n  };\n\n  const handleSelectAllUsers = (checked: boolean) => {\n    if (checked) {\n      // Use different user lists based on the current tab context\n      const allUserIds = filteredUsers.map(user => user.id);\n      setSelectedUsers(new Set(allUserIds));\n    } else {\n      setSelectedUsers(new Set());\n    }\n  };\n\n  const handleBulkAction = (action: string) => {\n    setBulkAction(action);\n    setShowBulkActionsDialog(true);\n  };\n\n  const confirmBulkAction = async () => {\n    if (!bulkAction || selectedUsers.size === 0) return;\n\n    try {\n      const userIds = Array.from(selectedUsers);\n\n      if (bulkAction === \"delete\") {\n        // Delete selected users\n        await Promise.all(userIds.map(id => deleteUser.mutateAsync(id)));\n      } else if (bulkAction.startsWith(\"role_\")) {\n        // Update roles\n        const newRole = bulkAction.replace(\"role_\", \"\");\n        await Promise.all(\n          userIds.map(id => {\n            const user = users.find(u => u.id === id);\n            if (user) {\n              return updateUser.mutateAsync({\n                id,\n                data: { ...user, role: newRole }\n              });\n            }\n          })\n        );\n      }\n\n      setShowBulkActionsDialog(false);\n      setSelectedUsers(new Set());\n      setBulkAction(\"\");\n    } catch (error) {\n      console.error(\"Failed to perform bulk action:\", error);\n    }\n  };\n\n  const handleCreateTeam = async (data: TeamFormData) => {\n    try {\n      // Convert \"none\" values to undefined for API\n      const apiData = {\n        ...data,\n        foreman_user_id: data.foreman_user_id === \"none\" ? undefined : data.foreman_user_id,\n        project_id: data.project_id === \"none\" ? undefined : data.project_id,\n      };\n      await createTeam.mutateAsync(apiData);\n      setShowCreateTeamDialog(false);\n      createTeamForm.reset();\n    } catch (error) {\n      // Error is handled by the mutation\n      console.error(\"Failed to create team:\", error);\n    }\n  };\n\n  const handleEditTeam = (team: any) => {\n    setEditingTeam(team);\n    editTeamForm.setValue(\"name\", team.name);\n    editTeamForm.setValue(\"foreman_user_id\", team.foreman?.id || \"none\");\n    editTeamForm.setValue(\"project_id\", team.project_id || \"none\");\n    editTeamForm.setValue(\"description\", team.description || \"\");\n    setShowEditTeamDialog(true);\n  };\n\n  const handleUpdateTeam = async (data: TeamFormData) => {\n    if (!editingTeam) return;\n\n    try {\n      // Convert \"none\" values to undefined for API\n      const apiData = {\n        ...data,\n        foreman_user_id: data.foreman_user_id === \"none\" ? undefined : data.foreman_user_id,\n        project_id: data.project_id === \"none\" ? undefined : data.project_id,\n      };\n      await updateTeam.mutateAsync({ id: editingTeam.id, data: apiData });\n      setShowEditTeamDialog(false);\n      setEditingTeam(null);\n      editTeamForm.reset();\n    } catch (error) {\n      // Error is handled by the mutation\n      console.error(\"Failed to update team:\", error);\n    }\n  };\n\n  const getRoleColor = (role: string) => {\n    switch (role) {\n      case \"foreman\":\n        return \"default\";\n      case \"crew\":\n      case \"worker\":\n        return \"secondary\";\n      default:\n        return \"outline\";\n    }\n  };\n\n  if (crewsError) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <h1 className=\"text-3xl font-bold tracking-tight\">Teams</h1>\n        </div>\n        <Card>\n          <CardContent className=\"py-8\">\n            <div className=\"text-center text-muted-foreground\">\n              Failed to load teams. Please try again later.\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Teams</h1>\n          <p className=\"text-muted-foreground\">\n            Manage work crews and team assignments\n          </p>\n        </div>\n        {canManageTeams && (\n          <div className=\"flex space-x-2\">\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                setDefaultUserRole(\"crew\");\n                setShowCreateUserDialog(true);\n              }}\n            >\n              <UserPlus className=\"mr-2 h-4 w-4\" />\n              Add Team Member\n            </Button>\n            <Button onClick={() => setShowCreateTeamDialog(true)}>\n              <Plus className=\"mr-2 h-4 w-4\" />\n              New Team\n            </Button>\n          </div>\n        )}\n      </div>\n\n      <Tabs defaultValue=\"crews\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"crews\">Work Crews ({crews?.length || 0})</TabsTrigger>\n          <TabsTrigger value=\"available\">Available Workers ({availableWorkers.length})</TabsTrigger>\n          <TabsTrigger value=\"all-users\">All Users ({users.length})</TabsTrigger>\n          <TabsTrigger value=\"overview\">Team Overview</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"crews\" className=\"space-y-6\">\n          {/* Search */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Filter Teams</CardTitle>\n              <CardDescription>\n                Search teams by name or foreman\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"relative\">\n                <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Search teams by name, foreman, or project...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"pl-8\"\n                />\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Teams Grid */}\n          <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n            {crewsLoading ? (\n              [...Array(6)].map((_, i) => (\n                <Card key={i}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"space-y-4\">\n                      <div className=\"h-4 bg-muted animate-pulse rounded\" />\n                      <div className=\"h-3 bg-muted animate-pulse rounded w-3/4\" />\n                      <div className=\"h-3 bg-muted animate-pulse rounded w-1/2\" />\n                    </div>\n                  </CardContent>\n                </Card>\n              ))\n            ) : crews?.length === 0 ? (\n              <div className=\"col-span-full\">\n                <Card>\n                  <CardContent className=\"py-8\">\n                    <div className=\"text-center\">\n                      <Users className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                      <h3 className=\"mt-2 text-sm font-semibold\">No teams found</h3>\n                      <p className=\"mt-1 text-sm text-muted-foreground\">\n                        Get started by creating your first work crew.\n                      </p>\n                      {canManageTeams && (\n                        <Button\n                          className=\"mt-4\"\n                          onClick={() => router.push(\"/dashboard/teams/new\")}\n                        >\n                          <Plus className=\"mr-2 h-4 w-4\" />\n                          Create Team\n                        </Button>\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            ) : (\n              crews\n                ?.filter(crew =>\n                  !searchQuery ||\n                  crew.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                  crew.foreman?.full_name?.toLowerCase().includes(searchQuery.toLowerCase())\n                )\n                .map((crew) => (\n                  <Card key={crew.id} className=\"hover:shadow-md transition-shadow\">\n                    <CardHeader className=\"pb-3\">\n                      <div className=\"flex items-center justify-between\">\n                        <CardTitle className=\"text-lg\">{crew.name}</CardTitle>\n                        {canManageTeams && (\n                          <DropdownMenu>\n                            <DropdownMenuTrigger asChild>\n                              <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                                <span className=\"sr-only\">Open menu</span>\n                                <Edit className=\"h-4 w-4\" />\n                              </Button>\n                            </DropdownMenuTrigger>\n                            <DropdownMenuContent align=\"end\">\n                              <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                              <DropdownMenuItem\n                                onClick={() => router.push(`/dashboard/teams/${crew.id}`)}\n                              >\n                                <Eye className=\"mr-2 h-4 w-4\" />\n                                View Details\n                              </DropdownMenuItem>\n                              <DropdownMenuItem\n                                onClick={() => handleEditTeam(crew)}\n                              >\n                                <Edit className=\"mr-2 h-4 w-4\" />\n                                Edit Team\n                              </DropdownMenuItem>\n                              <DropdownMenuSeparator />\n                              <DropdownMenuItem\n                                className=\"text-destructive\"\n                                onClick={() => handleDeleteCrew(crew.id, crew.name)}\n                              >\n                                <Trash2 className=\"mr-2 h-4 w-4\" />\n                                Delete Team\n                              </DropdownMenuItem>\n                            </DropdownMenuContent>\n                          </DropdownMenu>\n                        )}\n                      </div>\n                    </CardHeader>\n                    <CardContent className=\"space-y-4\">\n                      {/* Foreman */}\n                      {crew.foreman && (\n                        <div className=\"flex items-center space-x-3\">\n                          <Badge variant=\"default\">Foreman</Badge>\n                          <div>\n                            <div className=\"font-medium text-sm\">{crew.foreman.full_name}</div>\n                            <div className=\"text-xs text-muted-foreground flex items-center space-x-1\">\n                              <Phone className=\"h-3 w-3\" />\n                              <span>{crew.foreman.phone || \"—\"}</span>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n\n                      {/* Team Members */}\n                      <div className=\"space-y-2\">\n                        <div className=\"text-sm font-medium flex items-center space-x-1\">\n                          <Users className=\"h-4 w-4\" />\n                          <span>Team Members ({crew.member_count || 0})</span>\n                        </div>\n                        {crew.members?.length ? (\n                          <div className=\"space-y-1\">\n                            {crew.members.slice(0, 3).map((member) => (\n                              <div key={member.id} className=\"flex items-center justify-between text-sm\">\n                                <span>{member.user?.full_name || \"Unknown\"}</span>\n                                <Badge variant={getRoleColor(member.user?.role || \"\")}>\n                                  {member.user?.role || \"—\"}\n                                </Badge>\n                              </div>\n                            ))}\n                            {crew.members.length > 3 && (\n                              <div className=\"text-xs text-muted-foreground\">\n                                +{crew.members.length - 3} more\n                              </div>\n                            )}\n                          </div>\n                        ) : (\n                          <div className=\"text-sm text-muted-foreground\">No members assigned</div>\n                        )}\n                      </div>\n\n                      {/* Project Assignment */}\n                      {crew.project_id && (\n                        <div className=\"pt-2 border-t\">\n                          <div className=\"text-xs text-muted-foreground flex items-center space-x-1\">\n                            <MapPin className=\"h-3 w-3\" />\n                            <span>Assigned to Project {crew.project_id}</span>\n                          </div>\n                        </div>\n                      )}\n\n                      {/* Actions */}\n                      <div className=\"flex space-x-2 pt-2\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          className=\"flex-1\"\n                          onClick={() => router.push(`/dashboard/teams/${crew.id}`)}\n                        >\n                          <Eye className=\"mr-2 h-3 w-3\" />\n                          View\n                        </Button>\n                        {canManageTeams && (\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            className=\"flex-1\"\n                            onClick={() => handleEditTeam(crew)}\n                          >\n                            <Edit className=\"mr-2 h-3 w-3\" />\n                            Edit\n                          </Button>\n                        )}\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))\n            )}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"available\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <UserPlus className=\"h-5 w-5\" />\n                Available Workers ({availableWorkers.length})\n              </CardTitle>\n              <CardDescription>\n                Workers available for team assignment (excludes already assigned workers)\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {usersLoading ? (\n                <div className=\"space-y-4\">\n                  {[...Array(5)].map((_, i) => (\n                    <div key={i} className=\"flex space-x-4\">\n                      <div className=\"h-4 bg-muted animate-pulse rounded flex-1\" />\n                      <div className=\"h-4 bg-muted animate-pulse rounded w-20\" />\n                    </div>\n                  ))}\n                </div>\n              ) : availableWorkers.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <UserPlus className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                  <h3 className=\"mt-2 text-sm font-semibold\">All workers assigned</h3>\n                  <p className=\"mt-1 text-sm text-muted-foreground\">\n                    All available workers are currently assigned to teams. Check the \"All Users\" tab to see assignment status.\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {/* Bulk Actions Toolbar */}\n                  {selectedUsers.size > 0 && (\n                    <div className=\"flex items-center justify-between p-3 bg-muted/50 rounded-lg border\">\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-sm font-medium\">\n                          {selectedUsers.size} user{selectedUsers.size > 1 ? 's' : ''} selected\n                        </span>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <DropdownMenu>\n                          <DropdownMenuTrigger asChild>\n                            <Button variant=\"outline\" size=\"sm\">\n                              Change Role\n                            </Button>\n                          </DropdownMenuTrigger>\n                          <DropdownMenuContent>\n                            <DropdownMenuLabel>Assign Role</DropdownMenuLabel>\n                            <DropdownMenuSeparator />\n                            <DropdownMenuItem onClick={() => handleBulkAction(\"role_admin\")}>\n                              Administrator\n                            </DropdownMenuItem>\n                            <DropdownMenuItem onClick={() => handleBulkAction(\"role_pm\")}>\n                              Project Manager\n                            </DropdownMenuItem>\n                            <DropdownMenuItem onClick={() => handleBulkAction(\"role_foreman\")}>\n                              Foreman\n                            </DropdownMenuItem>\n                            <DropdownMenuItem onClick={() => handleBulkAction(\"role_crew\")}>\n                              Crew Member\n                            </DropdownMenuItem>\n                            <DropdownMenuItem onClick={() => handleBulkAction(\"role_viewer\")}>\n                              Viewer\n                            </DropdownMenuItem>\n                          </DropdownMenuContent>\n                        </DropdownMenu>\n                        <Button\n                          variant=\"destructive\"\n                          size=\"sm\"\n                          onClick={() => handleBulkAction(\"delete\")}\n                        >\n                          <Trash2 className=\"h-4 w-4 mr-1\" />\n                          Delete Selected\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => setSelectedUsers(new Set())}\n                        >\n                          Clear Selection\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead className=\"w-[50px]\">\n                        <Checkbox\n                          checked={\n                            selectedUsers.size > 0 &&\n                            selectedUsers.size === availableWorkers.length\n                          }\n                          onCheckedChange={(checked) =>\n                            handleSelectAllUsers(checked as boolean)\n                          }\n                          aria-label=\"Select all users\"\n                        />\n                      </TableHead>\n                      <TableHead>Name</TableHead>\n                      <TableHead>Role</TableHead>\n                      <TableHead>PIN Code</TableHead>\n                      <TableHead>Skills</TableHead>\n                      <TableHead>Contact</TableHead>\n                      <TableHead className=\"w-[100px]\">Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {availableWorkers.map((user) => (\n                      <TableRow\n                        key={user.id}\n                        className=\"cursor-pointer hover:bg-muted/50\"\n                        onClick={() => handleUserClick(user)}\n                      >\n                        <TableCell onClick={(e) => e.stopPropagation()}>\n                          <Checkbox\n                            checked={selectedUsers.has(user.id)}\n                            onCheckedChange={(checked) =>\n                              handleSelectUser(user.id, checked as boolean)\n                            }\n                            aria-label={`Select ${user.full_name}`}\n                          />\n                        </TableCell>\n                        <TableCell>\n                          <div>\n                            <div className=\"font-medium\">{user.full_name}</div>\n                            <div className=\"text-sm text-muted-foreground\">{user.email}</div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <Badge variant={getRoleColor(user.role)}>\n                            {user.role}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"text-sm font-mono\">\n                            {user.pin_code ? (\n                              <span className=\"bg-muted px-2 py-1 rounded text-xs\">\n                                {user.pin_code}\n                              </span>\n                            ) : (\n                              <span className=\"text-muted-foreground\">—</span>\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex flex-wrap gap-1 max-w-[200px]\">\n                            {user.skills && user.skills.length > 0 ? (\n                              <>\n                                {user.skills.slice(0, 2).map((skill, index) => (\n                                  <Badge key={index} variant=\"secondary\" className=\"text-xs\">\n                                    {skill}\n                                  </Badge>\n                                ))}\n                                {user.skills.length > 2 && (\n                                  <Badge variant=\"outline\" className=\"text-xs\">\n                                    +{user.skills.length - 2}\n                                  </Badge>\n                                )}\n                              </>\n                            ) : (\n                              <span className=\"text-muted-foreground text-sm\">No skills</span>\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"text-sm\">\n                            {user.phone && (\n                              <div className=\"flex items-center space-x-1\">\n                                <Phone className=\"h-3 w-3\" />\n                                <span>{user.phone}</span>\n                              </div>\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          {canManageTeams && (\n                            <AssignUserToTeamDialog\n                              user={user}\n                              teams={crews || []}\n                            >\n                              <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={(e) => e.stopPropagation()}\n                              >\n                                <UserPlus className=\"mr-2 h-3 w-3\" />\n                                Assign\n                              </Button>\n                            </AssignUserToTeamDialog>\n                          )}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"all-users\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Users className=\"h-5 w-5\" />\n                All Users ({users.length})\n              </CardTitle>\n              <CardDescription>\n                Complete user directory with all roles and management capabilities\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {usersLoading ? (\n                <div className=\"space-y-4\">\n                  {[...Array(10)].map((_, i) => (\n                    <div key={i} className=\"flex space-x-4\">\n                      <div className=\"h-4 bg-muted animate-pulse rounded flex-1\" />\n                      <div className=\"h-4 bg-muted animate-pulse rounded w-20\" />\n                    </div>\n                  ))}\n                </div>\n              ) : users.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Users className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                  <h3 className=\"mt-2 text-sm font-semibold\">No users found</h3>\n                  <p className=\"mt-1 text-sm text-muted-foreground\">\n                    Get started by creating your first user account.\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {/* Bulk Actions Toolbar */}\n                  {selectedUsers.size > 0 && (\n                    <div className=\"flex items-center justify-between p-3 bg-muted/50 rounded-lg border\">\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-sm font-medium\">\n                          {selectedUsers.size} user{selectedUsers.size > 1 ? 's' : ''} selected\n                        </span>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <DropdownMenu>\n                          <DropdownMenuTrigger asChild>\n                            <Button variant=\"outline\" size=\"sm\">\n                              Change Role\n                            </Button>\n                          </DropdownMenuTrigger>\n                          <DropdownMenuContent>\n                            <DropdownMenuLabel>Assign Role</DropdownMenuLabel>\n                            <DropdownMenuSeparator />\n                            <DropdownMenuItem onClick={() => handleBulkAction(\"role_admin\")}>\n                              Administrator\n                            </DropdownMenuItem>\n                            <DropdownMenuItem onClick={() => handleBulkAction(\"role_pm\")}>\n                              Project Manager\n                            </DropdownMenuItem>\n                            <DropdownMenuItem onClick={() => handleBulkAction(\"role_foreman\")}>\n                              Foreman\n                            </DropdownMenuItem>\n                            <DropdownMenuItem onClick={() => handleBulkAction(\"role_crew\")}>\n                              Crew Member\n                            </DropdownMenuItem>\n                            <DropdownMenuItem onClick={() => handleBulkAction(\"role_viewer\")}>\n                              Viewer\n                            </DropdownMenuItem>\n                          </DropdownMenuContent>\n                        </DropdownMenu>\n                        <Button\n                          variant=\"destructive\"\n                          size=\"sm\"\n                          onClick={() => handleBulkAction(\"delete\")}\n                        >\n                          <Trash2 className=\"h-4 w-4 mr-1\" />\n                          Delete Selected\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => setSelectedUsers(new Set())}\n                        >\n                          Clear Selection\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead className=\"w-[50px]\">\n                          <Checkbox\n                            checked={\n                              selectedUsers.size > 0 &&\n                              selectedUsers.size === filteredUsers.length\n                            }\n                            onCheckedChange={(checked) =>\n                              handleSelectAllUsers(checked as boolean)\n                            }\n                            aria-label=\"Select all users\"\n                          />\n                        </TableHead>\n                        <TableHead>Name</TableHead>\n                        <TableHead>Role</TableHead>\n                        <TableHead>PIN Code</TableHead>\n                        <TableHead>Skills</TableHead>\n                        <TableHead>Contact</TableHead>\n                        <TableHead>Status</TableHead>\n                        <TableHead>Team Status</TableHead>\n                        <TableHead className=\"w-[100px]\">Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {filteredUsers.map((user) => (\n                        <TableRow\n                          key={user.id}\n                          className=\"cursor-pointer hover:bg-muted/50\"\n                          onClick={() => handleUserClick(user)}\n                        >\n                          <TableCell onClick={(e) => e.stopPropagation()}>\n                            <Checkbox\n                              checked={selectedUsers.has(user.id)}\n                              onCheckedChange={(checked) =>\n                                handleSelectUser(user.id, checked as boolean)\n                              }\n                              aria-label={`Select ${user.full_name}`}\n                            />\n                          </TableCell>\n                          <TableCell>\n                            <div>\n                              <div className=\"font-medium\">{user.full_name}</div>\n                              <div className=\"text-sm text-muted-foreground\">{user.email}</div>\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <Badge variant={getRoleColor(user.role)}>\n                              {user.role}\n                            </Badge>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"text-sm font-mono\">\n                              {user.pin_code ? (\n                                <span className=\"bg-muted px-2 py-1 rounded text-xs\">\n                                  {user.pin_code}\n                                </span>\n                              ) : (\n                                <span className=\"text-muted-foreground\">—</span>\n                              )}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex flex-wrap gap-1 max-w-[200px]\">\n                              {user.skills && user.skills.length > 0 ? (\n                                <>\n                                  {user.skills.slice(0, 2).map((skill, index) => (\n                                    <Badge key={index} variant=\"secondary\" className=\"text-xs\">\n                                      {skill}\n                                    </Badge>\n                                  ))}\n                                  {user.skills.length > 2 && (\n                                    <Badge variant=\"outline\" className=\"text-xs\">\n                                      +{user.skills.length - 2}\n                                    </Badge>\n                                  )}\n                                </>\n                              ) : (\n                                <span className=\"text-muted-foreground text-sm\">No skills</span>\n                              )}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"text-sm\">\n                              {user.phone && (\n                                <div className=\"flex items-center space-x-1\">\n                                  <Phone className=\"h-3 w-3\" />\n                                  <span>{user.phone}</span>\n                                </div>\n                              )}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <Badge variant={user.is_active ? \"default\" : \"secondary\"}>\n                              {user.is_active ? \"Active\" : \"Inactive\"}\n                            </Badge>\n                          </TableCell>\n                          <TableCell>\n                            {isUserAssignedToTeam(user.id) ? (\n                              <Badge variant=\"default\" className=\"bg-green-600\">\n                                Assigned\n                              </Badge>\n                            ) : [\"crew\", \"worker\", \"foreman\"].includes(user.role) ? (\n                              <Badge variant=\"outline\">\n                                Available\n                              </Badge>\n                            ) : (\n                              <Badge variant=\"secondary\">\n                                N/A\n                              </Badge>\n                            )}\n                          </TableCell>\n                          <TableCell>\n                            {canManageTeams && (\n                              <DropdownMenu>\n                                <DropdownMenuTrigger asChild>\n                                  <Button\n                                    variant=\"outline\"\n                                    size=\"sm\"\n                                    onClick={(e) => e.stopPropagation()}\n                                  >\n                                    Actions\n                                  </Button>\n                                </DropdownMenuTrigger>\n                                <DropdownMenuContent align=\"end\">\n                                  <DropdownMenuLabel>User Actions</DropdownMenuLabel>\n                                  <DropdownMenuItem\n                                    onClick={(e) => {\n                                      e.stopPropagation();\n                                      handleUserClick(user);\n                                    }}\n                                  >\n                                    <Eye className=\"mr-2 h-4 w-4\" />\n                                    View Details\n                                  </DropdownMenuItem>\n                                  <DropdownMenuItem\n                                    onClick={(e) => {\n                                      e.stopPropagation();\n                                      handleEditUser(user);\n                                    }}\n                                  >\n                                    <Edit className=\"mr-2 h-4 w-4\" />\n                                    Edit User\n                                  </DropdownMenuItem>\n                                  {[\"crew\", \"worker\", \"foreman\"].includes(user.role) && !isUserAssignedToTeam(user.id) && (\n                                    <DropdownMenuItem\n                                      onClick={(e) => {\n                                        e.stopPropagation();\n                                        setUserToAssign(user);\n                                        setShowAssignUserDialog(true);\n                                      }}\n                                    >\n                                      <UserPlus className=\"mr-2 h-4 w-4\" />\n                                      Assign to Team\n                                    </DropdownMenuItem>\n                                  )}\n                                  <DropdownMenuSeparator />\n                                  <DropdownMenuItem\n                                    className=\"text-destructive\"\n                                    onClick={(e) => {\n                                      e.stopPropagation();\n                                      handleDeleteUser(user);\n                                    }}\n                                  >\n                                    <Trash2 className=\"mr-2 h-4 w-4\" />\n                                    Delete User\n                                  </DropdownMenuItem>\n                                </DropdownMenuContent>\n                              </DropdownMenu>\n                            )}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"overview\" className=\"space-y-6\">\n          <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Teams</CardTitle>\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{crews?.length || 0}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Active work crews\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Workers</CardTitle>\n                <UserPlus className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {crews?.reduce((sum, crew) => sum + (crew.member_count || 0), 0) || 0}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Assigned to teams\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Available Workers</CardTitle>\n                <UserPlus className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{availableWorkers.length}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Not assigned to teams\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Active Projects</CardTitle>\n                <MapPin className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {new Set(crews?.filter(c => c.project_id).map(c => c.project_id)).size || 0}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  With assigned teams\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Team Performance Overview</CardTitle>\n              <CardDescription>\n                Team productivity and workload analysis\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              {/* Skills Distribution */}\n              <div className=\"space-y-4\">\n                <h4 className=\"text-sm font-medium\">Skills Distribution Across Teams</h4>\n                <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n                  {(() => {\n                    // Calculate skills distribution from all users\n                    const skillsCount: Record<string, number> = {};\n                    users.forEach(user => {\n                      if (user.skills && Array.isArray(user.skills)) {\n                        user.skills.forEach(skill => {\n                          skillsCount[skill] = (skillsCount[skill] || 0) + 1;\n                        });\n                      }\n                    });\n\n                    const topSkills = Object.entries(skillsCount)\n                      .sort(([,a], [,b]) => b - a)\n                      .slice(0, 6);\n\n                    return topSkills.map(([skill, count]) => (\n                      <div key={skill} className=\"space-y-2\">\n                        <div className=\"flex justify-between text-sm\">\n                          <span className=\"font-medium\">{skill}</span>\n                          <span className=\"text-muted-foreground\">{count} workers</span>\n                        </div>\n                        <div className=\"w-full bg-muted rounded-full h-2\">\n                          <div\n                            className=\"bg-primary h-2 rounded-full\"\n                            style={{\n                              width: `${Math.min((count / users.length) * 100, 100)}%`\n                            }}\n                          />\n                        </div>\n                      </div>\n                    ));\n                  })()}\n                </div>\n              </div>\n\n              {/* Role Distribution */}\n              <div className=\"space-y-4\">\n                <h4 className=\"text-sm font-medium\">Role Distribution</h4>\n                <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5\">\n                  {(() => {\n                    const roles = ['admin', 'pm', 'foreman', 'crew', 'viewer'];\n                    const roleColors = {\n                      admin: 'bg-red-500',\n                      pm: 'bg-blue-500',\n                      foreman: 'bg-green-500',\n                      crew: 'bg-yellow-500',\n                      viewer: 'bg-gray-500'\n                    };\n\n                    return roles.map(role => {\n                      const count = users.filter(user => user.role === role).length;\n                      const percentage = users.length > 0 ? (count / users.length) * 100 : 0;\n\n                      return (\n                        <div key={role} className=\"text-center space-y-2\">\n                          <div className=\"text-2xl font-bold\">{count}</div>\n                          <div className=\"text-sm text-muted-foreground capitalize\">{role}</div>\n                          <div className=\"w-full bg-muted rounded-full h-2\">\n                            <div\n                              className={`h-2 rounded-full ${roleColors[role as keyof typeof roleColors]}`}\n                              style={{ width: `${percentage}%` }}\n                            />\n                          </div>\n                        </div>\n                      );\n                    });\n                  })()}\n                </div>\n              </div>\n\n              {/* Team Assignment Status */}\n              <div className=\"space-y-4\">\n                <h4 className=\"text-sm font-medium\">Team Assignment Status</h4>\n                <div className=\"grid gap-4 md:grid-cols-3\">\n                  <Card>\n                    <CardContent className=\"p-4\">\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold text-green-600\">\n                          {crews?.reduce((sum, crew) => sum + (crew.member_count || 0), 0) || 0}\n                        </div>\n                        <div className=\"text-sm text-muted-foreground\">Assigned Workers</div>\n                        <div className=\"text-xs text-green-600 mt-1\">\n                          {crews?.length || 0} active teams\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card>\n                    <CardContent className=\"p-4\">\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold text-blue-600\">\n                          {availableWorkers.length}\n                        </div>\n                        <div className=\"text-sm text-muted-foreground\">Available Workers</div>\n                        <div className=\"text-xs text-blue-600 mt-1\">\n                          Ready for assignment\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card>\n                    <CardContent className=\"p-4\">\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold text-purple-600\">\n                          {(() => {\n                            const assignedWorkers = crews?.reduce((sum, crew) => sum + (crew.member_count || 0), 0) || 0;\n                            const totalWorkers = users.filter(u => ['crew', 'worker', 'foreman'].includes(u.role)).length;\n                            return totalWorkers > 0 ? Math.round((assignedWorkers / totalWorkers) * 100) : 0;\n                          })()}%\n                        </div>\n                        <div className=\"text-sm text-muted-foreground\">Utilization Rate</div>\n                        <div className=\"text-xs text-purple-600 mt-1\">\n                          Team efficiency\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n\n              {/* Recent Activity Summary */}\n              <div className=\"space-y-4\">\n                <h4 className=\"text-sm font-medium\">Recent Team Activities</h4>\n                <div className=\"space-y-3\">\n                  {crews && crews.length > 0 ? (\n                    crews.slice(0, 5).map((crew) => (\n                      <div key={crew.id} className=\"flex items-center justify-between p-3 bg-muted/50 rounded-lg\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                          <div>\n                            <div className=\"font-medium text-sm\">{crew.name}</div>\n                            <div className=\"text-xs text-muted-foreground\">\n                              {crew.member_count || 0} members • Foreman: {crew.foreman?.full_name || \"Not assigned\"}\n                            </div>\n                          </div>\n                        </div>\n                        <Badge variant=\"secondary\" className=\"text-xs\">\n                          Active\n                        </Badge>\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"text-center py-4 text-muted-foreground text-sm\">\n                      No team activities to display\n                    </div>\n                  )}\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Create User Dialog */}\n      <Dialog open={showCreateUserDialog} onOpenChange={setShowCreateUserDialog}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>Add New Team Member</DialogTitle>\n            <DialogDescription>\n              Create a new team member account with automatic PIN generation and skills management. You can select any role and assign them to teams later.\n            </DialogDescription>\n          </DialogHeader>\n          <CreateUserForm\n            onSuccess={handleUserCreated}\n            onCancel={() => setShowCreateUserDialog(false)}\n            defaultRole={defaultUserRole}\n          />\n        </DialogContent>\n      </Dialog>\n\n      {/* Create Team Dialog */}\n      <Dialog open={showCreateTeamDialog} onOpenChange={setShowCreateTeamDialog}>\n        <DialogContent className=\"sm:max-w-[500px]\">\n          <DialogHeader>\n            <DialogTitle>Create New Team</DialogTitle>\n            <DialogDescription>\n              Create a new work crew/team with a name and optional foreman assignment.\n            </DialogDescription>\n          </DialogHeader>\n          <Form {...createTeamForm}>\n            <form onSubmit={createTeamForm.handleSubmit(handleCreateTeam)} className=\"space-y-4\">\n              <FormField\n                control={createTeamForm.control}\n                name=\"name\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Team Name *</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"e.g., Alpha Team, Fiber Crew 1\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={createTeamForm.control}\n                name=\"foreman_user_id\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Foreman (Optional)</FormLabel>\n                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select foreman...\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"none\">No foreman assigned</SelectItem>\n                        {foremenUsers?.map((user) => (\n                          <SelectItem key={user.id} value={user.id}>\n                            {user.first_name} {user.last_name} ({user.role})\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={createTeamForm.control}\n                name=\"description\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Description (Optional)</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"Team specialization or notes...\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <div className=\"flex justify-end space-x-2 pt-4\">\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={() => {\n                    setShowCreateTeamDialog(false);\n                    createTeamForm.reset();\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button type=\"submit\" disabled={createTeam.isPending}>\n                  {createTeam.isPending ? (\n                    <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-background border-t-transparent mr-2\" />\n                  ) : (\n                    <Plus className=\"mr-2 h-4 w-4\" />\n                  )}\n                  Create Team\n                </Button>\n              </div>\n            </form>\n          </Form>\n        </DialogContent>\n      </Dialog>\n\n      {/* Edit Team Dialog */}\n      <Dialog open={showEditTeamDialog} onOpenChange={setShowEditTeamDialog}>\n        <DialogContent className=\"sm:max-w-[500px]\">\n          <DialogHeader>\n            <DialogTitle>Edit Team</DialogTitle>\n            <DialogDescription>\n              Update team information and assignments.\n            </DialogDescription>\n          </DialogHeader>\n          <Form {...editTeamForm}>\n            <form onSubmit={editTeamForm.handleSubmit(handleUpdateTeam)} className=\"space-y-4\">\n              <FormField\n                control={editTeamForm.control}\n                name=\"name\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Team Name *</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"e.g., Alpha Team, Fiber Crew 1\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={editTeamForm.control}\n                name=\"foreman_user_id\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Foreman</FormLabel>\n                    <Select onValueChange={field.onChange} value={field.value}>\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select foreman...\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"none\">No foreman assigned</SelectItem>\n                        {foremenUsers?.map((user) => (\n                          <SelectItem key={user.id} value={user.id}>\n                            {user.first_name} {user.last_name} ({user.role})\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={editTeamForm.control}\n                name=\"description\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Description</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"Team specialization or notes...\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <div className=\"flex justify-end space-x-2 pt-4\">\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={() => {\n                    setShowEditTeamDialog(false);\n                    setEditingTeam(null);\n                    editTeamForm.reset();\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button type=\"submit\" disabled={updateTeam.isPending}>\n                  {updateTeam.isPending ? (\n                    <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-background border-t-transparent mr-2\" />\n                  ) : (\n                    <Edit className=\"mr-2 h-4 w-4\" />\n                  )}\n                  Update Team\n                </Button>\n              </div>\n            </form>\n          </Form>\n        </DialogContent>\n      </Dialog>\n\n      {/* User Detail Dialog */}\n      <Dialog open={showUserDetailDialog} onOpenChange={setShowUserDetailDialog}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <Users className=\"h-5 w-5\" />\n              User Details - {selectedUser?.full_name}\n            </DialogTitle>\n            <DialogDescription>\n              Complete user profile information, skills, and management options\n            </DialogDescription>\n          </DialogHeader>\n\n          {selectedUser && (\n            <div className=\"grid gap-6 py-4\">\n              {/* Personal Information */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Users className=\"h-4 w-4\" />\n                    Personal Information\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"grid gap-4 md:grid-cols-2\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-muted-foreground\">Full Name</label>\n                    <div className=\"text-sm\">{selectedUser.full_name}</div>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-muted-foreground\">Email</label>\n                    <div className=\"text-sm flex items-center gap-2\">\n                      <Mail className=\"h-3 w-3\" />\n                      {selectedUser.email}\n                    </div>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-muted-foreground\">Phone</label>\n                    <div className=\"text-sm flex items-center gap-2\">\n                      <Phone className=\"h-3 w-3\" />\n                      {selectedUser.phone || \"—\"}\n                    </div>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-muted-foreground\">Language Preference</label>\n                    <div className=\"text-sm flex items-center gap-2\">\n                      <Globe className=\"h-3 w-3\" />\n                      {selectedUser.lang_pref || \"—\"}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* System Access */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Shield className=\"h-4 w-4\" />\n                    System Access\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"grid gap-4 md:grid-cols-3\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-muted-foreground\">Role</label>\n                    <Badge variant={getRoleColor(selectedUser.role)}>\n                      {selectedUser.role}\n                    </Badge>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-muted-foreground\">PIN Code</label>\n                    <div className=\"text-sm font-mono flex items-center gap-2\">\n                      <Code className=\"h-3 w-3\" />\n                      {selectedUser.pin_code ? (\n                        <span className=\"bg-muted px-2 py-1 rounded\">\n                          {selectedUser.pin_code}\n                        </span>\n                      ) : \"—\"}\n                    </div>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-muted-foreground\">Created</label>\n                    <div className=\"text-sm flex items-center gap-2\">\n                      <Calendar className=\"h-3 w-3\" />\n                      {selectedUser.created_at ? new Date(selectedUser.created_at).toLocaleDateString() : \"—\"}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Skills */}\n              <Card>\n                <CardHeader>\n                  <CardTitle>Skills & Competencies</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {selectedUser.skills && selectedUser.skills.length > 0 ? (\n                    <div className=\"flex flex-wrap gap-2\">\n                      {selectedUser.skills.map((skill: string, index: number) => (\n                        <Badge key={index} variant=\"secondary\">\n                          {skill}\n                        </Badge>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"text-sm text-muted-foreground\">No skills assigned</div>\n                  )}\n                </CardContent>\n              </Card>\n\n              {/* Documents Section */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <FileText className=\"h-4 w-4\" />\n                    Documents\n                  </CardTitle>\n                  <CardDescription>\n                    User documents, contracts, and certifications\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-center py-8 text-muted-foreground\">\n                    <FileText className=\"mx-auto h-12 w-12 mb-4\" />\n                    <p>Document management integration will be implemented</p>\n                    <p className=\"text-xs mt-2\">This will connect to the existing document system</p>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Action Buttons */}\n              <div className=\"flex gap-2 pt-4 border-t\">\n                {canManageTeams && (\n                  <>\n                    <Button\n                      variant=\"outline\"\n                      className=\"flex-1\"\n                      onClick={() => handleEditUser(selectedUser)}\n                    >\n                      <Edit className=\"mr-2 h-4 w-4\" />\n                      Edit User\n                    </Button>\n                    <WorkerDocumentsDialog\n                      userId={selectedUser.id}\n                      userName={`${selectedUser.first_name} ${selectedUser.last_name}`}\n                      trigger={\n                        <Button variant=\"outline\" className=\"flex-1\">\n                          <FileText className=\"mr-2 h-4 w-4\" />\n                          Manage Documents\n                        </Button>\n                      }\n                    />\n                    {[\"crew\", \"worker\", \"foreman\"].includes(selectedUser.role) && !isUserAssignedToTeam(selectedUser.id) && (\n                      <Button\n                        variant=\"outline\"\n                        className=\"flex-1\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          setUserToAssign(selectedUser);\n                          setShowAssignUserDialog(true);\n                        }}\n                      >\n                        <UserPlus className=\"mr-2 h-4 w-4\" />\n                        Assign to Team\n                      </Button>\n                    )}\n                    <Button\n                      variant=\"destructive\"\n                      size=\"sm\"\n                      onClick={() => handleDeleteUser(selectedUser)}\n                    >\n                      <Trash2 className=\"mr-2 h-4 w-4\" />\n                      Delete\n                    </Button>\n                  </>\n                )}\n                <Button\n                  variant=\"outline\"\n                  onClick={() => setShowUserDetailDialog(false)}\n                >\n                  Close\n                </Button>\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Edit User Dialog */}\n      <Dialog open={showEditUserDialog} onOpenChange={setShowEditUserDialog}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>Edit User - {editingUser?.full_name}</DialogTitle>\n            <DialogDescription>\n              Update user information, role, and skills. Changes will be saved immediately.\n            </DialogDescription>\n          </DialogHeader>\n          {editingUser && (\n            <CreateUserForm\n              onSuccess={() => {\n                setShowEditUserDialog(false);\n                setEditingUser(null);\n              }}\n              onCancel={() => {\n                setShowEditUserDialog(false);\n                setEditingUser(null);\n              }}\n              defaultRole={editingUser.role}\n              editMode={true}\n              initialData={editingUser}\n            />\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Delete User Confirmation Dialog */}\n      <Dialog open={showDeleteUserDialog} onOpenChange={setShowDeleteUserDialog}>\n        <DialogContent className=\"sm:max-w-[425px]\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2 text-destructive\">\n              <Trash2 className=\"h-5 w-5\" />\n              Delete User\n            </DialogTitle>\n            <DialogDescription>\n              Are you sure you want to delete this user? This action cannot be undone.\n            </DialogDescription>\n          </DialogHeader>\n\n          {selectedUser && (\n            <div className=\"py-4\">\n              <div className=\"bg-muted p-4 rounded-lg space-y-2\">\n                <div className=\"font-medium\">{selectedUser.full_name}</div>\n                <div className=\"text-sm text-muted-foreground\">{selectedUser.email}</div>\n                <div className=\"flex items-center gap-2\">\n                  <Badge variant={getRoleColor(selectedUser.role)}>\n                    {selectedUser.role}\n                  </Badge>\n                  {selectedUser.pin_code && (\n                    <span className=\"text-xs bg-muted-foreground/20 px-2 py-1 rounded font-mono\">\n                      PIN: {selectedUser.pin_code}\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"mt-4 p-3 bg-destructive/10 rounded-lg border border-destructive/20\">\n                <div className=\"text-sm text-destructive font-medium\">⚠️ Warning</div>\n                <div className=\"text-sm text-destructive/80 mt-1\">\n                  This will permanently delete the user account and remove them from all teams.\n                  Any associated work entries and documents will remain but will no longer be linked to this user.\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"flex justify-end gap-2 pt-4 border-t\">\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                setShowDeleteUserDialog(false);\n                setSelectedUser(null);\n              }}\n              disabled={deleteUser.isPending}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={confirmDeleteUser}\n              disabled={deleteUser.isPending}\n            >\n              {deleteUser.isPending ? (\n                <>\n                  <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-background border-t-transparent mr-2\" />\n                  Deleting...\n                </>\n              ) : (\n                <>\n                  <Trash2 className=\"mr-2 h-4 w-4\" />\n                  Delete User\n                </>\n              )}\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* Bulk Actions Confirmation Dialog */}\n      <Dialog open={showBulkActionsDialog} onOpenChange={setShowBulkActionsDialog}>\n        <DialogContent className=\"sm:max-w-[425px]\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <Users className=\"h-5 w-5\" />\n              Confirm Bulk Action\n            </DialogTitle>\n            <DialogDescription>\n              {bulkAction === \"delete\"\n                ? `Are you sure you want to delete ${selectedUsers.size} user${\n                    selectedUsers.size > 1 ? \"s\" : \"\"\n                  }? This action cannot be undone.`\n                : bulkAction.startsWith(\"role_\")\n                ? `Are you sure you want to change the role of ${selectedUsers.size} user${\n                    selectedUsers.size > 1 ? \"s\" : \"\"\n                  } to ${bulkAction.replace(\"role_\", \"\")}?`\n                : \"Please confirm this bulk action.\"}\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"py-4\">\n            <div className=\"bg-muted p-4 rounded-lg space-y-2\">\n              <div className=\"font-medium\">\n                Selected Users ({selectedUsers.size}):\n              </div>\n              <div className=\"text-sm text-muted-foreground space-y-1 max-h-32 overflow-y-auto\">\n                {Array.from(selectedUsers).map((userId) => {\n                  const user = users.find((u) => u.id === userId);\n                  return user ? (\n                    <div key={userId} className=\"flex items-center gap-2\">\n                      <span>{user.full_name}</span>\n                      <Badge variant={getRoleColor(user.role)} className=\"text-xs\">\n                        {user.role}\n                      </Badge>\n                    </div>\n                  ) : null;\n                })}\n              </div>\n            </div>\n\n            {bulkAction === \"delete\" && (\n              <div className=\"mt-4 p-3 bg-destructive/10 rounded-lg border border-destructive/20\">\n                <div className=\"text-sm text-destructive font-medium\">⚠️ Warning</div>\n                <div className=\"text-sm text-destructive/80 mt-1\">\n                  This will permanently delete the selected users and remove them from all teams.\n                  Any associated work entries and documents will remain but will no longer be linked to these users.\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex justify-end gap-2 pt-4 border-t\">\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                setShowBulkActionsDialog(false);\n                setBulkAction(\"\");\n              }}\n              disabled={updateUser.isPending || deleteUser.isPending}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant={bulkAction === \"delete\" ? \"destructive\" : \"default\"}\n              onClick={confirmBulkAction}\n              disabled={updateUser.isPending || deleteUser.isPending}\n            >\n              {updateUser.isPending || deleteUser.isPending ? (\n                <>\n                  <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-background border-t-transparent mr-2\" />\n                  Processing...\n                </>\n              ) : bulkAction === \"delete\" ? (\n                <>\n                  <Trash2 className=\"mr-2 h-4 w-4\" />\n                  Delete Users\n                </>\n              ) : (\n                <>\n                  <Users className=\"mr-2 h-4 w-4\" />\n                  Update Roles\n                </>\n              )}\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* Assign User to Team Dialog */}\n      {userToAssign && (\n        <AssignUserToTeamDialog\n          user={userToAssign}\n          teams={crews || []}\n          open={showAssignUserDialog}\n          onOpenChange={(open) => {\n            setShowAssignUserDialog(open);\n            if (!open) {\n              setUserToAssign(null);\n            }\n          }}\n        />\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}