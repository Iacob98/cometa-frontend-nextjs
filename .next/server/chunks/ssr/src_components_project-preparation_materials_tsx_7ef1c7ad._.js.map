{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/T7/cometa/cometa-separated-projects/cometa-frontend-nextjs/src/components/project-preparation/materials.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';\nimport { AlertCircle, Package, ShoppingCart, Calendar, Euro, Truck, Edit, Trash2, CheckCircle, Clock, AlertTriangle, Plus, MoreHorizontal, ExternalLink } from 'lucide-react';\nimport { useUnifiedProjectMaterials, useUnifiedWarehouseMaterials, useAssignMaterialToProject, useUpdateMaterialAssignment, useDeleteMaterialAssignment, useCreateMaterial, ProjectMaterial } from '@/hooks/use-materials';\nimport { useMaterialOrders, useUpdateMaterialOrder } from '@/hooks/use-material-orders';\nimport { useMaterialOrderBudgetImpact } from '@/hooks/use-material-order-budget';\nimport { useProjects } from '@/hooks/use-projects';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'sonner';\n\ninterface MaterialsProps {\n  projectId: string;\n}\n\ninterface MaterialAssignmentForm {\n  material_id: string;\n  quantity: number;\n  from_date: string;\n  notes?: string;\n}\n\ninterface EditMaterialForm {\n  quantity: number;\n  unit_price: number;\n  from_date: string;\n  notes?: string;\n}\n\ninterface CreateMaterialForm {\n  name: string;\n  sku?: string;\n  unit: string;\n  description?: string;\n  default_price_eur: number;\n  purchase_price_eur: number;\n  initial_stock: number;\n  min_stock_level: number;\n}\n\nconst STATUS_CONFIG = {\n  allocated: { label: 'Assigned', color: 'bg-blue-100 text-blue-800' },\n  used: { label: 'Used', color: 'bg-green-100 text-green-800' },\n  returned: { label: 'Returned', color: 'bg-gray-100 text-gray-800' },\n  cancelled: { label: 'Cancelled', color: 'bg-red-100 text-red-800' },\n};\n\nexport default function Materials({ projectId }: MaterialsProps) {\n  const router = useRouter();\n  const [activeTab, setActiveTab] = useState('assigned');\n  const [editingMaterial, setEditingMaterial] = useState<ProjectMaterial | null>(null);\n  const [showEditDialog, setShowEditDialog] = useState(false);\n  const [showCreateDialog, setShowCreateDialog] = useState(false);\n\n  const { data: projectMaterials, isLoading: projectLoading, error: projectError, refetch: refetchProject } = useUnifiedProjectMaterials(projectId);\n  const { data: warehouseMaterials, isLoading: warehouseLoading, error: warehouseError } = useUnifiedWarehouseMaterials();\n  const { data: materialOrdersResponse } = useMaterialOrders({ project_id: projectId });\n  const { data: projectsResponse } = useProjects();\n  const materialOrders = materialOrdersResponse?.items || [];\n  const project = projectsResponse?.items?.find(p => p.id === projectId);\n  const assignMaterial = useAssignMaterialToProject();\n  const updateMaterial = useUpdateMaterialAssignment();\n  const deleteMaterial = useDeleteMaterialAssignment();\n  const createMaterial = useCreateMaterial();\n\n  const assignForm = useForm<MaterialAssignmentForm>();\n  const editForm = useForm<EditMaterialForm>();\n  const createForm = useForm<CreateMaterialForm>();\n\n  if (projectLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <Skeleton className=\"h-8 w-1/3\" />\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <Skeleton className=\"h-24\" />\n          <Skeleton className=\"h-24\" />\n          <Skeleton className=\"h-24\" />\n          <Skeleton className=\"h-24\" />\n        </div>\n        <Skeleton className=\"h-96\" />\n      </div>\n    );\n  }\n\n  if (projectError) {\n    return (\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"text-center\">\n            <AlertCircle className=\"mx-auto h-12 w-12 text-red-500 mb-4\" />\n            <h3 className=\"text-lg font-medium mb-2\">Error Loading Materials</h3>\n            <p className=\"text-gray-600 mb-4\">{projectError.message}</p>\n            <Button onClick={() => refetchProject()}>Try Again</Button>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const handleAssignMaterial = async (data: MaterialAssignmentForm) => {\n    try {\n      await assignMaterial.mutateAsync({\n        ...data,\n        project_id: projectId,\n      });\n      assignForm.reset();\n      refetchProject();\n      toast.success('Material assigned successfully');\n    } catch (error) {\n      toast.error('Failed to assign material');\n    }\n  };\n\n  const handleUpdateMaterial = async (data: EditMaterialForm) => {\n    if (!editingMaterial) return;\n\n    try {\n      await updateMaterial.mutateAsync({\n        assignment_id: editingMaterial.id,\n        ...data,\n      });\n      editForm.reset();\n      setEditingMaterial(null);\n      setShowEditDialog(false);\n      refetchProject();\n      toast.success('Material assignment updated successfully');\n    } catch (error) {\n      toast.error('Failed to update material assignment');\n    }\n  };\n\n  const handleEditMaterial = (material: ProjectMaterial) => {\n    setEditingMaterial(material);\n    editForm.setValue('quantity', material.allocated_qty);\n    editForm.setValue('unit_price', material.unit_price);\n    editForm.setValue('from_date', material.allocation_date);\n    editForm.setValue('to_date', material.return_date || '');\n    editForm.setValue('notes', material.notes || '');\n    setShowEditDialog(true);\n  };\n\n  const handleCancelEdit = () => {\n    setEditingMaterial(null);\n    setShowEditDialog(false);\n    editForm.reset();\n  };\n\n  const handleCreateMaterial = async (data: CreateMaterialForm) => {\n    try {\n      await createMaterial.mutateAsync(data);\n      createForm.reset();\n      setActiveTab('assigned');\n    } catch (error) {\n      // Error is handled by the mutation hook\n    }\n  };\n\n  const handleDeleteMaterial = async (assignmentId: string) => {\n    if (window.confirm('Are you sure you want to delete this material assignment?')) {\n      try {\n        await deleteMaterial.mutateAsync(assignmentId);\n        refetchProject();\n        toast.success('Material assignment deleted successfully');\n      } catch (error) {\n        toast.error('Failed to delete material assignment');\n      }\n    }\n  };\n\n  // DEBUG: Log project materials data\n  console.log('DEBUG - projectMaterials:', projectMaterials);\n  console.log('DEBUG - projectMaterials.materials length:', projectMaterials?.materials?.length);\n  console.log('DEBUG - projectMaterials.materials:', projectMaterials?.materials);\n\n  const totalMaterials = projectMaterials?.materials?.length || 0;\n  const pendingCount = projectMaterials?.materials?.filter(m => m.status === 'allocated')?.length || 0;\n  const usedCount = projectMaterials?.materials?.filter(m => m.status === 'used')?.length || 0;\n  const totalCost = projectMaterials?.materials?.reduce((sum, m) => sum + (m.total_cost || 0), 0) || 0;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h3 className=\"text-2xl font-bold\">Materials Management</h3>\n          <p className=\"text-gray-600\">Material allocation and ordering for projects</p>\n        </div>\n      </div>\n\n      {/* Materials Summary */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Package className=\"w-5 h-5 text-blue-500\" />\n              <div>\n                <p className=\"text-sm font-medium\">Total Materials</p>\n                <p className=\"text-2xl font-bold\">{totalMaterials}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Clock className=\"w-5 h-5 text-orange-500\" />\n              <div>\n                <p className=\"text-sm font-medium\">Pending</p>\n                <p className=\"text-2xl font-bold\">{pendingCount}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <CheckCircle className=\"w-5 h-5 text-green-500\" />\n              <div>\n                <p className=\"text-sm font-medium\">Used</p>\n                <p className=\"text-2xl font-bold\">{usedCount}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Euro className=\"w-5 h-5 text-purple-500\" />\n              <div>\n                <p className=\"text-sm font-medium\">Total Cost</p>\n                <p className=\"text-2xl font-bold\">€{totalCost.toFixed(0)}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Materials Management Tabs */}\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"assigned\">Assigned Materials</TabsTrigger>\n          <TabsTrigger value=\"assign\">Assign Materials</TabsTrigger>\n          <TabsTrigger value=\"order\">Order Materials</TabsTrigger>\n        </TabsList>\n\n        {/* Assigned Materials Tab */}\n        <TabsContent value=\"assigned\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Project Materials</CardTitle>\n              <CardDescription>\n                Materials currently assigned to this project\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {projectMaterials?.materials?.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {projectMaterials?.materials?.map((material) => (\n                    <Card key={material.id} className=\"border-l-4 border-l-blue-500\">\n                      <CardContent className=\"p-4\">\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center space-x-2 mb-2\">\n                              <Badge className={STATUS_CONFIG[material.status as keyof typeof STATUS_CONFIG]?.color || 'bg-gray-100 text-gray-800'}>\n                                {STATUS_CONFIG[material.status as keyof typeof STATUS_CONFIG]?.label || material.status}\n                              </Badge>\n                              <Badge variant=\"outline\">{material.material?.sku || material.sku || 'No SKU'}</Badge>\n                            </div>\n                            <h5 className=\"font-semibold\">{material.material?.name || material.name || 'Unknown Material'}</h5>\n                            <p className=\"text-sm text-gray-600\">\n                              Quantity: {material.quantity_allocated || material.allocated_qty} {material.material?.unit || material.unit}\n                            </p>\n                            <div className=\"flex items-center space-x-4 mt-2 text-sm\">\n                              <span className=\"flex items-center\">\n                                <Calendar className=\"w-4 h-4 mr-1\" />\n                                {material.allocated_date || material.allocation_date}\n                                {material.return_date && ` - ${material.return_date}`}\n                              </span>\n                              <span className=\"flex items-center\">\n                                <Euro className=\"w-4 h-4 mr-1\" />\n                                €{material.material?.unit_price_eur || material.material?.price || material.unit_price || 0}/unit\n                              </span>\n                            </div>\n                            {material.notes && (\n                              <p className=\"text-sm text-gray-500 mt-1\">Note: {material.notes}</p>\n                            )}\n                            {material.allocated_by_name && (\n                              <p className=\"text-sm text-gray-500\">Assigned by: {material.allocated_by_name}</p>\n                            )}\n                          </div>\n                          <div className=\"text-right\">\n                            <p className=\"font-semibold\">€{((material.quantity_allocated || material.allocated_qty || 0) * (material.material?.unit_price_eur || material.material?.price || material.unit_price || 0)).toFixed(2)}</p>\n                            <div className=\"flex space-x-2 mt-2\">\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => handleEditMaterial(material)}\n                              >\n                                <Edit className=\"w-4 h-4\" />\n                              </Button>\n                              <Button\n                                size=\"sm\"\n                                variant=\"destructive\"\n                                onClick={() => handleDeleteMaterial(material.id)}\n                                disabled={deleteMaterial.isPending}\n                              >\n                                <Trash2 className=\"w-4 h-4\" />\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <Package className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n                  <h3 className=\"text-lg font-medium mb-2\">No Materials Assigned</h3>\n                  <p className=\"text-gray-600 mb-4\">\n                    Assign materials to start tracking inventory for this project.\n                  </p>\n                  <Button onClick={() => setActiveTab('assign')}>\n                    <Package className=\"w-4 h-4 mr-2\" />\n                    Assign Materials\n                  </Button>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Assign Materials Tab */}\n        <TabsContent value=\"assign\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Assign Materials to Project</CardTitle>\n              <CardDescription>\n                Select materials from warehouse inventory to assign to this project\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {warehouseLoading ? (\n                <div className=\"space-y-4\">\n                  <Skeleton className=\"h-12\" />\n                  <Skeleton className=\"h-32\" />\n                </div>\n              ) : warehouseError ? (\n                <div className=\"text-center py-8\">\n                  <AlertCircle className=\"mx-auto h-8 w-8 text-red-500 mb-2\" />\n                  <p className=\"text-red-600\">Failed to load warehouse materials</p>\n                </div>\n              ) : warehouseMaterials && warehouseMaterials.length > 0 ? (\n                <form onSubmit={assignForm.handleSubmit(handleAssignMaterial)} className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"material_id\">Select Material</Label>\n                    <Select onValueChange={(value) => assignForm.setValue('material_id', value)}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select material from warehouse\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {warehouseMaterials.map((material) => (\n                          <SelectItem key={material.id} value={material.id}>\n                            <div className=\"flex justify-between items-center w-full\">\n                              <span>{material.name}</span>\n                              <span className=\"text-sm text-gray-500\">\n                                Available: {material.available_qty} {material.unit} | €{material.price}/unit\n                              </span>\n                            </div>\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  {assignForm.watch('material_id') && (\n                    <>\n                      {(() => {\n                        const selectedMaterial = warehouseMaterials.find(m => m.id === assignForm.watch('material_id'));\n                        if (!selectedMaterial) return null;\n\n                        return (\n                          <div className=\"p-4 border rounded-lg bg-gray-50\">\n                            <h4 className=\"font-semibold mb-2\">Material Details</h4>\n                            <div className=\"grid grid-cols-3 gap-4 text-sm\">\n                              <div>\n                                <p className=\"font-medium\">Current Stock</p>\n                                <div className=\"space-y-1\">\n                                  <p className={`${selectedMaterial.available_qty > selectedMaterial.min_stock ? 'text-green-600' : selectedMaterial.available_qty > 0 ? 'text-orange-600' : 'text-red-600'}`}>\n                                    {selectedMaterial.available_qty} {selectedMaterial.unit} available\n                                  </p>\n                                  {selectedMaterial.is_over_allocated && (\n                                    <p className=\"text-red-500 text-xs font-medium\">\n                                      ⚠️ {selectedMaterial.over_allocated_qty} {selectedMaterial.unit} over-allocated\n                                    </p>\n                                  )}\n                                  <p className=\"text-xs text-gray-500\">\n                                    Total: {selectedMaterial.total_qty} | Reserved: {selectedMaterial.reserved_qty}\n                                  </p>\n                                </div>\n                              </div>\n                              <div>\n                                <p className=\"font-medium\">Unit Price</p>\n                                <p>€{selectedMaterial.price}</p>\n                              </div>\n                              <div>\n                                <p className=\"font-medium\">Description</p>\n                                <p className=\"text-gray-600\">{selectedMaterial.description || 'No description'}</p>\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      })()}\n\n                      <div className=\"grid grid-cols-2 gap-4\">\n                        <div>\n                          <Label htmlFor=\"quantity\">Quantity</Label>\n                          <Input\n                            type=\"number\"\n                            step=\"0.1\"\n                            min=\"0.1\"\n                            // Removed max restriction to allow over-allocation\n                            placeholder=\"Enter quantity\"\n                            {...assignForm.register('quantity', { required: true, valueAsNumber: true })}\n                          />\n                          {assignForm.watch('quantity') && (() => {\n                            const selectedMaterial = warehouseMaterials.find(m => m.id === assignForm.watch('material_id'));\n                            const requestedQty = assignForm.watch('quantity');\n                            if (selectedMaterial && requestedQty > selectedMaterial.available_qty) {\n                              const overAmount = requestedQty - selectedMaterial.available_qty;\n                              return (\n                                <div className=\"mt-2 p-2 bg-orange-50 border border-orange-200 rounded text-sm\">\n                                  <div className=\"flex items-center space-x-1 text-orange-700\">\n                                    <AlertTriangle className=\"w-4 h-4\" />\n                                    <span className=\"font-medium\">Over-allocation Warning</span>\n                                  </div>\n                                  <p className=\"text-orange-600 mt-1\">\n                                    Requesting {requestedQty} but only {selectedMaterial.available_qty} {selectedMaterial.unit} available.\n                                    This will create an over-allocation of {(Number(overAmount) || 0).toFixed(1)} {selectedMaterial.unit}.\n                                  </p>\n                                </div>\n                              );\n                            }\n                            return null;\n                          })()}\n                        </div>\n                        <div>\n                          <Label htmlFor=\"from_date\">Start Date</Label>\n                          <Input\n                            type=\"date\"\n                            {...assignForm.register('from_date', { required: true })}\n                          />\n                        </div>\n                      </div>\n\n                      <div>\n                        <div>\n                          {assignForm.watch('quantity') && (\n                            <div className=\"p-3 bg-blue-50 rounded-lg\">\n                              <p className=\"text-sm font-medium\">Estimated Cost</p>\n                              <p className=\"text-lg font-bold text-blue-600\">\n                                €{(\n                                  (Number(assignForm.watch('quantity')) || 0) *\n                                  (Number(warehouseMaterials.find(m => m.id === assignForm.watch('material_id'))?.unit_price_eur || warehouseMaterials.find(m => m.id === assignForm.watch('material_id'))?.price) || 0)\n                                ).toFixed(2)}\n                              </p>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n\n                      <div>\n                        <Label htmlFor=\"notes\">Notes (Optional)</Label>\n                        <Textarea\n                          placeholder=\"Special conditions or requirements...\"\n                          {...assignForm.register('notes')}\n                        />\n                      </div>\n                    </>\n                  )}\n\n                  <Button\n                    type=\"submit\"\n                    className=\"w-full\"\n                    disabled={assignMaterial.isPending || !assignForm.watch('material_id') || !assignForm.watch('quantity')}\n                  >\n                    {assignMaterial.isPending ? 'Assigning...' : 'Assign Material'}\n                  </Button>\n                </form>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <AlertTriangle className=\"mx-auto h-12 w-12 text-orange-400 mb-4\" />\n                  <h3 className=\"text-lg font-medium mb-2\">No Available Materials</h3>\n                  <p className=\"text-gray-600 mb-4\">\n                    No materials are currently available in the warehouse.\n                  </p>\n                  <Button variant=\"outline\">\n                    <ShoppingCart className=\"w-4 h-4 mr-2\" />\n                    Add Materials to Warehouse\n                  </Button>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Order Materials Tab */}\n        <TabsContent value=\"order\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <ShoppingCart className=\"w-5 h-5\" />\n                <span>Order Materials</span>\n              </CardTitle>\n              <CardDescription>\n                Order materials from suppliers for this project\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-6\">\n                {/* Quick Link to Full Order Page */}\n                <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"font-semibold text-blue-900\">Need to place a complex order?</h4>\n                      <p className=\"text-sm text-blue-700 mt-1\">\n                        Use the full materials ordering interface for multiple items and advanced options\n                      </p>\n                    </div>\n                    <Button\n                      variant=\"outline\"\n                      onClick={() => router.push(`/dashboard/materials/order?project_id=${projectId}`)}\n                      className=\"border-blue-300 text-blue-700 hover:bg-blue-100\"\n                    >\n                      <ShoppingCart className=\"w-4 h-4 mr-2\" />\n                      Full Order Interface\n                    </Button>\n                  </div>\n                </div>\n\n                {/* Recent Orders for this Project */}\n                <div>\n                  <h3 className=\"text-lg font-semibold mb-4\">Recent Orders for this Project</h3>\n                  {materialOrders && materialOrders.length > 0 ? (\n                    <div className=\"space-y-3\">\n                      {materialOrders.slice(0, 5).map((order) => (\n                        <OrderCard key={order.id} order={order} />\n                      ))}\n\n                      {materialOrders.length > 5 && (\n                        <Button\n                          variant=\"outline\"\n                          onClick={() => router.push('/dashboard/materials')}\n                          className=\"w-full\"\n                        >\n                          View All Orders ({materialOrders.length})\n                        </Button>\n                      )}\n                    </div>\n                  ) : (\n                    <div className=\"text-center py-8 text-gray-500\">\n                      <Package className=\"w-8 h-8 mx-auto mb-2 opacity-50\" />\n                      <p>No material orders for this project yet</p>\n                      <Button\n                        onClick={() => router.push(`/dashboard/materials/order?project_id=${projectId}`)}\n                        className=\"mt-3\"\n                      >\n                        <ShoppingCart className=\"w-4 h-4 mr-2\" />\n                        Create First Order\n                      </Button>\n                    </div>\n                  )}\n                </div>\n\n                {/* Order Summary Stats */}\n                {materialOrders && materialOrders.length > 0 && (\n                  <OrderSummaryStats orders={materialOrders} />\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Edit Material Dialog */}\n      <Dialog open={showEditDialog} onOpenChange={setShowEditDialog}>\n        <DialogContent className=\"max-w-md\">\n          <DialogHeader>\n            <DialogTitle>Edit Material Assignment</DialogTitle>\n            <DialogDescription>\n              Update material assignment details\n            </DialogDescription>\n          </DialogHeader>\n\n          {editingMaterial && (\n            <form onSubmit={editForm.handleSubmit(handleUpdateMaterial)} className=\"space-y-4\">\n              {/* Material Info Display */}\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h4 className=\"font-semibold mb-2\">{editingMaterial.material?.name || editingMaterial.name || 'Unknown Material'}</h4>\n                <div className=\"text-sm text-gray-600 space-y-1\">\n                  <p>SKU: {editingMaterial.material?.sku || editingMaterial.sku || 'No SKU'}</p>\n                  <p>Unit: {editingMaterial.material?.unit || editingMaterial.unit}</p>\n                  <p>Status: {STATUS_CONFIG[editingMaterial.status as keyof typeof STATUS_CONFIG]?.label || editingMaterial.status}</p>\n                </div>\n              </div>\n\n              {/* Editable Fields */}\n              <div className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"edit-quantity\">Quantity</Label>\n                  <Input\n                    id=\"edit-quantity\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    placeholder=\"Enter quantity\"\n                    {...editForm.register('quantity', { required: true, valueAsNumber: true })}\n                  />\n                  <p className=\"text-sm text-gray-500 mt-1\">Unit: {editingMaterial.unit}</p>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"edit-unit-price\">Unit Price (€)</Label>\n                  <Input\n                    id=\"edit-unit-price\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    placeholder=\"Enter unit price\"\n                    {...editForm.register('unit_price', { required: true, valueAsNumber: true })}\n                  />\n                </div>\n\n                <div>\n                  <div>\n                    <Label htmlFor=\"edit-from-date\">Start Date</Label>\n                    <Input\n                      id=\"edit-from-date\"\n                      type=\"date\"\n                      {...editForm.register('from_date', { required: true })}\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"edit-notes\">Notes</Label>\n                  <Textarea\n                    id=\"edit-notes\"\n                    placeholder=\"Additional notes...\"\n                    {...editForm.register('notes')}\n                  />\n                </div>\n\n                {editForm.watch('quantity') && editForm.watch('unit_price') && (\n                  <div className=\"p-3 bg-blue-50 rounded-lg\">\n                    <p className=\"text-sm font-medium\">Total Cost</p>\n                    <p className=\"text-lg font-bold text-blue-600\">\n                      €{((editForm.watch('quantity') || 0) * (editForm.watch('unit_price') || 0)).toFixed(2)}\n                    </p>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"flex space-x-2 pt-4\">\n                <Button\n                  type=\"submit\"\n                  className=\"flex-1\"\n                  disabled={updateMaterial.isPending}\n                >\n                  {updateMaterial.isPending ? 'Updating...' : 'Update'}\n                </Button>\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={handleCancelEdit}\n                  className=\"flex-1\"\n                >\n                  Cancel\n                </Button>\n              </div>\n            </form>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\n// OrderSummaryStats component\nfunction OrderSummaryStats({ orders }: { orders: any[] }) {\n  const totalValue = orders.reduce((sum, order) => sum + (order.total_price || order.total_cost_eur || 0), 0);\n  const pendingOrdered = orders.filter(order => order.status === 'pending' || order.status === 'ordered').length;\n\n  return (\n    <div className=\"grid grid-cols-3 gap-4 pt-4 border-t\">\n      <div className=\"text-center\">\n        <p className=\"text-2xl font-bold text-blue-600\">\n          {orders.length}\n        </p>\n        <p className=\"text-sm text-gray-600\">Total Orders</p>\n      </div>\n      <div className=\"text-center\">\n        <p className=\"text-2xl font-bold text-green-600\">\n          €{totalValue.toFixed(0)}\n        </p>\n        <p className=\"text-sm text-gray-600\">Total Value</p>\n        <p className=\"text-xs text-green-600 mt-1\">Budget Impact</p>\n      </div>\n      <div className=\"text-center\">\n        <p className=\"text-2xl font-bold text-orange-600\">\n          {pendingOrdered}\n        </p>\n        <p className=\"text-sm text-gray-600\">Pending/Ordered</p>\n      </div>\n    </div>\n  );\n}\n\n// OrderCard component with budget impact indicator and status management\nfunction OrderCard({ order }: { order: any }) {\n  const { data: budgetImpact } = useMaterialOrderBudgetImpact(order.id);\n  const updateOrder = useUpdateMaterialOrder();\n  const [showStatusDialog, setShowStatusDialog] = useState(false);\n  const [newStatus, setNewStatus] = useState(order.status);\n  const [actualDeliveryDate, setActualDeliveryDate] = useState('');\n  const [notes, setNotes] = useState(order.notes || '');\n\n  const handleStatusUpdate = async () => {\n    try {\n      const updateData: any = {\n        status: newStatus,\n        notes: notes || undefined,\n      };\n\n      if (newStatus === 'delivered' && actualDeliveryDate) {\n        updateData.actual_delivery_date = actualDeliveryDate;\n      }\n\n      await updateOrder.mutateAsync({\n        id: order.id,\n        data: updateData,\n      });\n\n      setShowStatusDialog(false);\n      toast.success('Order status updated successfully');\n    } catch (error) {\n      toast.error('Failed to update order status');\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'delivered':\n        return 'bg-green-100 text-green-800';\n      case 'ordered':\n        return 'bg-blue-100 text-blue-800';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'cancelled':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'delivered':\n        return <CheckCircle className=\"w-4 h-4\" />;\n      case 'ordered':\n        return <Truck className=\"w-4 h-4\" />;\n      case 'pending':\n        return <Clock className=\"w-4 h-4\" />;\n      case 'cancelled':\n        return <AlertTriangle className=\"w-4 h-4\" />;\n      default:\n        return <Package className=\"w-4 h-4\" />;\n    }\n  };\n\n  return (\n    <div className=\"p-4 border rounded-lg hover:shadow-sm transition-shadow\">\n      <div className=\"flex items-start justify-between\">\n        <div className=\"flex-1\">\n          <div className=\"flex items-center space-x-3 mb-2\">\n            <h4 className=\"font-medium\">Order #{order.id.slice(0, 8)}</h4>\n            <Badge className={getStatusColor(order.status)}>\n              {getStatusIcon(order.status)}\n              <span className=\"ml-1 capitalize\">{order.status}</span>\n            </Badge>\n            {budgetImpact?.has_budget_impact && (\n              <Badge variant=\"outline\" className=\"bg-green-50 text-green-700 border-green-200\">\n                <Euro className=\"w-3 h-3 mr-1\" />\n                Budget Applied\n              </Badge>\n            )}\n          </div>\n\n          <div className=\"space-y-1 text-sm text-gray-600\">\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"flex items-center\">\n                <Calendar className=\"w-4 h-4 mr-1\" />\n                Ordered: {new Date(order.order_date).toLocaleDateString()}\n              </span>\n              {order.expected_delivery_date && (\n                <span className=\"flex items-center\">\n                  <Truck className=\"w-4 h-4 mr-1\" />\n                  Expected: {new Date(order.expected_delivery_date).toLocaleDateString()}\n                </span>\n              )}\n            </div>\n\n            {order.actual_delivery_date && (\n              <div className=\"flex items-center text-green-600\">\n                <CheckCircle className=\"w-4 h-4 mr-1\" />\n                Delivered: {new Date(order.actual_delivery_date).toLocaleDateString()}\n              </div>\n            )}\n\n            {order.supplier_name && (\n              <p>Supplier: {order.supplier_name}</p>\n            )}\n\n            {order.material_type && (\n              <p>Material: {order.material_type}</p>\n            )}\n\n            {budgetImpact?.has_budget_impact && (\n              <p className=\"text-green-600\">\n                €{budgetImpact.amount_deducted?.toFixed(2)} deducted from project budget\n              </p>\n            )}\n\n            {order.notes && (\n              <p className=\"text-gray-500 italic\">Note: {order.notes}</p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"text-right\">\n            <p className=\"font-semibold\">€{(order.total_price || order.total_cost_eur || 0).toFixed(2)}</p>\n            <p className=\"text-sm text-gray-600\">{order.quantity} units</p>\n            {(order.unit_price || order.unit_price_eur) && (\n              <p className=\"text-xs text-gray-500\">€{order.unit_price || order.unit_price_eur}/unit</p>\n            )}\n          </div>\n\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"ghost\" size=\"sm\">\n                <MoreHorizontal className=\"w-4 h-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuLabel>Order Actions</DropdownMenuLabel>\n              <DropdownMenuSeparator />\n              <DropdownMenuItem onClick={() => setShowStatusDialog(true)}>\n                <Edit className=\"w-4 h-4 mr-2\" />\n                Update Status\n              </DropdownMenuItem>\n              <DropdownMenuItem onClick={() => window.open(`/dashboard/materials?order=${order.id}`, '_blank')}>\n                <ExternalLink className=\"w-4 h-4 mr-2\" />\n                View Details\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </div>\n\n      {/* Status Update Dialog */}\n      <Dialog open={showStatusDialog} onOpenChange={setShowStatusDialog}>\n        <DialogContent className=\"max-w-md\">\n          <DialogHeader>\n            <DialogTitle>Update Order Status</DialogTitle>\n            <DialogDescription>\n              Update the status and details for Order #{order.id.slice(0, 8)}\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"status\">Order Status</Label>\n              <Select value={newStatus} onValueChange={setNewStatus}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"pending\">Pending</SelectItem>\n                  <SelectItem value=\"ordered\">Ordered</SelectItem>\n                  <SelectItem value=\"delivered\">Delivered</SelectItem>\n                  <SelectItem value=\"cancelled\">Cancelled</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            {newStatus === 'delivered' && (\n              <div>\n                <Label htmlFor=\"actual_delivery_date\">Actual Delivery Date</Label>\n                <Input\n                  id=\"actual_delivery_date\"\n                  type=\"date\"\n                  value={actualDeliveryDate}\n                  onChange={(e) => setActualDeliveryDate(e.target.value)}\n                />\n              </div>\n            )}\n\n            <div>\n              <Label htmlFor=\"notes\">Notes (Optional)</Label>\n              <Textarea\n                id=\"notes\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n                placeholder=\"Add any notes about this order...\"\n                rows={3}\n              />\n            </div>\n\n            <div className=\"flex space-x-2 pt-4\">\n              <Button\n                onClick={handleStatusUpdate}\n                disabled={updateOrder.isPending}\n                className=\"flex-1\"\n              >\n                {updateOrder.isPending ? 'Updating...' : 'Update Order'}\n              </Button>\n              <Button\n                variant=\"outline\"\n                onClick={() => setShowStatusDialog(false)}\n                className=\"flex-1\"\n              >\n                Cancel\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}