{"version":3,"sources":["turbopack:///[project]/src/app/(dashboard)/dashboard/equipment/page.tsx","turbopack:///[project]/node_modules/recharts/es6/component/Legend.js","turbopack:///[project]/node_modules/recharts/es6/component/DefaultLegendContent.js","turbopack:///[project]/node_modules/recharts/es6/context/legendPayloadContext.js"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { toast } from \"sonner\";\nimport { format } from \"date-fns\";\nimport {\n  Settings,\n  Plus,\n  Filter,\n  ArrowLeft,\n  Search,\n  Wrench,\n  Truck,\n  Activity,\n  BarChart3,\n  TrendingUp,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  Clock,\n  Edit,\n  Trash2,\n  Package,\n  PieChart as PieChartIcon,\n  Loader2,\n  Car\n} from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\nimport { useEquipment, useEquipmentAssignments, useDeleteAssignment, useEquipmentAnalytics } from \"@/hooks/use-equipment\";\nimport { useVehicles } from \"@/hooks/use-vehicles\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, LineChart, Line, Legend } from 'recharts';\n\nconst statusColors = {\n  available: \"bg-green-100 text-green-800 border-green-200\",\n  in_use: \"bg-blue-100 text-blue-800 border-blue-200\",\n  maintenance: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\n  broken: \"bg-red-100 text-red-800 border-red-200\",\n};\n\nconst statusLabels = {\n  available: \"Available\",\n  in_use: \"In Use\",\n  maintenance: \"Maintenance\",\n  broken: \"Broken\",\n};\n\nconst statusIcons = {\n  available: CheckCircle,\n  in_use: Activity,\n  maintenance: Clock,\n  broken: XCircle,\n};\n\nconst typeColors = {\n  machine: \"bg-purple-100 text-purple-800 border-purple-200\",\n  tool: \"bg-orange-100 text-orange-800 border-orange-200\",\n  measuring_device: \"bg-cyan-100 text-cyan-800 border-cyan-200\",\n  // Vehicle types\n  van: \"bg-blue-100 text-blue-800 border-blue-200\",\n  truck: \"bg-indigo-100 text-indigo-800 border-indigo-200\",\n  trailer: \"bg-gray-100 text-gray-800 border-gray-200\",\n  excavator: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\n  other: \"bg-slate-100 text-slate-800 border-slate-200\",\n} as const;\n\nconst typeLabels = {\n  machine: \"Machine\",\n  tool: \"Tool\",\n  measuring_device: \"Measuring Device\",\n  // Vehicle types\n  van: \"Van\",\n  truck: \"Truck\",\n  trailer: \"Trailer\",\n  excavator: \"Excavator\",\n  other: \"Other Vehicle\",\n} as const;\n\nexport default function EquipmentPage() {\n  const router = useRouter();\n  const [filters, setFilters] = useState({\n    type: \"\",\n    status: \"\",\n    owned: \"\",\n    search: \"\",\n  });\n\n  const { data: equipmentData, isLoading } = useEquipment({\n    ...filters,\n    per_page: 1000\n  });\n  const { data: vehiclesData, isLoading: vehiclesLoading } = useVehicles({\n    ...filters,\n    per_page: 1000\n  });\n  const { data: assignments } = useEquipmentAssignments({ active_only: true });\n  const { data: analytics, isLoading: analyticsLoading } = useEquipmentAnalytics();\n  const deleteAssignmentMutation = useDeleteAssignment();\n\n  const equipment = equipmentData?.items || [];\n  const vehicles = vehiclesData?.items || [];\n\n  // Combine equipment and vehicles for display with consistent format\n  const allResources = [\n    ...equipment.map(item => ({\n      ...item,\n      resource_type: 'equipment' as const,\n      plate_number: item.inventory_no, // Map inventory_no to plate_number for consistency\n      brand: item.name,\n      model: item.type\n    })),\n    ...vehicles.map(item => ({\n      ...item,\n      resource_type: 'vehicle' as const,\n      name: `${item.brand} ${item.model}`,\n      inventory_no: item.plate_number, // Map plate_number to inventory_no for consistency\n      type: item.type\n    }))\n  ];\n\n  const handleFilterChange = (key: string, value: string) => {\n    setFilters(prev => ({\n      ...prev,\n      [key]: value === \"all\" ? \"\" : value,\n    }));\n  };\n\n  const handleDeleteEquipment = async (equipmentId: string, equipmentName: string) => {\n    if (!confirm(`Are you sure you want to delete \"${equipmentName}\"? This action cannot be undone.`)) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`/api/equipment/${equipmentId}`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        const errorMessage = error.error || 'Failed to delete equipment';\n\n        // Provide more user-friendly error messages\n        if (errorMessage.includes('currently assigned')) {\n          toast.error(`Cannot delete \"${equipmentName}\": Equipment is currently assigned to a project. Please remove all assignments first.`);\n        } else if (errorMessage.includes('in use')) {\n          toast.error(`Cannot delete \"${equipmentName}\": Equipment is currently in use. Please change status first.`);\n        } else {\n          toast.error(`Failed to delete \"${equipmentName}\": ${errorMessage}`);\n        }\n        return;\n      }\n\n      toast.success(`Equipment \"${equipmentName}\" deleted successfully`);\n\n      // Refresh the page to update the equipment list\n      window.location.reload();\n    } catch (error) {\n      console.error('Delete equipment error:', error);\n      const errorMessage = error instanceof Error ? error.message : 'Failed to delete equipment';\n\n      // Provide contextual error messages\n      if (errorMessage.includes('currently assigned')) {\n        toast.error(`Cannot delete \"${equipmentName}\": Equipment is currently assigned to a project. Please remove all assignments first.`);\n      } else {\n        toast.error(`Failed to delete \"${equipmentName}\": ${errorMessage}`);\n      }\n    }\n  };\n\n  const handleEditAssignment = (assignmentId: string) => {\n    router.push(`/dashboard/equipment/assignments/${assignmentId}`);\n  };\n\n  const handleDeleteAssignment = async (assignmentId: string, equipmentName: string) => {\n    if (!confirm(`Are you sure you want to delete the assignment for \"${equipmentName}\"? This action cannot be undone.`)) {\n      return;\n    }\n\n    try {\n      await deleteAssignmentMutation.mutateAsync(assignmentId);\n    } catch (error) {\n      // Error handling is done in the mutation hook\n      console.error('Delete assignment error:', error);\n    }\n  };\n\n  // Calculate statistics\n  const stats = allResources.reduce(\n    (acc, item) => {\n      acc.total += 1;\n      acc.totalValue += item.purchase_price_eur || 0;\n\n      if (item.status === \"available\") acc.available += 1;\n      else if (item.status === \"in_use\") acc.inUse += 1;\n      else if (item.status === \"maintenance\") acc.maintenance += 1;\n      else if (item.status === \"broken\") acc.broken += 1;\n\n      if (item.owned) acc.owned += 1;\n      else acc.rented += 1;\n\n      return acc;\n    },\n    {\n      total: 0,\n      totalValue: 0,\n      available: 0,\n      inUse: 0,\n      maintenance: 0,\n      broken: 0,\n      owned: 0,\n      rented: 0,\n    }\n  );\n\n  const utilizationRate = stats.total > 0 ? Math.round((stats.inUse / stats.total) * 100) : 0;\n\n  if (isLoading || vehiclesLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <Skeleton className=\"h-8 w-64 mb-2\" />\n            <Skeleton className=\"h-4 w-96\" />\n          </div>\n          <Skeleton className=\"h-10 w-32\" />\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {Array.from({ length: 4 }).map((_, i) => (\n            <Card key={i}>\n              <CardContent className=\"p-6\">\n                <Skeleton className=\"h-4 w-20 mb-2\" />\n                <Skeleton className=\"h-8 w-16 mb-1\" />\n                <Skeleton className=\"h-3 w-24\" />\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <Skeleton className=\"h-64 w-full\" />\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => router.back()}\n            className=\"flex items-center space-x-2\"\n          >\n            <ArrowLeft className=\"h-4 w-4\" />\n            <span>Back</span>\n          </Button>\n          <div>\n            <h1 className=\"text-3xl font-bold tracking-tight\">Equipment & Vehicle Management</h1>\n            <p className=\"text-muted-foreground\">\n              Manage your equipment tools, vehicles, assignments, and maintenance\n            </p>\n          </div>\n        </div>\n        <div className=\"flex space-x-2\">\n          <Button variant=\"outline\">\n            <BarChart3 className=\"mr-2 h-4 w-4\" />\n            Reports\n          </Button>\n          <Button variant=\"outline\" onClick={() => router.push(\"/dashboard/vehicles/new\")}>\n            <Car className=\"mr-2 h-4 w-4\" />\n            Add Vehicle\n          </Button>\n          <Button onClick={() => router.push(\"/dashboard/equipment/new\")}>\n            <Plus className=\"mr-2 h-4 w-4\" />\n            Add Equipment\n          </Button>\n        </div>\n      </div>\n\n      {/* Statistics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Total Equipment</p>\n                <p className=\"text-2xl font-bold\">{stats.total}</p>\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  €{stats.totalValue.toLocaleString()} value\n                </p>\n              </div>\n              <Package className=\"h-8 w-8 text-blue-600\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Utilization Rate</p>\n                <p className=\"text-2xl font-bold\">{utilizationRate}%</p>\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  {stats.inUse} in use\n                </p>\n              </div>\n              <TrendingUp className=\"h-8 w-8 text-green-600\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Available</p>\n                <p className=\"text-2xl font-bold text-green-600\">{stats.available}</p>\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  Ready for assignment\n                </p>\n              </div>\n              <CheckCircle className=\"h-8 w-8 text-green-600\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">Attention Needed</p>\n                <p className=\"text-2xl font-bold text-yellow-600\">{stats.maintenance + stats.broken}</p>\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  Maintenance & repairs\n                </p>\n              </div>\n              <AlertTriangle className=\"h-8 w-8 text-yellow-600\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content */}\n      <Tabs defaultValue=\"fleet\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"fleet\" className=\"flex items-center space-x-2\">\n            <Wrench className=\"h-4 w-4\" />\n            <span>Equipment Fleet</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"assignments\" className=\"flex items-center space-x-2\">\n            <Truck className=\"h-4 w-4\" />\n            <span>Assignments</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"usage\" className=\"flex items-center space-x-2\">\n            <Activity className=\"h-4 w-4\" />\n            <span>Usage & Analytics</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"management\" className=\"flex items-center space-x-2\">\n            <Settings className=\"h-4 w-4\" />\n            <span>Management</span>\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"fleet\" className=\"space-y-4\">\n          {/* Filters */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <Filter className=\"h-5 w-5\" />\n                <span>Filters</span>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n                <div>\n                  <label className=\"text-sm font-medium mb-2 block\">Search</label>\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                    <Input\n                      placeholder=\"Search equipment...\"\n                      value={filters.search}\n                      onChange={(e) => handleFilterChange(\"search\", e.target.value)}\n                      className=\"pl-8\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"text-sm font-medium mb-2 block\">Type</label>\n                  <Select value={filters.type || \"all\"} onValueChange={(value) => handleFilterChange(\"type\", value)}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"All types\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All types</SelectItem>\n                      <SelectItem value=\"machine\">Machines</SelectItem>\n                      <SelectItem value=\"tool\">Tools</SelectItem>\n                      <SelectItem value=\"measuring_device\">Measuring Devices</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <label className=\"text-sm font-medium mb-2 block\">Status</label>\n                  <Select value={filters.status || \"all\"} onValueChange={(value) => handleFilterChange(\"status\", value)}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"All status\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All status</SelectItem>\n                      <SelectItem value=\"available\">Available</SelectItem>\n                      <SelectItem value=\"in_use\">In Use</SelectItem>\n                      <SelectItem value=\"maintenance\">Maintenance</SelectItem>\n                      <SelectItem value=\"broken\">Broken</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <label className=\"text-sm font-medium mb-2 block\">Ownership</label>\n                  <Select value={filters.owned || \"all\"} onValueChange={(value) => handleFilterChange(\"owned\", value)}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"All\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All</SelectItem>\n                      <SelectItem value=\"true\">Owned</SelectItem>\n                      <SelectItem value=\"false\">Rented</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"flex items-end\">\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => setFilters({ type: \"\", status: \"\", owned: \"\", search: \"\" })}\n                    className=\"w-full\"\n                  >\n                    Clear Filters\n                  </Button>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Equipment Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Equipment Fleet</CardTitle>\n              <CardDescription>\n                {equipment.length} equipment item{equipment.length !== 1 ? 's' : ''} found\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {equipment.length > 0 ? (\n                <div className=\"rounded-md border\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Equipment</TableHead>\n                        <TableHead>Type</TableHead>\n                        <TableHead>Status</TableHead>\n                        <TableHead>Ownership</TableHead>\n                        <TableHead>Location</TableHead>\n                        <TableHead>Purchase Price</TableHead>\n                        <TableHead>Daily Rate</TableHead>\n                        <TableHead className=\"w-[100px]\">Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {allResources.map((item) => {\n                        const StatusIcon = statusIcons[item.status as keyof typeof statusIcons];\n\n                        return (\n                          <TableRow key={item.id} className=\"hover:bg-muted/50\">\n                            <TableCell>\n                              <div className=\"flex items-center space-x-2\">\n                                {item.resource_type === 'vehicle' ? (\n                                  <Car className=\"h-4 w-4 text-blue-600\" />\n                                ) : (\n                                  <Package className=\"h-4 w-4 text-gray-600\" />\n                                )}\n                                <div>\n                                  <p className=\"font-medium\">{item.name}</p>\n                                  <p className=\"text-sm text-muted-foreground\">\n                                    {item.resource_type === 'vehicle'\n                                      ? `Plate: ${item.plate_number || item.inventory_no || 'No plate'}`\n                                      : (item.inventory_no || 'No inventory number')\n                                    }\n                                  </p>\n                                </div>\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              <Badge className={typeColors[item.type]}>\n                                {typeLabels[item.type]}\n                              </Badge>\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"flex items-center space-x-2\">\n                                <StatusIcon className=\"h-4 w-4\" />\n                                <Badge className={statusColors[item.status]}>\n                                  {statusLabels[item.status]}\n                                </Badge>\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              <span className={item.owned ? \"text-green-600 font-medium\" : \"text-orange-600 font-medium\"}>\n                                {item.owned ? \"Owned\" : \"Rented\"}\n                              </span>\n                            </TableCell>\n                            <TableCell>\n                              <span className=\"text-sm\">\n                                {item.current_location || \"Not specified\"}\n                              </span>\n                            </TableCell>\n                            <TableCell>\n                              <span className=\"font-medium\">\n                                €{item.purchase_price_eur?.toLocaleString() || '0'}\n                              </span>\n                            </TableCell>\n                            <TableCell>\n                              <span className=\"font-medium\">\n                                €{item.rental_price_per_day_eur?.toFixed(2) || '0'}/day\n                              </span>\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"flex items-center gap-2\">\n                                <Button\n                                  variant=\"ghost\"\n                                  size=\"sm\"\n                                  onClick={() => router.push(`/dashboard/equipment/${item.id}/edit`)}\n                                >\n                                  <Edit className=\"h-4 w-4\" />\n                                </Button>\n                                <Button\n                                  variant=\"ghost\"\n                                  size=\"sm\"\n                                  onClick={() => handleDeleteEquipment(item.id, item.name)}\n                                  className=\"text-red-600 hover:text-red-700\"\n                                >\n                                  <Trash2 className=\"h-4 w-4\" />\n                                </Button>\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })}\n                    </TableBody>\n                  </Table>\n                </div>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <Wrench className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                  <h3 className=\"mt-4 text-lg font-semibold\">No equipment found</h3>\n                  <p className=\"text-muted-foreground\">\n                    No equipment matches your current filters.\n                  </p>\n                  <Button\n                    className=\"mt-4\"\n                    onClick={() => router.push(\"/dashboard/equipment/new\")}\n                  >\n                    <Plus className=\"mr-2 h-4 w-4\" />\n                    Add First Equipment\n                  </Button>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"assignments\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 mb-6\">\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Active Assignments</p>\n                    <p className=\"text-2xl font-bold\">{assignments?.length || 0}</p>\n                    <p className=\"text-xs text-muted-foreground mt-1\">\n                      Resources currently deployed ({assignments?.filter(a => a.assignment_type === 'equipment').length || 0} equipment, {assignments?.filter(a => a.assignment_type === 'vehicle').length || 0} vehicles)\n                    </p>\n                  </div>\n                  <Truck className=\"h-8 w-8 text-blue-600\" />\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Projects Covered</p>\n                    <p className=\"text-2xl font-bold\">{new Set(assignments?.map(a => a.project_id) || []).size}</p>\n                    <p className=\"text-xs text-muted-foreground mt-1\">\n                      Active project sites\n                    </p>\n                  </div>\n                  <Activity className=\"h-8 w-8 text-green-600\" />\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Avg. Assignment Duration</p>\n                    <p className=\"text-2xl font-bold\">\n                      {analytics?.assignments?.averageDuration ? `${analytics?.assignments?.averageDuration}d` : '0d'}\n                    </p>\n                    <p className=\"text-xs text-muted-foreground mt-1\">\n                      Current assignments\n                    </p>\n                  </div>\n                  <Clock className=\"h-8 w-8 text-orange-600\" />\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Current Assignments</CardTitle>\n              <CardDescription>\n                Active equipment and vehicle assignments across projects\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {assignments && assignments.length > 0 ? (\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Resource</TableHead>\n                        <TableHead>Type</TableHead>\n                        <TableHead>Project</TableHead>\n                        <TableHead>Assigned To</TableHead>\n                        <TableHead>Start Date</TableHead>\n                        <TableHead>Expected Return</TableHead>\n                        <TableHead>Status</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {assignments.map((assignment) => {\n                        const assignedEquipment = equipment.find(eq => eq.id === assignment.equipment_id);\n                        const isVehicle = assignment.assignment_type === 'vehicle';\n                        const resourceIcon = isVehicle ? Car : Wrench;\n                        const ResourceIcon = resourceIcon;\n\n                        return (\n                          <TableRow key={assignment.id}>\n                            <TableCell>\n                              <div className=\"flex items-center space-x-3\">\n                                <div className={`p-2 rounded-full ${isVehicle ? 'bg-blue-100 text-blue-600' : 'bg-orange-100 text-orange-600'}`}>\n                                  <ResourceIcon className=\"h-4 w-4\" />\n                                </div>\n                                <div>\n                                  <div className=\"font-medium\">{assignment.equipment?.name || 'Unknown Resource'}</div>\n                                  <div className=\"text-sm text-muted-foreground\">\n                                    {assignment.equipment?.inventory_no || 'No inventory #'}\n                                  </div>\n                                </div>\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              <Badge className={`${isVehicle ? 'bg-blue-100 text-blue-800 border-blue-200' : 'bg-orange-100 text-orange-800 border-orange-200'}`}>\n                                <div className=\"flex items-center space-x-1\">\n                                  <ResourceIcon className=\"h-3 w-3\" />\n                                  <span>{isVehicle ? 'Vehicle' : 'Equipment'}</span>\n                                </div>\n                              </Badge>\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"font-medium\">{assignment.project_name || assignment.project_id}</div>\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"font-medium\">{assignment.crew_name || 'Unassigned'}</div>\n                            </TableCell>\n                            <TableCell>\n                              {assignment.from_ts ? format(new Date(assignment.from_ts), 'MMM dd, yyyy') : 'N/A'}\n                            </TableCell>\n                            <TableCell>\n                              {assignment.to_ts ? format(new Date(assignment.to_ts), 'MMM dd, yyyy') : 'Open-ended'}\n                            </TableCell>\n                            <TableCell>\n                              <Badge className={`${assignment.is_active ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}`}>\n                                {assignment.is_active ? 'Active' : 'Inactive'}\n                              </Badge>\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"flex items-center gap-2\">\n                                <Button\n                                  variant=\"ghost\"\n                                  size=\"sm\"\n                                  onClick={() => handleEditAssignment(assignment.id)}\n                                >\n                                  <Edit className=\"h-4 w-4\" />\n                                </Button>\n                                <Button\n                                  variant=\"ghost\"\n                                  size=\"sm\"\n                                  className=\"text-red-600\"\n                                  onClick={() => handleDeleteAssignment(assignment.id, assignment.equipment?.name || 'Unknown Resource')}\n                                  disabled={deleteAssignmentMutation.isPending}\n                                >\n                                  <XCircle className=\"h-4 w-4\" />\n                                </Button>\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })}\n                    </TableBody>\n                  </Table>\n                </div>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <Truck className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                  <h3 className=\"mt-4 text-lg font-semibold\">No active assignments</h3>\n                  <p className=\"text-muted-foreground\">\n                    No equipment is currently assigned to projects.\n                  </p>\n                  <Button\n                    className=\"mt-4\"\n                    onClick={() => router.push(\"/dashboard/equipment/assignments/new\")}\n                  >\n                    <Plus className=\"mr-2 h-4 w-4\" />\n                    Create Assignment\n                  </Button>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"usage\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4 mb-6\">\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Total Hours</p>\n                    <p className=\"text-2xl font-bold\">\n                      {analyticsLoading ? '...' : `${analytics?.overview?.totalHours || 0}h`}\n                    </p>\n                    <p className=\"text-xs text-muted-foreground mt-1\">\n                      Equipment usage hours\n                    </p>\n                  </div>\n                  <Clock className=\"h-8 w-8 text-blue-600\" />\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Efficiency Score</p>\n                    <p className=\"text-2xl font-bold\">\n                      {analyticsLoading ? '...' : `${analytics?.overview?.efficiencyScore || 0}%`}\n                    </p>\n                    <p className=\"text-xs text-green-600 mt-1\">\n                      Based on availability\n                    </p>\n                  </div>\n                  <TrendingUp className=\"h-8 w-8 text-green-600\" />\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Downtime</p>\n                    <p className=\"text-2xl font-bold\">\n                      {analyticsLoading ? '...' : `${analytics?.overview?.downtimeRate || 0}%`}\n                    </p>\n                    <p className=\"text-xs text-red-600 mt-1\">\n                      Maintenance + Broken\n                    </p>\n                  </div>\n                  <AlertTriangle className=\"h-8 w-8 text-yellow-600\" />\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Revenue Generated</p>\n                    <p className=\"text-2xl font-bold\">\n                      {analyticsLoading ? '...' : `€${(analytics?.overview?.revenueGenerated || 0).toLocaleString()}`}\n                    </p>\n                    <p className=\"text-xs text-green-600 mt-1\">\n                      Monthly estimate\n                    </p>\n                  </div>\n                  <BarChart3 className=\"h-8 w-8 text-purple-600\" />\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Equipment Utilization</CardTitle>\n                <CardDescription>Usage hours by equipment type</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <UsageChart data={analytics?.utilization} loading={analyticsLoading} />\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Status Distribution</CardTitle>\n                <CardDescription>Current equipment status breakdown</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <StatusPieChart data={analytics?.statusDistribution} loading={analyticsLoading} />\n              </CardContent>\n            </Card>\n          </div>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Performance Trends</CardTitle>\n              <CardDescription>Monthly equipment performance metrics</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <PerformanceChart />\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"management\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 mb-6\">\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Maintenance Due</p>\n                    <p className=\"text-2xl font-bold text-yellow-600\">{stats.maintenance}</p>\n                    <p className=\"text-xs text-muted-foreground mt-1\">\n                      Equipment needs attention\n                    </p>\n                  </div>\n                  <Settings className=\"h-8 w-8 text-yellow-600\" />\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Out of Service</p>\n                    <p className=\"text-2xl font-bold text-red-600\">{stats.broken}</p>\n                    <p className=\"text-xs text-muted-foreground mt-1\">\n                      Requiring immediate repair\n                    </p>\n                  </div>\n                  <XCircle className=\"h-8 w-8 text-red-600\" />\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Compliance Rate</p>\n                    <p className=\"text-2xl font-bold text-green-600\">\n                      {analytics?.equipment?.totalCount > 0\n                        ? `${Math.round(((analytics?.equipment?.byStatus?.available || 0) + (analytics?.equipment?.byStatus?.in_use || 0)) / analytics?.equipment?.totalCount * 100)}%`\n                        : '0%'}\n                    </p>\n                    <p className=\"text-xs text-green-600 mt-1\">\n                      Operational equipment\n                    </p>\n                  </div>\n                  <CheckCircle className=\"h-8 w-8 text-green-600\" />\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Quick Actions</CardTitle>\n                <CardDescription>Common management tasks</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <Button className=\"w-full justify-start\" onClick={() => router.push('/dashboard/equipment/new')}>\n                  <Plus className=\"mr-2 h-4 w-4\" />\n                  Add New Equipment\n                </Button>\n                <Button variant=\"outline\" className=\"w-full justify-start\">\n                  <Activity className=\"mr-2 h-4 w-4\" />\n                  Schedule Maintenance\n                </Button>\n                <Button variant=\"outline\" className=\"w-full justify-start\">\n                  <BarChart3 className=\"mr-2 h-4 w-4\" />\n                  Generate Report\n                </Button>\n                <Button variant=\"outline\" className=\"w-full justify-start\">\n                  <Settings className=\"mr-2 h-4 w-4\" />\n                  Bulk Operations\n                </Button>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Upcoming Maintenance</CardTitle>\n                <CardDescription>Equipment requiring attention</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {equipment.filter(eq => eq.status === 'maintenance').slice(0, 3).map((item) => (\n                    <div key={item.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                      <div>\n                        <div className=\"font-medium\">{item.name}</div>\n                        <div className=\"text-sm text-muted-foreground\">{item.inventory_no}</div>\n                      </div>\n                      <Badge className=\"bg-yellow-100 text-yellow-800\">\n                        {statusLabels[item.status]}\n                      </Badge>\n                    </div>\n                  ))}\n                  {equipment.filter(eq => eq.status === 'maintenance').length === 0 && (\n                    <div className=\"text-center py-6 text-muted-foreground\">\n                      No maintenance scheduled\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Equipment Categories</CardTitle>\n              <CardDescription>Manage equipment by type and category</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {Object.entries(typeLabels).map(([type, label]) => {\n                  const count = equipment.filter(eq => eq.type === type).length;\n                  const value = equipment.filter(eq => eq.type === type).reduce((sum, eq) => sum + (eq.purchase_price_eur || 0), 0);\n                  return (\n                    <div key={type} className=\"p-4 border rounded-lg\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"font-medium\">{label}</h4>\n                        <Badge className={typeColors[type]}>{count}</Badge>\n                      </div>\n                      <p className=\"text-sm text-muted-foreground\">Total Value: €{value.toLocaleString()}</p>\n                      <div className=\"mt-3 space-x-2\">\n                        <Button size=\"sm\" variant=\"outline\">View All</Button>\n                        <Button size=\"sm\" variant=\"ghost\">Manage</Button>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\n// Chart Components\ninterface UsageChartProps {\n  data?: { name: string; hours: number; revenue: number; assignments: number }[];\n  loading?: boolean;\n}\n\nconst UsageChart = ({ data = [], loading = false }: UsageChartProps) => {\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-[300px]\">\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\n      </div>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-[300px] text-muted-foreground\">\n        <div className=\"text-center\">\n          <Activity className=\"h-8 w-8 mx-auto mb-2\" />\n          <p>No utilization data available</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <BarChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip\n          formatter={(value, name) => [\n            name === 'revenue' ? `€${value}` : value,\n            name === 'hours' ? 'Hours' : name === 'revenue' ? 'Revenue' : 'Assignments'\n          ]}\n        />\n        <Legend />\n        <Bar dataKey=\"hours\" fill=\"#3b82f6\" name=\"Hours\" />\n        <Bar dataKey=\"revenue\" fill=\"#10b981\" name=\"Revenue (€)\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n\ninterface StatusPieChartProps {\n  data?: { name: string; value: number; color: string }[];\n  loading?: boolean;\n}\n\nconst StatusPieChart = ({ data = [], loading = false }: StatusPieChartProps) => {\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-[300px]\">\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\n      </div>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-[300px] text-muted-foreground\">\n        <div className=\"text-center\">\n          <PieChartIcon className=\"h-8 w-8 mx-auto mb-2\" />\n          <p>No status data available</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <PieChart>\n        <Pie\n          data={data}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={entry.color} />\n          ))}\n        </Pie>\n        <Tooltip />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\ninterface PerformanceChartProps {\n  data?: { month: string; utilization: number; efficiency: number; downtime: number }[];\n  loading?: boolean;\n}\n\nconst PerformanceChart = ({ data, loading = false }: PerformanceChartProps) => {\n  // Show message that historical data is not available yet\n  const performanceData = data || [];\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-[400px]\">\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\n      </div>\n    );\n  }\n\n  if (performanceData.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-[400px] border-2 border-dashed border-gray-300 rounded-lg\">\n        <div className=\"text-center\">\n          <BarChart3 className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n          <p className=\"text-lg font-medium text-gray-500 mb-2\">No Performance Data Available</p>\n          <p className=\"text-sm text-gray-400\">Historical performance tracking will be available once equipment assignments are active.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <LineChart data={performanceData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"month\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"utilization\" stroke=\"#3b82f6\" name=\"Utilization %\" strokeWidth={2} />\n          <Line type=\"monotone\" dataKey=\"efficiency\" stroke=\"#10b981\" name=\"Efficiency %\" strokeWidth={2} />\n          <Line type=\"monotone\" dataKey=\"downtime\" stroke=\"#ef4444\" name=\"Downtime %\" strokeWidth={2} />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};","var _excluded = [\"contextPayload\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { PureComponent, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useLegendPortal } from '../context/legendPortalContext';\nimport { DefaultLegendContent } from './DefaultLegendContent';\nimport { isNumber } from '../util/DataUtils';\nimport { getUniqPayload } from '../util/payload/getUniqPayload';\nimport { useLegendPayload } from '../context/legendPayloadContext';\nimport { useElementOffset } from '../util/useElementOffset';\nimport { useChartHeight, useChartWidth, useMargin } from '../context/chartLayoutContext';\nimport { setLegendSettings, setLegendSize } from '../state/legendSlice';\nimport { useAppDispatch } from '../state/hooks';\nfunction defaultUniqBy(entry) {\n  return entry.value;\n}\nfunction LegendContent(props) {\n  var {\n      contextPayload\n    } = props,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var finalPayload = getUniqPayload(contextPayload, props.payloadUniqBy, defaultUniqBy);\n  var contentProps = _objectSpread(_objectSpread({}, otherProps), {}, {\n    payload: finalPayload\n  });\n  if (/*#__PURE__*/React.isValidElement(props.content)) {\n    return /*#__PURE__*/React.cloneElement(props.content, contentProps);\n  }\n  if (typeof props.content === 'function') {\n    return /*#__PURE__*/React.createElement(props.content, contentProps);\n  }\n  return /*#__PURE__*/React.createElement(DefaultLegendContent, contentProps);\n}\nfunction getDefaultPosition(style, props, margin, chartWidth, chartHeight, box) {\n  var {\n    layout,\n    align,\n    verticalAlign\n  } = props;\n  var hPos, vPos;\n  if (!style || (style.left === undefined || style.left === null) && (style.right === undefined || style.right === null)) {\n    if (align === 'center' && layout === 'vertical') {\n      hPos = {\n        left: ((chartWidth || 0) - box.width) / 2\n      };\n    } else {\n      hPos = align === 'right' ? {\n        right: margin && margin.right || 0\n      } : {\n        left: margin && margin.left || 0\n      };\n    }\n  }\n  if (!style || (style.top === undefined || style.top === null) && (style.bottom === undefined || style.bottom === null)) {\n    if (verticalAlign === 'middle') {\n      vPos = {\n        top: ((chartHeight || 0) - box.height) / 2\n      };\n    } else {\n      vPos = verticalAlign === 'bottom' ? {\n        bottom: margin && margin.bottom || 0\n      } : {\n        top: margin && margin.top || 0\n      };\n    }\n  }\n  return _objectSpread(_objectSpread({}, hPos), vPos);\n}\nfunction LegendSettingsDispatcher(props) {\n  var dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(setLegendSettings(props));\n  }, [dispatch, props]);\n  return null;\n}\nfunction LegendSizeDispatcher(props) {\n  var dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(setLegendSize(props));\n    return () => {\n      dispatch(setLegendSize({\n        width: 0,\n        height: 0\n      }));\n    };\n  }, [dispatch, props]);\n  return null;\n}\nfunction LegendWrapper(props) {\n  var contextPayload = useLegendPayload();\n  var legendPortalFromContext = useLegendPortal();\n  var margin = useMargin();\n  var {\n    width: widthFromProps,\n    height: heightFromProps,\n    wrapperStyle,\n    portal: portalFromProps\n  } = props;\n  // The contextPayload is not used directly inside the hook, but we need the onBBoxUpdate call\n  // when the payload changes, therefore it's here as a dependency.\n  var [lastBoundingBox, updateBoundingBox] = useElementOffset([contextPayload]);\n  var chartWidth = useChartWidth();\n  var chartHeight = useChartHeight();\n  if (chartWidth == null || chartHeight == null) {\n    return null;\n  }\n  var maxWidth = chartWidth - (margin.left || 0) - (margin.right || 0);\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  var widthOrHeight = Legend.getWidthOrHeight(props.layout, heightFromProps, widthFromProps, maxWidth);\n  // if the user supplies their own portal, only use their defined wrapper styles\n  var outerStyle = portalFromProps ? wrapperStyle : _objectSpread(_objectSpread({\n    position: 'absolute',\n    width: (widthOrHeight === null || widthOrHeight === void 0 ? void 0 : widthOrHeight.width) || widthFromProps || 'auto',\n    height: (widthOrHeight === null || widthOrHeight === void 0 ? void 0 : widthOrHeight.height) || heightFromProps || 'auto'\n  }, getDefaultPosition(wrapperStyle, props, margin, chartWidth, chartHeight, lastBoundingBox)), wrapperStyle);\n  var legendPortal = portalFromProps !== null && portalFromProps !== void 0 ? portalFromProps : legendPortalFromContext;\n  if (legendPortal == null) {\n    return null;\n  }\n  var legendElement = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recharts-legend-wrapper\",\n    style: outerStyle,\n    ref: updateBoundingBox\n  }, /*#__PURE__*/React.createElement(LegendSettingsDispatcher, {\n    layout: props.layout,\n    align: props.align,\n    verticalAlign: props.verticalAlign,\n    itemSorter: props.itemSorter\n  }), /*#__PURE__*/React.createElement(LegendSizeDispatcher, {\n    width: lastBoundingBox.width,\n    height: lastBoundingBox.height\n  }), /*#__PURE__*/React.createElement(LegendContent, _extends({}, props, widthOrHeight, {\n    margin: margin,\n    chartWidth: chartWidth,\n    chartHeight: chartHeight,\n    contextPayload: contextPayload\n  })));\n  return /*#__PURE__*/createPortal(legendElement, legendPortal);\n}\nexport class Legend extends PureComponent {\n  static getWidthOrHeight(layout, height, width, maxWidth) {\n    if (layout === 'vertical' && isNumber(height)) {\n      return {\n        height\n      };\n    }\n    if (layout === 'horizontal') {\n      return {\n        width: width || maxWidth\n      };\n    }\n    return null;\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(LegendWrapper, this.props);\n  }\n}\n_defineProperty(Legend, \"displayName\", 'Legend');\n_defineProperty(Legend, \"defaultProps\", {\n  align: 'center',\n  iconSize: 14,\n  itemSorter: 'value',\n  layout: 'horizontal',\n  verticalAlign: 'bottom'\n});","function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * @fileOverview Default Legend Content\n */\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport { clsx } from 'clsx';\nimport { Surface } from '../container/Surface';\nimport { Symbols } from '../shape/Symbols';\nimport { adaptEventsOfChild } from '../util/types';\nvar SIZE = 32;\nexport class DefaultLegendContent extends PureComponent {\n  /**\n   * Render the path of icon\n   * @param data Data of each legend item\n   * @param iconType if defined, it will always render this icon. If undefined then it uses icon from data.type\n   * @return Path element\n   */\n  renderIcon(data, iconType) {\n    var {\n      inactiveColor\n    } = this.props;\n    var halfSize = SIZE / 2;\n    var sixthSize = SIZE / 6;\n    var thirdSize = SIZE / 3;\n    var color = data.inactive ? inactiveColor : data.color;\n    var preferredIcon = iconType !== null && iconType !== void 0 ? iconType : data.type;\n    if (preferredIcon === 'none') {\n      return null;\n    }\n    if (preferredIcon === 'plainline') {\n      return /*#__PURE__*/React.createElement(\"line\", {\n        strokeWidth: 4,\n        fill: \"none\",\n        stroke: color,\n        strokeDasharray: data.payload.strokeDasharray,\n        x1: 0,\n        y1: halfSize,\n        x2: SIZE,\n        y2: halfSize,\n        className: \"recharts-legend-icon\"\n      });\n    }\n    if (preferredIcon === 'line') {\n      return /*#__PURE__*/React.createElement(\"path\", {\n        strokeWidth: 4,\n        fill: \"none\",\n        stroke: color,\n        d: \"M0,\".concat(halfSize, \"h\").concat(thirdSize, \"\\n            A\").concat(sixthSize, \",\").concat(sixthSize, \",0,1,1,\").concat(2 * thirdSize, \",\").concat(halfSize, \"\\n            H\").concat(SIZE, \"M\").concat(2 * thirdSize, \",\").concat(halfSize, \"\\n            A\").concat(sixthSize, \",\").concat(sixthSize, \",0,1,1,\").concat(thirdSize, \",\").concat(halfSize),\n        className: \"recharts-legend-icon\"\n      });\n    }\n    if (preferredIcon === 'rect') {\n      return /*#__PURE__*/React.createElement(\"path\", {\n        stroke: \"none\",\n        fill: color,\n        d: \"M0,\".concat(SIZE / 8, \"h\").concat(SIZE, \"v\").concat(SIZE * 3 / 4, \"h\").concat(-SIZE, \"z\"),\n        className: \"recharts-legend-icon\"\n      });\n    }\n    if (/*#__PURE__*/React.isValidElement(data.legendIcon)) {\n      var iconProps = _objectSpread({}, data);\n      delete iconProps.legendIcon;\n      return /*#__PURE__*/React.cloneElement(data.legendIcon, iconProps);\n    }\n    return /*#__PURE__*/React.createElement(Symbols, {\n      fill: color,\n      cx: halfSize,\n      cy: halfSize,\n      size: SIZE,\n      sizeType: \"diameter\",\n      type: preferredIcon\n    });\n  }\n\n  /**\n   * Draw items of legend\n   * @return Items\n   */\n  renderItems() {\n    var {\n      payload,\n      iconSize,\n      layout,\n      formatter,\n      inactiveColor,\n      iconType\n    } = this.props;\n    var viewBox = {\n      x: 0,\n      y: 0,\n      width: SIZE,\n      height: SIZE\n    };\n    var itemStyle = {\n      display: layout === 'horizontal' ? 'inline-block' : 'block',\n      marginRight: 10\n    };\n    var svgStyle = {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      marginRight: 4\n    };\n    return payload.map((entry, i) => {\n      var finalFormatter = entry.formatter || formatter;\n      var className = clsx({\n        'recharts-legend-item': true,\n        [\"legend-item-\".concat(i)]: true,\n        inactive: entry.inactive\n      });\n      if (entry.type === 'none') {\n        return null;\n      }\n      var color = entry.inactive ? inactiveColor : entry.color;\n      var finalValue = finalFormatter ? finalFormatter(entry.value, entry, i) : entry.value;\n      return /*#__PURE__*/React.createElement(\"li\", _extends({\n        className: className,\n        style: itemStyle\n        // eslint-disable-next-line react/no-array-index-key\n        ,\n        key: \"legend-item-\".concat(i)\n      }, adaptEventsOfChild(this.props, entry, i)), /*#__PURE__*/React.createElement(Surface, {\n        width: iconSize,\n        height: iconSize,\n        viewBox: viewBox,\n        style: svgStyle,\n        \"aria-label\": \"\".concat(finalValue, \" legend icon\")\n      }, this.renderIcon(entry, iconType)), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"recharts-legend-item-text\",\n        style: {\n          color\n        }\n      }, finalValue));\n    });\n  }\n  render() {\n    var {\n      payload,\n      layout,\n      align\n    } = this.props;\n    if (!payload || !payload.length) {\n      return null;\n    }\n    var finalStyle = {\n      padding: 0,\n      margin: 0,\n      textAlign: layout === 'horizontal' ? align : 'left'\n    };\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"recharts-default-legend\",\n      style: finalStyle\n    }, this.renderItems());\n  }\n}\n_defineProperty(DefaultLegendContent, \"displayName\", 'Legend');\n_defineProperty(DefaultLegendContent, \"defaultProps\", {\n  align: 'center',\n  iconSize: 14,\n  inactiveColor: '#ccc',\n  layout: 'horizontal',\n  verticalAlign: 'middle'\n});","import { useAppSelector } from '../state/hooks';\nimport { selectLegendPayload } from '../state/selectors/legendSelectors';\n\n/**\n * Use this hook in Legend, or anywhere else where you want to read the current Legend items.\n * @return all Legend items ready to be rendered\n */\nexport function useLegendPayload() {\n  return useAppSelector(selectLegendPayload);\n}"],"names":[],"mappings":"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","ignoreList":[1,2,3]}