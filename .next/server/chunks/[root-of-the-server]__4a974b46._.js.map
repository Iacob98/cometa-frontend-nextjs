{"version":3,"sources":["turbopack:///[project]/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// Supabase configuration\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables. Please check your .env.local file.')\n}\n\n// Create a single supabase client for interacting with your database\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    autoRefreshToken: true,\n  },\n})\n\n// Storage bucket names from environment\nexport const STORAGE_BUCKETS = {\n  PROJECT_PHOTOS: process.env.SUPABASE_PROJECT_PHOTOS_BUCKET || 'project-photos',\n  WORK_PHOTOS: process.env.SUPABASE_WORK_PHOTOS_BUCKET || 'work-photos',\n  PROJECT_DOCUMENTS: process.env.SUPABASE_PROJECT_DOCUMENTS_BUCKET || 'project-documents',\n  HOUSE_DOCUMENTS: process.env.SUPABASE_HOUSE_DOCUMENTS_BUCKET || 'house-documents',\n  USER_AVATARS: process.env.SUPABASE_USER_AVATARS_BUCKET || 'user-avatars',\n  REPORTS: process.env.SUPABASE_REPORTS_BUCKET || 'reports',\n} as const\n\n// File upload configuration\nexport const FILE_UPLOAD_CONFIG = {\n  // Maximum file size: 10MB\n  MAX_FILE_SIZE: 10 * 1024 * 1024,\n\n  // Maximum files per batch upload\n  MAX_FILES_PER_BATCH: 5,\n\n  // Allowed file types\n  ALLOWED_FILE_TYPES: {\n    IMAGES: ['image/jpeg', 'image/png', 'image/gif', 'image/webp'],\n    DOCUMENTS: ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'],\n    SPREADSHEETS: ['application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'],\n    PLANS: ['application/pdf', 'application/dwg', 'application/dxf'],\n  },\n\n  // Get all allowed MIME types\n  getAllowedTypes: () => [\n    ...FILE_UPLOAD_CONFIG.ALLOWED_FILE_TYPES.IMAGES,\n    ...FILE_UPLOAD_CONFIG.ALLOWED_FILE_TYPES.DOCUMENTS,\n    ...FILE_UPLOAD_CONFIG.ALLOWED_FILE_TYPES.SPREADSHEETS,\n    ...FILE_UPLOAD_CONFIG.ALLOWED_FILE_TYPES.PLANS,\n  ],\n} as const\n\n// File validation utilities\nexport const validateFile = (file: File) => {\n  const errors: string[] = []\n\n  // Check file size\n  if (file.size > FILE_UPLOAD_CONFIG.MAX_FILE_SIZE) {\n    errors.push(`File size must be less than ${FILE_UPLOAD_CONFIG.MAX_FILE_SIZE / (1024 * 1024)}MB`)\n  }\n\n  // Check file type\n  const allowedTypes = FILE_UPLOAD_CONFIG.getAllowedTypes()\n  if (!allowedTypes.includes(file.type)) {\n    errors.push(`File type ${file.type} is not allowed`)\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n  }\n}\n\n// Generate secure file name\nexport const generateSecureFileName = (originalFileName: string, userId?: string) => {\n  const timestamp = Date.now()\n  const randomString = Math.random().toString(36).substring(2, 15)\n  const fileExtension = originalFileName.split('.').pop()\n  const baseName = originalFileName.split('.')[0].toLowerCase().replace(/[^a-z0-9]/g, '-')\n\n  const prefix = userId ? `${userId}_` : ''\n  return `${prefix}${baseName}_${timestamp}_${randomString}.${fileExtension}`\n}\n\n// Get file category based on bucket\nexport const getFileCategoryFromBucket = (bucketName: string) => {\n  const bucketMap = {\n    [STORAGE_BUCKETS.PROJECT_PHOTOS]: 'project-photo',\n    [STORAGE_BUCKETS.WORK_PHOTOS]: 'work-photo',\n    [STORAGE_BUCKETS.PROJECT_DOCUMENTS]: 'project-document',\n    [STORAGE_BUCKETS.HOUSE_DOCUMENTS]: 'house-document',\n    [STORAGE_BUCKETS.USER_AVATARS]: 'user-avatar',\n    [STORAGE_BUCKETS.REPORTS]: 'report',\n  } as const\n\n  return bucketMap[bucketName as keyof typeof bucketMap] || 'unknown'\n}"],"names":[],"mappings":"o4CAWO,IAAM,EAAW,CAAA,EAAA,AAXxB,EAAA,CAAA,CAAA,OAWwB,YAAA,AAAY,EAR9B,AAQ+B,aAAa,8BAP5C,mNAO6D,CACjE,KAAM,CACJ,gBAAgB,EAChB,kBAAkB,CACpB,CACF,GAIkB,QAAQ,GAAG,CAAC,8BAA8B,CAC7C,GADiD,KACzC,GAAG,CAAC,2BAA2B,CACjC,GADqC,KAC7B,GAAG,CAAC,iCAAiC,CAC/C,GADmD,KAC3C,GAAG,CAAC,+BAA+B,CAC9C,GADkD,KAC1C,GAAG,CAAC,4BAA4B,CAC7C,GADiD,KACzC,GAAG,CAAC,uBAAuB,CAIvC,GAJ2C,CAIrC,EAAqB,CAEhC,cAAe,KAAK,IAGpB,GAH2B,iBAGN,EAGrB,mBAAoB,CAClB,OAAQ,CAAC,aAAc,YAAa,YAAa,aAAa,CAC9D,UAAW,CAAC,kBAAmB,qBAAsB,0EAA0E,CAC/H,aAAc,CAAC,2BAA4B,oEAAoE,CAC/G,MAAO,CAAC,kBAAmB,kBAAmB,kBAAkB,AAClE,EAGA,gBAAiB,IAAM,IAClB,EAAmB,kBAAkB,CAAC,MAAM,IAC5C,EAAmB,kBAAkB,CAAC,SAAS,IAC/C,EAAmB,kBAAkB,CAAC,YAAY,IAClD,EAAmB,kBAAkB,CAAC,KAAK,CAC/C,AACH,EAwBa,EAAyB,CAAC,EAA0B,KAC/D,IAAM,EAAY,KAAK,GAAG,GACpB,EAAe,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,EAAG,IACvD,EAAgB,EAAiB,KAAK,CAAC,KAAK,GAAG,GAC/C,EAAW,EAAiB,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,GAAG,OAAO,CAAC,aAAc,KAE9E,EAAS,EAAS,CAAA,EAAG,EAAO,CAAC,CAAC,CAAG,GACvC,MAAO,CAAA,EAAG,EAAA,EAAS,EAAS,CAAC,EAAE,EAAU,CAAC,EAAE,EAAa,CAAC,EAAE,EAAA,CAAe,AAC7E"}