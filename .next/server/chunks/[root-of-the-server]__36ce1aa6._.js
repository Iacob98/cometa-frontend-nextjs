module.exports=[18622,(e,r,t)=>{r.exports=e.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},56704,(e,r,t)=>{r.exports=e.x("next/dist/server/app-render/work-async-storage.external.js",()=>require("next/dist/server/app-render/work-async-storage.external.js"))},32319,(e,r,t)=>{r.exports=e.x("next/dist/server/app-render/work-unit-async-storage.external.js",()=>require("next/dist/server/app-render/work-unit-async-storage.external.js"))},20635,(e,r,t)=>{r.exports=e.x("next/dist/server/app-render/action-async-storage.external.js",()=>require("next/dist/server/app-render/action-async-storage.external.js"))},24725,(e,r,t)=>{r.exports=e.x("next/dist/server/app-render/after-task-async-storage.external.js",()=>require("next/dist/server/app-render/after-task-async-storage.external.js"))},70406,(e,r,t)=>{r.exports=e.x("next/dist/compiled/@opentelemetry/api",()=>require("next/dist/compiled/@opentelemetry/api"))},93695,(e,r,t)=>{r.exports=e.x("next/dist/shared/lib/no-fallback-error.external.js",()=>require("next/dist/shared/lib/no-fallback-error.external.js"))},61724,(e,r,t)=>{r.exports=e.x("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js"))},64952,(e,r,t)=>{},86532,e=>{"use strict";e.s(["handler",()=>I,"patchFetch",()=>N,"routeModule",()=>g,"serverHooks",()=>j,"workAsyncStorage",()=>y,"workUnitAsyncStorage",()=>C],86532);var r=e.i(47909),t=e.i(74017),s=e.i(96250),a=e.i(59756),n=e.i(61916),o=e.i(69741),i=e.i(16795),l=e.i(87718),u=e.i(95169),d=e.i(47587),c=e.i(66012),p=e.i(70101),m=e.i(26937),x=e.i(10372),w=e.i(93695);e.i(52474);var f=e.i(220);e.s(["DELETE",()=>b,"GET",()=>v,"POST",()=>_],23590);var h=e.i(89171);let R=(0,e.i(87464).createClient)("https://oijmohlhdxoawzvctnxx.supabase.co",process.env.SUPABASE_SERVICE_ROLE_KEY||"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9pam1vaGxoZHhvYXd6dmN0bnh4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUyODUzMjcsImV4cCI6MjA3MDg2MTMyN30.vw9G5hcSfd-m5AZqeGlmzGvqc9ImYioDFR-AsiHoFro");async function v(e,{params:r}){try{let{id:e}=await r;if(!e)return h.NextResponse.json({error:"Crew ID is required"},{status:400});let{data:t,error:s}=await R.from("crew_members").select(`
        id,
        crew_id,
        user_id,
        role,
        joined_at,
        user:users(id, first_name, last_name, email, role)
      `).eq("crew_id",e);if(s)return console.error("Supabase crew members fetch error:",s),h.NextResponse.json({error:"Failed to fetch crew members from database"},{status:500});let a=(t||[]).map(e=>({...e,role_in_crew:e.role,user_id:e.user_id,first_name:e.user?.first_name,last_name:e.user?.last_name,full_name:`${e.user?.first_name||""} ${e.user?.last_name||""}`.trim(),email:e.user?.email}));return h.NextResponse.json({members:a})}catch(e){return console.error("Crew members GET API error:",e),h.NextResponse.json({error:"Failed to fetch crew members"},{status:500})}}async function _(e,{params:r}){try{let{id:t}=await r,s=await e.json();if(!t)return h.NextResponse.json({error:"Crew ID is required"},{status:400});let{user_id:a,role_in_crew:n="member"}=s;if(!a)return h.NextResponse.json({error:"User ID is required"},{status:400});let{data:o}=await R.from("crew_members").select("id").eq("crew_id",t).eq("user_id",a).single();if(o)return h.NextResponse.json({error:"User is already a member of this crew"},{status:409});let{data:i,error:l}=await R.from("crew_members").insert({crew_id:t,user_id:a,role:n,joined_at:new Date().toISOString()}).select(`
        id,
        crew_id,
        user_id,
        role,
        joined_at,
        user:users(id, first_name, last_name, email, role)
      `).single();if(l){if(console.error("Supabase crew member add error:",l),"23503"===l.code)return h.NextResponse.json({error:"Invalid crew or user ID"},{status:400});return h.NextResponse.json({error:"Failed to add member to crew"},{status:500})}let u={...i,role_in_crew:i.role,user_id:i.user_id,first_name:i.user?.first_name,last_name:i.user?.last_name,full_name:`${i.user?.first_name||""} ${i.user?.last_name||""}`.trim(),email:i.user?.email};return h.NextResponse.json({message:"Member added to crew successfully",member:u})}catch(e){return console.error("Crew members POST API error:",e),h.NextResponse.json({error:"Failed to add member to crew"},{status:500})}}async function b(e,{params:r}){try{let{id:t}=await r,{searchParams:s}=new URL(e.url),a=s.get("user_id");if(!t)return h.NextResponse.json({error:"Crew ID is required"},{status:400});if(!a)return h.NextResponse.json({error:"User ID is required"},{status:400});let{error:n}=await R.from("crew_members").delete().eq("crew_id",t).eq("user_id",a);if(n)return console.error("Supabase crew member remove error:",n),h.NextResponse.json({error:"Failed to remove member from crew"},{status:500});return h.NextResponse.json({message:"Member removed from crew successfully"})}catch(e){return console.error("Crew members DELETE API error:",e),h.NextResponse.json({error:"Failed to remove member from crew"},{status:500})}}var E=e.i(23590);let g=new r.AppRouteRouteModule({definition:{kind:t.RouteKind.APP_ROUTE,page:"/api/crews/[id]/members/route",pathname:"/api/crews/[id]/members",filename:"route",bundlePath:""},distDir:".next",relativeProjectDir:"",resolvedPagePath:"[project]/src/app/api/crews/[id]/members/route.ts",nextConfigOutput:"",userland:E}),{workAsyncStorage:y,workUnitAsyncStorage:C,serverHooks:j}=g;function N(){return(0,s.patchFetch)({workAsyncStorage:y,workUnitAsyncStorage:C})}async function I(e,r,s){var h;let R="/api/crews/[id]/members/route";R=R.replace(/\/index$/,"")||"/";let v=await g.prepare(e,r,{srcPage:R,multiZoneDraftMode:!1});if(!v)return r.statusCode=400,r.end("Bad Request"),null==s.waitUntil||s.waitUntil.call(s,Promise.resolve()),null;let{buildId:_,params:b,nextConfig:E,isDraftMode:y,prerenderManifest:C,routerServerContext:j,isOnDemandRevalidate:N,revalidateOnlyGenerated:I,resolvedPathname:A}=v,q=(0,o.normalizeAppPath)(R),S=!!(C.dynamicRoutes[q]||C.routes[A]);if(S&&!y){let e=!!C.routes[A],r=C.dynamicRoutes[q];if(r&&!1===r.fallback&&!e)throw new w.NoFallbackError}let T=null;!S||g.isDev||y||(T="/index"===(T=A)?"/":T);let O=!0===g.isDev||!S,P=S&&!O,D=e.method||"GET",U=(0,n.getTracer)(),k=U.getActiveScopeSpan(),M={params:b,prerenderManifest:C,renderOpts:{experimental:{cacheComponents:!!E.experimental.cacheComponents,authInterrupts:!!E.experimental.authInterrupts},supportsDynamicResponse:O,incrementalCache:(0,a.getRequestMeta)(e,"incrementalCache"),cacheLifeProfiles:null==(h=E.experimental)?void 0:h.cacheLife,isRevalidate:P,waitUntil:s.waitUntil,onClose:e=>{r.on("close",e)},onAfterTaskError:void 0,onInstrumentationRequestError:(r,t,s)=>g.onRequestError(e,r,s,j)},sharedContext:{buildId:_}},H=new i.NodeNextRequest(e),F=new i.NodeNextResponse(r),$=l.NextRequestAdapter.fromNodeNextRequest(H,(0,l.signalFromNodeResponse)(r));try{let o=async t=>g.handle($,M).finally(()=>{if(!t)return;t.setAttributes({"http.status_code":r.statusCode,"next.rsc":!1});let s=U.getRootSpanAttributes();if(!s)return;if(s.get("next.span_type")!==u.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${s.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let a=s.get("next.route");if(a){let e=`${D} ${a}`;t.setAttributes({"next.route":a,"http.route":a,"next.span_name":e}),t.updateName(e)}else t.updateName(`${D} ${e.url}`)}),i=async n=>{var i,l;let u=async({previousCacheEntry:t})=>{try{if(!(0,a.getRequestMeta)(e,"minimalMode")&&N&&I&&!t)return r.statusCode=404,r.setHeader("x-nextjs-cache","REVALIDATED"),r.end("This page could not be found"),null;let i=await o(n);e.fetchMetrics=M.renderOpts.fetchMetrics;let l=M.renderOpts.pendingWaitUntil;l&&s.waitUntil&&(s.waitUntil(l),l=void 0);let u=M.renderOpts.collectedTags;if(!S)return await (0,c.sendResponse)(H,F,i,M.renderOpts.pendingWaitUntil),null;{let e=await i.blob(),r=(0,p.toNodeOutgoingHttpHeaders)(i.headers);u&&(r[x.NEXT_CACHE_TAGS_HEADER]=u),!r["content-type"]&&e.type&&(r["content-type"]=e.type);let t=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=x.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,s=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=x.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:f.CachedRouteKind.APP_ROUTE,status:i.status,body:Buffer.from(await e.arrayBuffer()),headers:r},cacheControl:{revalidate:t,expire:s}}}}catch(r){throw(null==t?void 0:t.isStale)&&await g.onRequestError(e,r,{routerKind:"App Router",routePath:R,routeType:"route",revalidateReason:(0,d.getRevalidateReason)({isRevalidate:P,isOnDemandRevalidate:N})},j),r}},w=await g.handleResponse({req:e,nextConfig:E,cacheKey:T,routeKind:t.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:C,isRoutePPREnabled:!1,isOnDemandRevalidate:N,revalidateOnlyGenerated:I,responseGenerator:u,waitUntil:s.waitUntil});if(!S)return null;if((null==w||null==(i=w.value)?void 0:i.kind)!==f.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==w||null==(l=w.value)?void 0:l.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,a.getRequestMeta)(e,"minimalMode")||r.setHeader("x-nextjs-cache",N?"REVALIDATED":w.isMiss?"MISS":w.isStale?"STALE":"HIT"),y&&r.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let h=(0,p.fromNodeOutgoingHttpHeaders)(w.value.headers);return(0,a.getRequestMeta)(e,"minimalMode")&&S||h.delete(x.NEXT_CACHE_TAGS_HEADER),!w.cacheControl||r.getHeader("Cache-Control")||h.get("Cache-Control")||h.set("Cache-Control",(0,m.getCacheControlHeader)(w.cacheControl)),await (0,c.sendResponse)(H,F,new Response(w.value.body,{headers:h,status:w.value.status||200})),null};k?await i(k):await U.withPropagatedContext(e.headers,()=>U.trace(u.BaseServerSpan.handleRequest,{spanName:`${D} ${e.url}`,kind:n.SpanKind.SERVER,attributes:{"http.method":D,"http.target":e.url}},i))}catch(r){if(k||r instanceof w.NoFallbackError||await g.onRequestError(e,r,{routerKind:"App Router",routePath:q,routeType:"route",revalidateReason:(0,d.getRevalidateReason)({isRevalidate:P,isOnDemandRevalidate:N})}),S)throw r;return await (0,c.sendResponse)(H,F,new Response(null,{status:500})),null}}},36145,e=>{e.v(e=>Promise.resolve().then(()=>e(2808)))}];

//# sourceMappingURL=%5Broot-of-the-server%5D__36ce1aa6._.js.map