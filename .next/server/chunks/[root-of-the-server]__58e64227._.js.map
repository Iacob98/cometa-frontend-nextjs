{"version":3,"sources":["turbopack:///[project]/src/app/api/project-preparation/route.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const projectId = searchParams.get('project_id');\n\n    if (!projectId) {\n      return NextResponse.json(\n        { error: 'Project ID is required' },\n        { status: 400 }\n      );\n    }\n\n    // Get project basic info from Supabase\n    const { data: project, error: projectError } = await supabase\n      .from('projects')\n      .select(`\n        id,\n        name,\n        customer,\n        city,\n        address,\n        contact_24h,\n        start_date,\n        end_date_plan,\n        status,\n        total_length_m,\n        base_rate_per_m,\n        pm_user_id,\n        manager:users!projects_pm_user_id_fkey(\n          id,\n          first_name,\n          last_name\n        )\n      `)\n      .eq('id', projectId)\n      .single();\n\n    if (projectError) {\n      if (projectError.code === 'PGRST116') {\n        return NextResponse.json(\n          { error: 'Project not found' },\n          { status: 404 }\n        );\n      }\n      console.error('Supabase project query error:', projectError);\n      return NextResponse.json(\n        { error: 'Failed to fetch project data' },\n        { status: 500 }\n      );\n    }\n\n    // Get real preparation data from database\n    const [facilitiesResult, housingResult, plansResult, utilityContactsResult] = await Promise.all([\n      // Get facilities\n      supabase\n        .from('facilities')\n        .select(`\n          id,\n          name,\n          type,\n          floor,\n          access_info,\n          contact_info,\n          notes,\n          created_at\n        `)\n        .eq('project_id', projectId)\n        .order('created_at', { ascending: false }),\n\n      // Get housing units\n      supabase\n        .from('housing_units')\n        .select(`\n          id,\n          unit_number,\n          unit_type,\n          floor,\n          room_count,\n          area_sqm,\n          contact_person,\n          contact_phone,\n          access_instructions,\n          installation_notes,\n          status,\n          created_at\n        `)\n        .eq('project_id', projectId)\n        .order('created_at', { ascending: false }),\n\n      // Get project plans\n      supabase\n        .from('project_plans')\n        .select(`\n          id,\n          title,\n          description,\n          plan_type,\n          filename,\n          file_size,\n          file_url,\n          file_path,\n          uploaded_at\n        `)\n        .eq('project_id', projectId)\n        .order('uploaded_at', { ascending: false }),\n\n      // Get utility contacts\n      supabase\n        .from('utility_contacts')\n        .select(`\n          id,\n          kind,\n          organization,\n          contact_person,\n          phone,\n          email,\n          notes,\n          created_at\n        `)\n        .eq('project_id', projectId)\n        .order('created_at', { ascending: false })\n    ]);\n\n    // Check for errors\n    if (facilitiesResult.error) {\n      console.error('Facilities query error:', facilitiesResult.error);\n    }\n    if (housingResult.error) {\n      console.error('Housing query error:', housingResult.error);\n    }\n    if (plansResult.error) {\n      console.error('Plans query error:', plansResult.error);\n    }\n    if (utilityContactsResult.error) {\n      console.error('Utility contacts query error:', utilityContactsResult.error);\n    }\n\n    // Calculate completion percentage based on real data\n    const totalItems = (facilitiesResult.data?.length || 0) +\n                      (housingResult.data?.length || 0) +\n                      (plansResult.data?.length || 0) +\n                      (utilityContactsResult.data?.length || 0);\n\n    const completedHousing = housingResult.data?.filter(h => h.status === 'completed').length || 0;\n    const completionPercentage = totalItems > 0 ? Math.round((completedHousing / totalItems) * 100) : 0;\n\n    const preparationData = {\n      project: {\n        ...project,\n        manager_name: project.manager ? `${project.manager.first_name} ${project.manager.last_name}` : null,\n      },\n      preparation: {\n        phase: completionPercentage > 75 ? 'ready' : completionPercentage > 25 ? 'planning' : 'initial',\n        completion_percentage: completionPercentage,\n        facilities: facilitiesResult.data || [],\n        housing: housingResult.data || [],\n        plans: plansResult.data || [],\n        utility_contacts: utilityContactsResult.data || []\n      }\n    };\n\n    return NextResponse.json(preparationData);\n  } catch (error) {\n    console.error('Project preparation API error:', error);\n    return NextResponse.json(\n      {\n        error: 'Internal server error',\n        details: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { project_id, item_type, data } = body;\n\n    if (!project_id || !item_type || !data) {\n      return NextResponse.json(\n        { error: 'Project ID, item type, and data are required' },\n        { status: 400 }\n      );\n    }\n\n    let result;\n    let error;\n\n    // Create different types of preparation items based on type\n    switch (item_type) {\n      case 'facility':\n        ({ data: result, error } = await supabase\n          .from('facilities')\n          .insert({\n            project_id,\n            name: data.name,\n            type: data.type || 'apartment',\n            floor: data.floor,\n            access_info: data.access_info,\n            contact_info: data.contact_info,\n            notes: data.notes\n          })\n          .select()\n          .single());\n        break;\n\n      case 'housing_unit':\n        ({ data: result, error } = await supabase\n          .from('housing_units')\n          .insert({\n            project_id,\n            unit_number: data.unit_number,\n            unit_type: data.unit_type || 'apartment',\n            floor: data.floor,\n            room_count: data.room_count,\n            area_sqm: data.area_sqm,\n            contact_person: data.contact_person,\n            contact_phone: data.contact_phone,\n            access_instructions: data.access_instructions,\n            installation_notes: data.installation_notes,\n            status: data.status || 'pending'\n          })\n          .select()\n          .single());\n        break;\n\n      case 'utility_contact':\n        ({ data: result, error } = await supabase\n          .from('utility_contacts')\n          .insert({\n            project_id,\n            kind: data.kind,\n            organization: data.organization,\n            contact_person: data.contact_person,\n            phone: data.phone,\n            email: data.email,\n            notes: data.notes\n          })\n          .select()\n          .single());\n        break;\n\n      case 'project_plan':\n        ({ data: result, error } = await supabase\n          .from('project_plans')\n          .insert({\n            project_id,\n            title: data.title,\n            description: data.description,\n            plan_type: data.plan_type,\n            filename: data.filename,\n            file_size: data.file_size,\n            file_url: data.file_url,\n            file_path: data.file_path\n          })\n          .select()\n          .single());\n        break;\n\n      default:\n        return NextResponse.json(\n          { error: 'Invalid item type. Must be one of: facility, housing_unit, utility_contact, project_plan' },\n          { status: 400 }\n        );\n    }\n\n    if (error) {\n      console.error(`Supabase ${item_type} creation error:`, error);\n      return NextResponse.json(\n        { error: `Failed to create ${item_type} in database` },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json({\n      message: `${item_type.replace('_', ' ')} added successfully`,\n      item: result,\n      type: item_type\n    }, { status: 201 });\n  } catch (error) {\n    console.error('Project preparation POST error:', error);\n    return NextResponse.json(\n      { error: 'Failed to create preparation item' },\n      { status: 500 }\n    );\n  }\n}","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/project-preparation/route\",\n        pathname: \"/api/project-preparation\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/project-preparation/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/project-preparation/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[1]}